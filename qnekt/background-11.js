LavaPack.loadBundle([[74,{"../../../../../shared/constants/app":7316},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n={methodNames:[e("../../../../../shared/constants/app").MESSAGE_TYPE.GET_PROVIDER_STATE],implementation:async function(e,t,r,n,{getProviderState:s}){return t.result={...await s(e.origin)},n()},hookNames:{getProviderState:!0}};r.default=n}}},{package:"$root$"}],[75,{"./add-ethereum-chain":71,"./btc":72,"./eth-accounts":73,"./get-provider-state":74,"./log-web3-shim-usage":76,"./request-accounts":77,"./send-metadata":78,"./switch-ethereum-chain":79,"./watch-asset":80},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=u(e("./add-ethereum-chain")),s=u(e("./eth-accounts")),o=u(e("./get-provider-state")),i=u(e("./log-web3-shim-usage")),a=u(e("./request-accounts")),c=u(e("./send-metadata")),l=u(e("./switch-ethereum-chain")),d=u(e("./watch-asset")),h=e("./btc");function u(e){return e&&e.__esModule?e:{default:e}}var g=[n.default,s.default,o.default,i.default,a.default,c.default,l.default,d.default,h.btcEcRecover,h.btcSign,h.btcPersonalSign,h.btcSignTypedData_v1,h.btcSignTypedData_v3,h.btcSignTypedData_v4];r.default=g}}},{package:"$root$"}],[76,{"../../../../../shared/constants/app":7316,"../../../../../shared/constants/metametrics":7321},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("../../../../../shared/constants/app"),s=e("../../../../../shared/constants/metametrics");var o={methodNames:[n.MESSAGE_TYPE.LOG_WEB3_SHIM_USAGE],implementation:function(e,t,r,n,{sendMetrics:o,getWeb3ShimUsageState:i,setWeb3ShimUsageRecorded:a}){const{origin:c}=e;i(c)===undefined&&(a(c),o({event:"Website Accessed window.web3 Shim",category:s.EVENT.CATEGORIES.INPAGE_PROVIDER,referrer:{url:c}},{excludeMetaMetricsId:!0}));return t.result=!0,n()},hookNames:{sendMetrics:!0,getWeb3ShimUsageState:!0,setWeb3ShimUsageRecorded:!0}};r.default=o}}},{package:"$root$"}],[77,{"../../../../../shared/constants/app":7316,"eth-rpc-errors":2815},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("eth-rpc-errors"),s=e("../../../../../shared/constants/app");var o={methodNames:[s.MESSAGE_TYPE.ETH_REQUEST_ACCOUNTS],implementation:async function(e,t,r,o,{origin:a,getAccounts:c,getUnlockPromise:l,hasPermission:d,requestAccountsPermission:h}){if(i.has(a))return t.error=n.ethErrors.rpc.resourceUnavailable(`Already processing ${s.MESSAGE_TYPE.ETH_REQUEST_ACCOUNTS}. Please wait.`),o();if(d(s.MESSAGE_TYPE.ETH_ACCOUNTS)){try{i.add(a),await l(!0),t.result=await c(),o()}catch(e){o(e)}finally{i.delete(a)}return undefined}try{await h()}catch(e){return t.error=e,o()}const u=await c();u.length>0?t.result=u:t.error=n.ethErrors.rpc.internal("Accounts unexpectedly unavailable. Please report this bug.");return o()},hookNames:{origin:!0,getAccounts:!0,getUnlockPromise:!0,hasPermission:!0,requestAccountsPermission:!0}};r.default=o;const i=new Set}}},{package:"$root$"}],[78,{"../../../../../shared/constants/app":7316,"eth-rpc-errors":2815},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("eth-rpc-errors");var s={methodNames:[e("../../../../../shared/constants/app").MESSAGE_TYPE.SEND_METADATA],implementation:function(e,t,r,s,{addSubjectMetadata:o,subjectType:i}){const{origin:a,params:c}=e;if(!c||"object"!=typeof c||Array.isArray(c))return s(n.ethErrors.rpc.invalidParams({data:c}));{const{icon:e=null,name:t=null,...r}=c;o({...r,iconUrl:e,name:t,subjectType:i,origin:a})}return t.result=!0,s()},hookNames:{addSubjectMetadata:!0,subjectType:!0}};r.default=s}}},{package:"$root$"}],[79,{"../../../../../shared/constants/app":7316,"../../../../../shared/constants/network":7322,"../../../../../shared/modules/network.utils":7338,"eth-rpc-errors":2815,lodash:5584},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("eth-rpc-errors"),s=e("lodash"),o=e("../../../../../shared/constants/app"),i=e("../../../../../shared/constants/network"),a=e("../../../../../shared/modules/network.utils");var c={methodNames:[o.MESSAGE_TYPE.SWITCH_ETHEREUM_CHAIN],implementation:async function(e,t,r,c,{getCurrentChainId:l,findCustomRpcBy:d,setProviderType:h,updateRpcTarget:u,requestUserApproval:g}){var p;if(null===(p=e.params)||void 0===p||!p[0]||"object"!=typeof e.params[0])return c(n.ethErrors.rpc.invalidParams({message:`Expected single, object parameter. Received:\n${JSON.stringify(e.params)}`}));const{origin:f}=e,{chainId:m}=e.params[0],y=Object.keys((0,s.omit)(e.params[0],["chainId"]));if(y.length>0)return c(n.ethErrors.rpc.invalidParams({message:`Received unexpected keys on object parameter. Unsupported keys:\n${y}`}));const C="string"==typeof m&&m.toLowerCase();if(!(0,a.isPrefixedFormattedHexString)(C))return c(n.ethErrors.rpc.invalidParams({message:`Expected 0x-prefixed, unpadded, non-zero hexadecimal string 'chainId'. Received:\n${m}`}));if(!(0,a.isSafeChainId)(parseInt(C,16)))return c(n.ethErrors.rpc.invalidParams({message:`Invalid chain ID "${C}": numerical value greater than max safe value. Received:\n${m}`}));const k=function(e,t){if(e in i.CHAIN_ID_TO_TYPE_MAP)return{chainId:e,ticker:i.ETH_SYMBOL,nickname:i.NETWORK_TO_NAME_MAP[e],rpcUrl:i.CHAIN_ID_TO_RPC_URL_MAP[e],type:i.CHAIN_ID_TO_TYPE_MAP[e]};return t({chainId:e})}(C,d);if(k){if(l()===C)return t.result=null,c();try{const e=await g({origin:f,type:o.MESSAGE_TYPE.SWITCH_ETHEREUM_CHAIN,requestData:k});m in i.CHAIN_ID_TO_TYPE_MAP?h(e.type):await u(e),t.result=null}catch(e){return c(e)}return c()}return c(n.ethErrors.provider.custom({code:4902,message:`Unrecognized chain ID "${m}". Try adding the chain using ${o.MESSAGE_TYPE.ADD_ETHEREUM_CHAIN} first.`}))},hookNames:{getCurrentChainId:!0,findCustomRpcBy:!0,setProviderType:!0,updateRpcTarget:!0,requestUserApproval:!0}};r.default=c}}},{package:"$root$"}],[8,{"../../../shared/constants/time":7327,"../metamask-controller":89,"@metamask/obs-store":1608,events:2435},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n,s=(n=e("events"))&&n.__esModule?n:{default:n},o=e("@metamask/obs-store"),i=e("../metamask-controller"),a=e("../../../shared/constants/time");class c extends s.default{constructor(e={}){const{addUnlockListener:t,isUnlocked:r,initState:n,onInactiveTimeout:s,showUnlockRequest:i,preferencesStore:a,qrHardwareStore:c}=e;super(),this.onInactiveTimeout=s||(()=>undefined),this.store=new o.ObservableStore({timeoutMinutes:0,connectedStatusPopoverHasBeenShown:!0,defaultHomeActiveTabName:null,browserEnvironment:{},popupGasPollTokens:[],notificationGasPollTokens:[],fullScreenGasPollTokens:[],recoveryPhraseReminderHasBeenShown:!1,recoveryPhraseReminderLastShown:(new Date).getTime(),collectiblesDetectionNoticeDismissed:!1,enableEIP1559V2NoticeDismissed:!1,showTestnetMessageInDropdown:!0,trezorModel:null,...n,qrHardware:{},collectiblesDropdownState:{},usedNetworks:{"0x1":!0,"0x2a":!0,"0x3":!0,"0x4":!0,"0x5":!0,"0x539":!0}}),this.timer=null,this.isUnlocked=r,this.waitingForUnlock=[],t(this.handleUnlock.bind(this)),this._showUnlockRequest=i,a.subscribe((({preferences:e})=>{this.store.getState().timeoutMinutes!==e.autoLockTimeLimit&&this._setInactiveTimeout(e.autoLockTimeLimit)})),c.subscribe((e=>{this.store.updateState({qrHardware:e})}));const{preferences:l}=a.getState();this._setInactiveTimeout(l.autoLockTimeLimit)}getUnlockPromise(e){return new Promise((t=>{this.isUnlocked()?t():this.waitForUnlock(t,e)}))}waitForUnlock(e,t){this.waitingForUnlock.push({resolve:e}),this.emit(i.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE),t&&this._showUnlockRequest()}handleUnlock(){if(this.waitingForUnlock.length>0){for(;this.waitingForUnlock.length>0;)this.waitingForUnlock.shift().resolve();this.emit(i.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE)}}setDefaultHomeActiveTabName(e){this.store.updateState({defaultHomeActiveTabName:e})}setConnectedStatusPopoverHasBeenShown(){this.store.updateState({connectedStatusPopoverHasBeenShown:!0})}setRecoveryPhraseReminderHasBeenShown(){this.store.updateState({recoveryPhraseReminderHasBeenShown:!0})}setRecoveryPhraseReminderLastShown(e){this.store.updateState({recoveryPhraseReminderLastShown:e})}setLastActiveTime(){this._resetTimer()}_setInactiveTimeout(e){this.store.updateState({timeoutMinutes:e}),this._resetTimer()}_resetTimer(){const{timeoutMinutes:e}=this.store.getState();this.timer&&clearTimeout(this.timer),e&&(this.timer=setTimeout((()=>this.onInactiveTimeout()),e*a.MINUTE))}setBrowserEnvironment(e,t){this.store.updateState({browserEnvironment:{os:e,browser:t}})}addPollingToken(e,t){const r=this.store.getState()[t];this.store.updateState({[t]:[...r,e]})}removePollingToken(e,t){const r=this.store.getState()[t];this.store.updateState({[t]:r.filter((t=>t!==e))})}clearPollingTokens(){this.store.updateState({popupGasPollTokens:[],notificationGasPollTokens:[],fullScreenGasPollTokens:[]})}setShowTestnetMessageInDropdown(e){this.store.updateState({showTestnetMessageInDropdown:e})}setTrezorModel(e){this.store.updateState({trezorModel:e})}setCollectiblesDetectionNoticeDismissed(e){this.store.updateState({collectiblesDetectionNoticeDismissed:e})}setEnableEIP1559V2NoticeDismissed(e){this.store.updateState({enableEIP1559V2NoticeDismissed:e})}updateCollectibleDropDownState(e){this.store.updateState({collectiblesDropdownState:e})}setFirstTimeUsedNetwork(e){const t=this.store.getState(),{usedNetworks:r}=t;r[e]=!0,this.store.updateState({usedNetworks:r})}}r.default=c}}},{package:"$root$"}],[80,{"../../../../../shared/constants/app":7316,"eth-rpc-errors":2815},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("eth-rpc-errors"),s=e("../../../../../shared/constants/app");var o={methodNames:[s.MESSAGE_TYPE.WATCH_ASSET,s.MESSAGE_TYPE.WATCH_ASSET_LEGACY],implementation:async function(e,t,r,s,{handleWatchAssetRequest:o}){try{const{options:r,type:n}=e.params,i=await o(r,n);return await i.result,t.result=!0,s()}catch(e){return"User rejected to watch the asset."===e.message?s(n.ethErrors.provider.userRejectedRequest()):s(e)}},hookNames:{handleWatchAssetRequest:!0}};r.default=o}}},{package:"$root$"}],[81,{"./createMethodMiddleware":70},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0});var n=e("./createMethodMiddleware");Object.keys(n).forEach((function(e){"default"!==e&&"__esModule"!==e&&(e in r&&r[e]===n[e]||Object.defineProperty(r,e,{enumerable:!0,get:function(){return n[e]}}))}))}}},{package:"$root$"}],[82,{"eth-keyring-controller":2798,loglevel:5597},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=o(e("eth-keyring-controller")),s=o(e("loglevel"));function o(e){return e&&e.__esModule?e:{default:e}}var i={async verifyAccounts(e,t){if(!e||e.length<1)throw new Error("No created accounts defined.");const r=new(new n.default({}).getKeyringClassForType("HD Key Tree"))({mnemonic:t,numberOfAccounts:e.length,hdPath:"m/44'/2301'/0'/0"}),o=await r.getAccounts();if(s.default.debug(`Created accounts: ${JSON.stringify(e)}`),s.default.debug(`Restored accounts: ${JSON.stringify(o)}`),o.length!==e.length)throw new Error("Wrong number of accounts");for(let t=0;t<o.length;t++)if(o[t].toLowerCase()!==e[t].toLowerCase())throw new Error(`Not identical accounts! Original: ${e[t]}, Restored: ${o[t]}`)}};r.default=i}}},{package:"$root$"}],[83,{"../../../shared/constants/time":7327,_process:5832,"analytics-node":1972},function(){with(this)return function(){"use strict";return function(e,t,r){(function(t){(function(){Object.defineProperty(r,"__esModule",{value:!0}),r.segment=r.createSegmentMock=void 0;var n,s,o,i=(n=e("analytics-node"))&&n.__esModule?n:{default:n},a=e("../../../shared/constants/time");const c=null!==(s="GWhSLZ0SN4mutw4b9FdaKYBXWs6vgMAY")?s:null,l=null!==(o=t.env.SEGMENT_HOST)&&void 0!==o?o:null,d=undefined,h=5*a.SECOND,u=(e=d)=>{const t={queue:[],flush(){t.queue.forEach((([e,t])=>{t()})),t.queue=[]},track(r,n=(()=>undefined)){t.queue.push([r,n]),t.queue.length>=e&&t.flush()},page(){},identify(){}};return t};r.createSegmentMock=u;const g=c?new i.default(c,{host:l,flushAt:d,flushInterval:h}):u(d);r.segment=g}).call(this)}).call(this,e("_process"))}}},{package:"$root$"}],[87,{"../../../shared/constants/app":7316,"../../../shared/constants/metametrics":7321,"../../../shared/modules/hexstring-utils":7336,"../../../shared/modules/random-id":7340,"../metamask-controller":89,"@metamask/obs-store":1608,assert:2019,"eth-rpc-errors":2815,"eth-sig-util":2817,events:2435,jsonschema:5179,loglevel:5597},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=f(e("events")),s=e("assert"),o=e("@metamask/obs-store"),i=e("eth-rpc-errors"),a=e("eth-sig-util"),c=f(e("loglevel")),l=f(e("jsonschema")),d=e("../../../shared/constants/app"),h=e("../metamask-controller"),u=f(e("../../../shared/modules/random-id")),g=e("../../../shared/constants/metametrics"),p=e("../../../shared/modules/hexstring-utils");function f(e){return e&&e.__esModule?e:{default:e}}class m extends n.default{constructor({getCurrentChainId:e,metricsEvent:t}){super(),this._getCurrentChainId=e,this.memStore=new o.ObservableStore({unapprovedTypedMessages:{},unapprovedTypedMessagesCount:0}),this.messages=[],this.metricsEvent=t}get unapprovedTypedMessagesCount(){return Object.keys(this.getUnapprovedMsgs()).length}getUnapprovedMsgs(){return this.messages.filter((e=>"unapproved"===e.status)).reduce(((e,t)=>(e[t.id]=t,e)),{})}addUnapprovedMessageAsync(e,t,r){return new Promise(((n,s)=>{const o=this.addUnapprovedMessage(e,t,r);this.once(`${o}:finished`,(t=>{switch(t.status){case"signed":return n(t.rawSig);case"rejected":return s(i.ethErrors.provider.userRejectedRequest("MetaMask Message Signature: User denied message signature."));case"errored":return s(new Error(`MetaMask Message Signature: ${t.error}`));default:return s(new Error(`MetaMask Message Signature: Unknown problem: ${JSON.stringify(e)}`))}}))}))}addUnapprovedMessage(e,t,r){e.version=r,t&&(e.origin=t.origin),this.validateParams(e),c.default.debug(`TypedMessageManager addUnapprovedMessage: ${JSON.stringify(e)}`);const n=(new Date).getTime(),s=(0,u.default)(),o={id:s,msgParams:e,time:n,status:"unapproved",type:d.MESSAGE_TYPE.ETH_SIGN_TYPED_DATA};return this.addMsg(o),this.emit("update"),s}validateParams(e){switch(s.strict.ok(e&&"object"==typeof e,"Params must be an object."),s.strict.ok("data"in e,'Params must include a "data" field.'),s.strict.ok("from"in e,'Params must include a "from" field.'),s.strict.ok("string"==typeof e.from&&(0,p.isValidHexAddress)(e.from,{allowNonPrefixed:!1}),'"from" field must be a valid, lowercase, hexadecimal Ethereum address string.'),e.version){case"V1":s.strict.ok(Array.isArray(e.data),'"params.data" must be an array.'),s.strict.doesNotThrow((()=>{(0,a.typedSignatureHash)(e.data)}),"Signing data must be valid EIP-712 typed data.");break;case"V3":case"V4":{let t;s.strict.equal(typeof e.data,"string",'"params.data" must be a string.'),s.strict.doesNotThrow((()=>{t=JSON.parse(e.data)}),'"data" must be a valid JSON string.');const r=l.default.validate(t,a.TYPED_MESSAGE_SCHEMA);if(s.strict.ok(t.primaryType in t.types,`Primary type of "${t.primaryType}" has no type definition.`),0!==r.errors.length)throw i.ethErrors.rpc.invalidParams({message:"Signing data must conform to EIP-712 schema. See https://git.io/fNtcx.",data:r.errors.map((e=>e.message.toString()))});let{chainId:n}=t.domain;if(n){const e=parseInt(this._getCurrentChainId(),16);s.strict.ok(!Number.isNaN(e),`Cannot sign messages for chainId "${n}", because MetaMask is switching networks.`),"string"==typeof n&&(n=parseInt(n,n.startsWith("0x")?16:10)),s.strict.equal(n,e,`Provided chainId "${n}" must match the active chainId "${e}"`)}break}default:s.strict.fail(`Unknown typed data version "${e.version}"`)}}addMsg(e){this.messages.push(e),this._saveMsgList()}getMsg(e){return this.messages.find((t=>t.id===e))}approveMessage(e){return this.setMsgStatusApproved(e.metamaskId),this.prepMsgForSigning(e)}setMsgStatusApproved(e){this._setMsgStatus(e,"approved")}setMsgStatusSigned(e,t){const r=this.getMsg(e);r.rawSig=t,this._updateMsg(r),this._setMsgStatus(e,"signed")}prepMsgForSigning(e){return delete e.metamaskId,delete e.version,Promise.resolve(e)}rejectMsg(e,t=undefined){if(t){const r=this.getMsg(e);this.metricsEvent({event:t,category:g.EVENT.CATEGORIES.TRANSACTIONS,properties:{action:"Sign Request",version:r.msgParams.version,type:r.type}})}this._setMsgStatus(e,"rejected")}errorMessage(e,t){const r=this.getMsg(e);r.error=t,this._updateMsg(r),this._setMsgStatus(e,"errored")}clearUnapproved(){this.messages=this.messages.filter((e=>"unapproved"!==e.status)),this._saveMsgList()}_setMsgStatus(e,t){const r=this.getMsg(e);if(!r)throw new Error(`TypedMessageManager - Message not found for id: "${e}".`);r.status=t,this._updateMsg(r),this.emit(`${e}:${t}`,r),"rejected"!==t&&"signed"!==t&&"errored"!==t||this.emit(`${e}:finished`,r)}_updateMsg(e){const t=this.messages.findIndex((t=>t.id===e.id));-1!==t&&(this.messages[t]=e),this._saveMsgList()}_saveMsgList(){const e=this.getUnapprovedMsgs(),t=Object.keys(e).length;this.memStore.updateState({unapprovedTypedMessages:e,unapprovedTypedMessagesCount:t}),this.emit(h.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE)}}r.default=m}}},{package:"$root$"}],[89,{"../../shared/constants/app":7316,"../../shared/constants/hardware-wallets":7319,"../../shared/constants/metametrics":7321,"../../shared/constants/network":7322,"../../shared/constants/permissions":7323,"../../shared/constants/phishing":7324,"../../shared/constants/swaps":7326,"../../shared/constants/time":7327,"../../shared/constants/tokens":7328,"../../shared/constants/transaction":7329,"../../shared/modules/hexstring-utils":7336,"../../shared/modules/rpc.utils":7341,"../../shared/modules/string-utils":7343,"../../shared/modules/transaction.utils":7345,"../../shared/notifications":7346,"../../ui/helpers/utils/conversions.util":7888,"../../ui/helpers/utils/token-util":7904,"./account-import-strategies":2,"./controllers/WIFKeyring":6,"./controllers/alert":7,"./controllers/app-state":8,"./controllers/backup":9,"./controllers/cached-balances":10,"./controllers/detect-tokens":11,"./controllers/ens":13,"./controllers/incoming-transactions":14,"./controllers/metametrics":15,"./controllers/network":19,"./controllers/onboarding":23,"./controllers/permissions":27,"./controllers/preferences":31,"./controllers/swaps":32,"./controllers/threebox":33,"./controllers/transactions":34,"./detect-multiple-instances":40,"./lib/ComposableObservableStore":42,"./lib/account-tracker":43,"./lib/createLoggerMiddleware":46,"./lib/createMetaRPCHandler":47,"./lib/createOnboardingMiddleware":48,"./lib/createOriginMiddleware":49,"./lib/createRPCMethodTrackingMiddleware":50,"./lib/createTabIdMiddleware":52,"./lib/decrypt-message-manager":53,"./lib/encryption-public-key-manager":54,"./lib/message-manager":63,"./lib/nodeify":67,"./lib/personal-message-manager":69,"./lib/rpc-method-middleware":81,"./lib/seed-phrase-verifier":82,"./lib/segment":83,"./lib/stream-utils":86,"./lib/typed-message-manager":87,"@keystonehq/metamask-airgapped-keyring":974,"@metamask/controllers":1458,"@metamask/eth-ledger-bridge-keyring":1516,"@metamask/obs-store":1608,"@metamask/obs-store/dist/asStream":1607,"@metamask/smart-transactions-controller":1633,"@metamask/snap-controllers":1642,"@sentry/browser":1770,_process:5832,"await-semaphore":2100,"bignumber.js":2283,buffer:2434,"eth-json-rpc-filters":2747,"eth-json-rpc-filters/subscriptionManager":2753,"eth-json-rpc-middleware":2771,"eth-keyring-controller":2798,"eth-lattice-keyring":2799,"eth-query":2811,"eth-rpc-errors":2815,"eth-sig-util":2817,"eth-trezor-keyring":2831,"ethereumjs-util":2891,events:2435,"json-rpc-engine":5166,"json-rpc-middleware-stream/engineStream":5168,lodash:5584,loglevel:5597,nanoid:5673,pump:5932,"qtum-ethers-wrapper":5967,"qtumjs-lib":6676,semver:6922,wif:7293},function(){with(this)return function(){"use strict";return function(e,t,r){(function(t,n){(function(){Object.defineProperty(r,"__esModule",{value:!0}),r.default=r.METAMASK_CONTROLLER_EVENTS=void 0;var s=Ne(e("events")),o=e("qtum-ethers-wrapper"),i=Ne(e("pump")),a=e("@metamask/obs-store"),c=e("@metamask/obs-store/dist/asStream"),l=e("json-rpc-engine"),d=e("lodash"),h=Ne(e("json-rpc-middleware-stream/engineStream")),u=Ne(e("eth-json-rpc-filters")),g=Ne(e("eth-json-rpc-filters/subscriptionManager")),p=e("eth-json-rpc-middleware"),f=Ne(e("eth-keyring-controller")),m=e("eth-rpc-errors"),y=e("await-semaphore"),C=e("ethereumjs-util"),k=Ne(e("loglevel")),b=Ne(e("eth-trezor-keyring")),w=Ne(e("@metamask/eth-ledger-bridge-keyring")),v=Ne(e("eth-lattice-keyring")),T=e("@keystonehq/metamask-airgapped-keyring"),S=Ne(e("eth-query")),_=Ne(e("nanoid")),M=e("@sentry/browser"),P=e("@metamask/controllers"),E=Ne(e("@metamask/smart-transactions-controller")),A=(e("@metamask/snap-controllers"),e("semver"),e("../../shared/modules/rpc.utils")),I=e("../../shared/constants/transaction"),x=e("../../shared/constants/phishing"),D=e("../../shared/constants/swaps"),R=e("../../shared/constants/network"),N=e("../../shared/constants/hardware-wallets"),O=e("../../shared/constants/permissions"),U=e("../../shared/notifications"),K=e("../../shared/modules/hexstring-utils"),q=e("../../shared/constants/time"),L=e("../../shared/constants/app"),j=e("../../shared/constants/metametrics"),B=e("../../ui/helpers/utils/conversions.util"),F=e("../../ui/helpers/utils/token-util"),H=e("../../shared/modules/string-utils"),G=e("../../shared/modules/transaction.utils"),$=Ne(e("./lib/nodeify")),W=e("../../shared/constants/tokens"),V=e("./detect-multiple-instances"),Q=Ne(e("./lib/ComposableObservableStore")),Y=Ne(e("./lib/account-tracker")),z=Ne(e("./lib/createLoggerMiddleware")),J=e("./lib/rpc-method-middleware"),X=Ne(e("./lib/createOriginMiddleware")),Z=Ne(e("./lib/createTabIdMiddleware")),ee=Ne(e("./lib/createOnboardingMiddleware")),te=e("./lib/stream-utils"),re=Ne(e("./controllers/ens")),ne=Re(e("./controllers/network")),se=Ne(e("./controllers/preferences")),oe=Ne(e("./controllers/app-state")),ie=Ne(e("./controllers/cached-balances")),ae=Ne(e("./controllers/alert")),ce=Ne(e("./controllers/onboarding")),le=Ne(e("./controllers/threebox")),de=Ne(e("./controllers/backup")),he=Ne(e("./controllers/incoming-transactions")),ue=Re(e("./lib/message-manager")),ge=Ne(e("./lib/decrypt-message-manager")),pe=Ne(e("./lib/encryption-public-key-manager")),fe=Ne(e("./lib/personal-message-manager")),me=Ne(e("./lib/typed-message-manager")),ye=Ne(e("./controllers/transactions")),Ce=Ne(e("./controllers/detect-tokens")),ke=Ne(e("./controllers/swaps")),be=Ne(e("./account-import-strategies")),we=Ne(e("./lib/seed-phrase-verifier")),ve=Ne(e("./controllers/metametrics")),Te=e("./lib/segment"),Se=Ne(e("./lib/createMetaRPCHandler")),_e=e("./controllers/permissions"),Me=Ne(e("./lib/createRPCMethodTrackingMiddleware")),Pe=Ne(e("bignumber.js")),Ee=Ne(e("qtumjs-lib")),Ae=Ne(e("wif")),Ie=e("eth-sig-util"),xe=e("./controllers/WIFKeyring");function De(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(De=function(e){return e?r:t})(e)}function Re(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=De(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var i=s?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=e[o]}return n.default=e,r&&r.set(e,n),n}function Ne(e){return e&&e.__esModule?e:{default:e}}r.METAMASK_CONTROLLER_EVENTS={UPDATE_BADGE:"updateBadge",APPROVAL_STATE_CHANGE:"ApprovalController:stateChange"};class Oe extends s.default{constructor(e){var r;super(),this.defaultMaxListeners=20,this.sendUpdate=(0,d.debounce)(this.privateSendUpdate.bind(this),200*q.MILLISECOND),this.opts=e,this.extension=e.browser,this.platform=e.platform,this.notificationManager=e.notificationManager;const n=e.initState||{},s=this.platform.getVersion();this.recordFirstTimeInfo(n),this.activeControllerConnections=0,this.getRequestAccountTabIds=e.getRequestAccountTabIds,this.getOpenMetamaskTabsIds=e.getOpenMetamaskTabsIds,this.controllerMessenger=new P.ControllerMessenger,this.store=new Q.default({state:n,controllerMessenger:this.controllerMessenger,persist:!0}),this.connections={},this.createVaultMutex=new y.Mutex,this.extension.runtime.onInstalled.addListener((e=>{"update"===e.reason&&"8.1.0"===s&&this.platform.openExtensionInBrowser()})),this.approvalController=new P.ApprovalController({messenger:this.controllerMessenger.getRestricted({name:"ApprovalController"}),showApprovalRequest:e.showUserConfirmation}),this.networkController=new ne.default(n.NetworkController),this.networkController.setInfuraProjectId(e.infuraProjectId),this.initializeProvider(),this.provider=this.networkController.getProviderAndBlockTracker().provider,this.blockTracker=this.networkController.getProviderAndBlockTracker().blockTracker;const o=this.controllerMessenger.getRestricted({name:"TokenListController"});this.tokenListController=new P.TokenListController({chainId:(0,B.hexToDecimal)(this.networkController.getCurrentChainId()),preventPollingOnNetworkRestart:!0,onNetworkStateChange:e=>{this.networkController.store.subscribe((t=>{const r={...t,provider:{...t.provider,chainId:(0,B.hexToDecimal)(t.provider.chainId)}};return e(r)}))},messenger:o,state:n.TokenListController}),this.preferencesController=new se.default({initState:n.PreferencesController,initLangCode:e.initLangCode,openPopup:e.openPopup,network:this.networkController,tokenListController:this.tokenListController,provider:this.provider,migrateAddressBookState:this.migrateAddressBookState.bind(this)}),this.tokensController=new P.TokensController({onPreferencesStateChange:this.preferencesController.store.subscribe.bind(this.preferencesController.store),onNetworkStateChange:this.networkController.store.subscribe.bind(this.networkController.store),config:{provider:this.provider},state:n.TokensController}),this.assetsContractController=new P.AssetsContractController({onPreferencesStateChange:e=>this.preferencesController.store.subscribe(e),onNetworkStateChange:e=>this.networkController.store.subscribe((t=>{const r={...t,provider:{...t.provider,chainId:(0,B.hexToDecimal)(t.provider.chainId)}};return e(r)}))},{provider:this.provider},n.AssetsContractController),this.collectiblesController=new P.CollectiblesController({onPreferencesStateChange:this.preferencesController.store.subscribe.bind(this.preferencesController.store),onNetworkStateChange:this.networkController.store.subscribe.bind(this.networkController.store),getERC721AssetName:this.assetsContractController.getERC721AssetName.bind(this.assetsContractController),getERC721AssetSymbol:this.assetsContractController.getERC721AssetSymbol.bind(this.assetsContractController),getERC721TokenURI:this.assetsContractController.getERC721TokenURI.bind(this.assetsContractController),getERC721OwnerOf:this.assetsContractController.getERC721OwnerOf.bind(this.assetsContractController),getERC1155BalanceOf:this.assetsContractController.getERC1155BalanceOf.bind(this.assetsContractController),getERC1155TokenURI:this.assetsContractController.getERC1155TokenURI.bind(this.assetsContractController),onCollectibleAdded:({address:e,symbol:t,tokenId:r,standard:n,source:s})=>this.metaMetricsController.trackEvent({event:j.EVENT_NAMES.NFT_ADDED,category:j.EVENT.CATEGORIES.WALLET,properties:{token_contract_address:e,token_symbol:t,asset_type:I.ASSET_TYPES.COLLECTIBLE,token_standard:n,source:s},sensitiveProperties:{tokenId:r}})},{},n.CollectiblesController),this.collectiblesController.setApiKey(t.env.OPENSEA_KEY),this.metaMetricsController=new ve.default({segment:Te.segment,preferencesStore:this.preferencesController.store,onNetworkDidChange:this.networkController.on.bind(this.networkController,ne.NETWORK_EVENTS.NETWORK_DID_CHANGE),getNetworkIdentifier:this.networkController.getNetworkIdentifier.bind(this.networkController),getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),version:this.platform.getVersion(),environment:"production",extension:this.extension,initState:n.MetaMetricsController,captureException:M.captureException}),this.on("update",(e=>{this.metaMetricsController.handleMetaMaskStateUpdate(e)}));const i=this.controllerMessenger.getRestricted({name:"GasFeeController"}),a=D.GAS_API_BASE_URL;this.gasFeeController=new P.GasFeeController({interval:1e4,messenger:i,clientId:D.SWAPS_CLIENT_ID,getProvider:()=>this.networkController.getProviderAndBlockTracker().provider,onNetworkStateChange:this.networkController.on.bind(this.networkController,ne.NETWORK_EVENTS.NETWORK_DID_CHANGE),getCurrentNetworkEIP1559Compatibility:this.networkController.getEIP1559Compatibility.bind(this.networkController),getCurrentAccountEIP1559Compatibility:this.getCurrentAccountEIP1559Compatibility.bind(this),legacyAPIEndpoint:`${a}/networks/<chain_id>/gasPrices`,EIP1559APIEndpoint:`${a}/networks/<chain_id>/suggestedGasFees`,getCurrentNetworkLegacyGasAPICompatibility:()=>this.networkController.getCurrentChainId()===R.MAINNET_CHAIN_ID,getChainId:()=>this.networkController.getCurrentChainId()});const c=this,l=this.gasFeeController;this.gasFeeController._fetchEthGasPriceEstimate=this.gasFeeController.fetchEthGasPriceEstimate,this.gasFeeController.fetchEthGasPriceEstimate=e=>new Promise(((t,r)=>{e.sendAsync({method:"web3_clientVersion"},(function(n,s){if(n)r(n);else{const n="QTUM ETHTestRPC/ethereum-js"===s;c.txController.hasBug=n,l._fetchEthGasPriceEstimate(e).then((e=>{if(n)e.hasOwnProperty("gasPrice")&&"40"===e.gasPrice&&(e.gasPrice="400");else if("string"==typeof e&&e.startsWith("MetaMask"))throw new Error("MetaMask web3_clientVersion isn't passed through to rpc endpoint");t(e)})).catch((e=>{console.error(e),r(e)}))}}))})),this.qrHardwareKeyring=new T.MetaMaskKeyring,this.appStateController=new oe.default({addUnlockListener:this.on.bind(this,"unlock"),isUnlocked:this.isUnlocked.bind(this),initState:n.AppStateController,onInactiveTimeout:()=>this.setLocked(),showUnlockRequest:e.showUserConfirmation,preferencesStore:this.preferencesController.store,qrHardwareStore:this.qrHardwareKeyring.getMemStore()});const h=this.controllerMessenger.getRestricted({name:"CurrencyRateController"});this.currencyRateController=new P.CurrencyRateController({includeUsdRate:!0,messenger:h,state:{...n.CurrencyController,nativeCurrency:this.networkController.providerStore.getState().ticker}}),this.phishingController=new P.PhishingController,this.announcementController=new P.AnnouncementController({allAnnouncements:U.UI_NOTIFICATIONS},n.AnnouncementController),this.tokenRatesController=new P.TokenRatesController({onTokensStateChange:e=>this.tokensController.subscribe(e),onCurrencyRateStateChange:e=>this.controllerMessenger.subscribe(`${this.currencyRateController.name}:stateChange`,e),onNetworkStateChange:e=>this.networkController.store.subscribe((t=>{const r={...t,provider:{...t.provider,chainId:(0,B.hexToDecimal)(t.provider.chainId)}};return e(r)}))}),this.ensController=new re.default({provider:this.provider,getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),onNetworkDidChange:this.networkController.on.bind(this.networkController,ne.NETWORK_EVENTS.NETWORK_DID_CHANGE)}),this.incomingTransactionsController=new he.default({blockTracker:this.blockTracker,onNetworkDidChange:this.networkController.on.bind(this.networkController,ne.NETWORK_EVENTS.NETWORK_DID_CHANGE),getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),preferencesController:this.preferencesController,initState:n.IncomingTransactionsController}),this.accountTracker=new Y.default({provider:this.provider,blockTracker:this.blockTracker,getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),metamaskController:this}),this.on("controllerConnectionChanged",(e=>{e>0?(this.accountTracker.start(),this.incomingTransactionsController.start(),this.currencyRateController.start(),this.preferencesController.store.getState().useTokenDetection&&this.tokenListController.start()):(this.accountTracker.stop(),this.incomingTransactionsController.stop(),this.currencyRateController.stop(),this.preferencesController.store.getState().useTokenDetection&&this.tokenListController.stop())})),this.cachedBalancesController=new ie.default({accountTracker:this.accountTracker,getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),initState:n.CachedBalancesController}),this.onboardingController=new ce.default({initState:n.OnboardingController}),this.tokensController.hub.on("pendingSuggestedAsset",(async()=>{await e.openPopup()}));const u=[b.default,w.default,v.default,T.MetaMaskKeyring,xe.WIFKeyring];this.keyringController=new f.default({keyringTypes:u,initState:n.KeyringController,encryptor:e.encryptor||undefined}),this.keyringController.on("update",(async()=>{const e=await this.keyringController.getAccounts();e.length>0&&this.updateQtumAccounts(e)})),this.keyringController.memStore.subscribe((e=>this._onKeyringControllerUpdate(e))),this.keyringController.on("unlock",(()=>this._onUnlock())),this.keyringController.on("lock",(()=>this._onLock()));const g=()=>this.preferencesController.store.getState().identities;this.permissionController=new P.PermissionController({messenger:this.controllerMessenger.getRestricted({name:"PermissionController",allowedActions:[`${this.approvalController.name}:addRequest`,`${this.approvalController.name}:hasRequest`,`${this.approvalController.name}:acceptRequest`,`${this.approvalController.name}:rejectRequest`,"btc_sign"]}),state:n.PermissionController,caveatSpecifications:(0,_e.getCaveatSpecifications)({getIdentities:g}),permissionSpecifications:{...(0,_e.getPermissionSpecifications)({getIdentities:g,getAllAccounts:this.keyringController.getAccounts.bind(this.keyringController),captureKeyringTypesWithMissingIdentities:(e={},t=[])=>{const r=t.filter((t=>!e[t])).map((e=>{var t;return null===(t=this.keyringController.getKeyringForAccount(e))||void 0===t?void 0:t.type})),n=Object.keys(e||{}).length,s=Object.keys(this.accountTracker.store.getState().accounts||{}).length;(0,M.captureException)(new Error(`Attempt to get permission specifications failed because their were ${t.length} accounts, but ${n} identities, and the ${r} keyrings included accounts with missing identities. Meanwhile, there are ${s} accounts in the account tracker.`))}})},unrestrictedMethods:_e.unrestrictedMethods}),this.permissionLogController=new _e.PermissionLogController({restrictedMethods:new Set(Object.keys(O.RestrictedMethods)),initState:n.PermissionLogController}),this.subjectMetadataController=new P.SubjectMetadataController({messenger:this.controllerMessenger.getRestricted({name:"SubjectMetadataController",allowedActions:[`${this.permissionController.name}:hasPermissions`]}),state:n.SubjectMetadataController,subjectCacheLimit:100}),this.detectTokensController=new Ce.default({preferences:this.preferencesController,tokensController:this.tokensController,assetsContractController:this.assetsContractController,network:this.networkController,keyringMemStore:this.keyringController.memStore,tokenList:this.tokenListController,trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.addressBookController=new P.AddressBookController(undefined,n.AddressBookController),this.alertController=new ae.default({initState:n.AlertController,preferencesStore:this.preferencesController.store}),this.threeBoxController=new le.default({preferencesController:this.preferencesController,addressBookController:this.addressBookController,keyringController:this.keyringController,initState:n.ThreeBoxController,getKeyringControllerState:this.keyringController.memStore.getState.bind(this.keyringController.memStore),version:s,trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.backupController=new de.default({preferencesController:this.preferencesController,addressBookController:this.addressBookController,trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.txController=new ye.default({initState:n.TransactionController||n.TransactionManager,getPermittedAccounts:this.getPermittedAccounts.bind(this),getProviderConfig:this.networkController.getProviderConfig.bind(this.networkController),getCurrentNetworkEIP1559Compatibility:this.networkController.getEIP1559Compatibility.bind(this.networkController),getCurrentAccountEIP1559Compatibility:this.getCurrentAccountEIP1559Compatibility.bind(this),networkStore:this.networkController.networkStore,getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),preferencesStore:this.preferencesController.store,txHistoryLimit:60,signTransaction:this.keyringController.signTransaction.bind(this.keyringController),provider:this.provider,blockTracker:this.blockTracker,createEventFragment:this.metaMetricsController.createEventFragment.bind(this.metaMetricsController),updateEventFragment:this.metaMetricsController.updateEventFragment.bind(this.metaMetricsController),finalizeEventFragment:this.metaMetricsController.finalizeEventFragment.bind(this.metaMetricsController),getEventFragmentById:this.metaMetricsController.getEventFragmentById.bind(this.metaMetricsController),trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),getParticipateInMetrics:()=>this.metaMetricsController.state.participateInMetaMetrics,getEIP1559GasFeeEstimates:this.gasFeeController.fetchGasFeeEstimates.bind(this.gasFeeController),getExternalPendingTransactions:this.getExternalPendingTransactions.bind(this),getAccountType:this.getAccountType.bind(this),getDeviceModel:this.getDeviceModel.bind(this),getTokenStandardAndDetails:this.assetsContractController.getTokenStandardAndDetails.bind(this.assetsContractController)}),this.txController.on("newUnapprovedTx",(()=>e.showUserConfirmation())),this.txController.on("tx:status-update",(async(e,t)=>{if(t===I.TRANSACTION_STATUSES.CONFIRMED||t===I.TRANSACTION_STATUSES.FAILED){const t=this.txController.txStateManager.getTransaction(e),i=this.preferencesController.getFrequentRpcListDetail();let a={};if(t.chainId){var r;const e=i.find((e=>t.chainId===e.chainId));a=null!==(r=null==e?void 0:e.rpcPrefs)&&void 0!==r?r:{}}this.platform.showTransactionNotification(t,a);const{txReceipt:c}=t;if(t.type===I.TRANSACTION_TYPES.TOKEN_METHOD_TRANSFER_FROM&&t.txParams!==undefined){var n,s;const{data:e,to:r,from:o}=t.txParams,{chainId:i}=t,a=(0,G.parseStandardTokenTransactionData)(e),c=null!==(n=(0,F.getTokenIdParam)(a))&&void 0!==n?n:(0,F.getTokenValueParam)(a),{allCollectibles:l}=this.collectiblesController.state,d=null==l||null===(s=l[o])||void 0===s?void 0:s[i].find((({address:e,tokenId:t})=>(0,H.isEqualCaseInsensitive)(e,r)&&t===c));d&&this.collectiblesController.checkAndUpdateSingleCollectibleOwnershipStatus(d,!1,{userAddress:o,chainId:i})}const l=await this.getState();var o;if(c&&"0x0"===c.status)this.metaMetricsController.trackEvent({event:"Tx Status Update: On-Chain Failure",category:j.EVENT.CATEGORIES.BACKGROUND,properties:{action:"Transactions",errorMessage:null===(o=t.simulationFails)||void 0===o?void 0:o.reason,numberOfTokens:l.tokens.length,numberOfAccounts:Object.keys(l.accounts).length}},{matomoEvent:!0})}})),this.networkController.on(ne.NETWORK_EVENTS.NETWORK_DID_CHANGE,(async()=>{const{ticker:e}=this.networkController.getProviderConfig();try{await this.currencyRateController.setNativeCurrency(e);const t=await this.preferencesController.getQtumAddresses();Object.keys(t).forEach((e=>{this.setQtumAddressFromHexAddress(e)}))}catch(e){console.error(e)}})),this.networkController.lookupNetwork(),this.messageManager=new ue.default({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.personalMessageManager=new fe.default({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.decryptMessageManager=new ge.default({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.encryptionPublicKeyManager=new pe.default({metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.typedMessageManager=new me.default({getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),metricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)}),this.swapsController=new ke.default({getBufferedGasLimit:this.txController.txGasUtil.getBufferedGasLimit.bind(this.txController.txGasUtil),networkController:this.networkController,provider:this.provider,getProviderConfig:this.networkController.getProviderConfig.bind(this.networkController),getTokenRatesState:()=>this.tokenRatesController.state,getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),getEIP1559GasFeeEstimates:this.gasFeeController.fetchGasFeeEstimates.bind(this.gasFeeController)}),this.smartTransactionsController=new E.default({onNetworkStateChange:this.networkController.store.subscribe.bind(this.networkController.store),getNetwork:this.networkController.getNetworkState.bind(this.networkController),getNonceLock:this.txController.nonceTracker.getNonceLock.bind(this.txController.nonceTracker),confirmExternalTransaction:this.txController.confirmExternalTransaction.bind(this.txController),provider:this.provider,trackMetaMetricsEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController)},undefined,n.SmartTransactionsController),this.networkController.on(ne.NETWORK_EVENTS.NETWORK_DID_CHANGE,(()=>{this.accountTracker._updateAccounts()})),this.networkController.on(ne.NETWORK_EVENTS.NETWORK_WILL_CHANGE,(()=>{this.txController.txStateManager.clearUnapprovedTxs(),this.encryptionPublicKeyManager.clearUnapproved(),this.personalMessageManager.clearUnapproved(),this.typedMessageManager.clearUnapproved(),this.decryptMessageManager.clearUnapproved(),this.messageManager.clearUnapproved()})),this.on("update",(e=>this._onStateUpdate(e))),this.store.updateStructure({AppStateController:this.appStateController.store,TransactionController:this.txController.store,KeyringController:this.keyringController.store,PreferencesController:this.preferencesController.store,MetaMetricsController:this.metaMetricsController.store,AddressBookController:this.addressBookController,CurrencyController:this.currencyRateController,NetworkController:this.networkController.store,CachedBalancesController:this.cachedBalancesController.store,AlertController:this.alertController.store,OnboardingController:this.onboardingController.store,IncomingTransactionsController:this.incomingTransactionsController.store,PermissionController:this.permissionController,PermissionLogController:this.permissionLogController.store,SubjectMetadataController:this.subjectMetadataController,ThreeBoxController:this.threeBoxController.store,BackupController:this.backupController,AnnouncementController:this.announcementController,GasFeeController:this.gasFeeController,TokenListController:this.tokenListController,TokensController:this.tokensController,SmartTransactionsController:this.smartTransactionsController,CollectiblesController:this.collectiblesController}),this.memStore=new Q.default({config:{AppStateController:this.appStateController.store,NetworkController:this.networkController.store,AccountTracker:this.accountTracker.store,TxController:this.txController.memStore,CachedBalancesController:this.cachedBalancesController.store,TokenRatesController:this.tokenRatesController,MessageManager:this.messageManager.memStore,PersonalMessageManager:this.personalMessageManager.memStore,DecryptMessageManager:this.decryptMessageManager.memStore,EncryptionPublicKeyManager:this.encryptionPublicKeyManager.memStore,TypesMessageManager:this.typedMessageManager.memStore,KeyringController:this.keyringController.memStore,PreferencesController:this.preferencesController.store,MetaMetricsController:this.metaMetricsController.store,AddressBookController:this.addressBookController,CurrencyController:this.currencyRateController,AlertController:this.alertController.store,OnboardingController:this.onboardingController.store,IncomingTransactionsController:this.incomingTransactionsController.store,PermissionController:this.permissionController,PermissionLogController:this.permissionLogController.store,SubjectMetadataController:this.subjectMetadataController,ThreeBoxController:this.threeBoxController.store,BackupController:this.backupController,SwapsController:this.swapsController.store,EnsController:this.ensController.store,ApprovalController:this.approvalController,AnnouncementController:this.announcementController,GasFeeController:this.gasFeeController,TokenListController:this.tokenListController,TokensController:this.tokensController,SmartTransactionsController:this.smartTransactionsController,CollectiblesController:this.collectiblesController},controllerMessenger:this.controllerMessenger}),this.memStore.subscribe(this.sendUpdate.bind(this));const p=null===(r={})||void 0===r?void 0:r.PASSWORD;p&&!this.isUnlocked()&&this.onboardingController.store.getState().completedOnboarding&&this.submitPassword(p),this.extension.runtime.getPlatformInfo().then((({os:e})=>{this.appStateController.setBrowserEnvironment(e,this.extension.runtime.getBrowserInfo===undefined?"chrome":"firefox")})),this.setupControllerEventSubscriptions(),this.publicConfigStore=this.createPublicConfigStore(),this.extension.runtime.onMessageExternal.addListener(V.onMessageReceived),(0,V.checkForMultipleVersionsRunning)()}setupControllerEventSubscriptions(){const e=async(e,t)=>{this.isUnlocked()&&this.notifyConnections(e,{method:_e.NOTIFICATION_NAMES.accountsChanged,params:t.length<2?t:await this.getPermittedAccounts(e)}),this.permissionLogController.updateAccountsHistory(e,t)};let t;this.preferencesController.store.subscribe((async({selectedAddress:r})=>{if(r&&r!==t){t=r;const n=(0,_e.getPermittedAccountsByOrigin)(this.permissionController.state);for(const[t,s]of n.entries())s.includes(r)&&e(t,s)}})),this.controllerMessenger.subscribe(`${this.permissionController.name}:stateChange`,(async(t,r)=>{const n=(0,_e.getChangedAccounts)(t,r);for(const[t,r]of n.entries())e(t,r)}),_e.getPermittedAccountsByOrigin)}initializeProvider(){const e=this.platform.getVersion(),t={static:{eth_syncing:!1,web3_clientVersion:`MetaMask/v${e}`},version:e,getAccounts:async({origin:e},{suppressUnauthorizedError:t=!0}={})=>{if(e===L.ORIGIN_METAMASK){const e=this.preferencesController.getSelectedAddress();return e?[e]:[]}return this.isUnlocked()?await this.getPermittedAccounts(e,{suppressUnauthorizedError:t}):[]},processTransaction:this.newUnapprovedTransaction.bind(this),processEthSignMessage:this.newUnsignedMessage.bind(this),processBtcSignMessage:this.newUnsignedBtcMessage.bind(this),processTypedMessage:this.newUnsignedTypedMessage.bind(this),processBtcTypedMessage:this.newUnsignedBtcTypedMessage.bind(this),processTypedMessageV3:this.newUnsignedTypedMessage.bind(this),processBtcTypedMessageV3:this.newUnsignedBtcTypedMessage.bind(this),processTypedMessageV4:this.newUnsignedTypedMessage.bind(this),processBtcTypedMessageV4:this.newUnsignedBtcTypedMessage.bind(this),processPersonalMessage:this.newUnsignedPersonalMessage.bind(this),processBtcPersonalMessage:this.newUnsignedBtcPersonalMessage.bind(this),processDecryptMessage:this.newRequestDecryptMessage.bind(this),processEncryptionPublicKey:this.newRequestEncryptionPublicKey.bind(this),getPendingNonce:this.getPendingNonce.bind(this),getPendingTransactionByHash:e=>this.txController.getTransactions({searchCriteria:{hash:e,status:I.TRANSACTION_STATUSES.SUBMITTED}})[0]};return this.networkController.initializeProvider(t)}createPublicConfigStore(){const e=new a.ObservableStore,{networkController:t}=this;function r(r){const n=t.getCurrentChainId();"loading"!==r.network&&e.putState(function(e,{isUnlocked:t,network:r}){return{isUnlocked:t,chainId:e,networkVersion:r}}(n,r))}return this.on("update",r),r(this.getState()),e}async getProviderState(e){return{isUnlocked:this.isUnlocked(),...this.getProviderNetworkState(),accounts:await this.getPermittedAccounts(e)}}getProviderNetworkState(e){const{network:t}=e||this.getState();return{chainId:this.networkController.getCurrentChainId(),networkVersion:t}}getState(){const{vault:e}=this.keyringController.store.getState();return{isInitialized:Boolean(e),...this.memStore.getFlatState()}}getApi(){const{addressBookController:e,alertController:t,approvalController:r,appStateController:n,collectiblesController:s,collectibleDetectionController:o,currencyRateController:i,detectTokensController:a,ensController:c,gasFeeController:l,keyringController:d,metaMetricsController:h,networkController:u,announcementController:g,onboardingController:p,permissionController:f,preferencesController:y,qrHardwareKeyring:C,swapsController:k,threeBoxController:b,tokensController:w,smartTransactionsController:v,txController:T,assetsContractController:S,backupController:_}=this;return{getState:this.getState.bind(this),setCurrentCurrency:i.setCurrentCurrency.bind(i),setUseBlockie:y.setUseBlockie.bind(y),setUseNonceField:y.setUseNonceField.bind(y),setUsePhishDetect:y.setUsePhishDetect.bind(y),setUseTokenDetection:y.setUseTokenDetection.bind(y),setUseCollectibleDetection:y.setUseCollectibleDetection.bind(y),setOpenSeaEnabled:y.setOpenSeaEnabled.bind(y),setIpfsGateway:y.setIpfsGateway.bind(y),setParticipateInMetaMetrics:h.setParticipateInMetaMetrics.bind(h),setCurrentLocale:y.setCurrentLocale.bind(y),markPasswordForgotten:this.markPasswordForgotten.bind(this),unMarkPasswordForgotten:this.unMarkPasswordForgotten.bind(this),getRequestAccountTabIds:this.getRequestAccountTabIds,getOpenMetamaskTabsIds:this.getOpenMetamaskTabsIds,markNotificationPopupAsAutomaticallyClosed:()=>this.notificationManager.markAsAutomaticallyClosed(),addNewAccount:this.addNewAccount.bind(this),verifySeedPhrase:this.verifySeedPhrase.bind(this),resetAccount:this.resetAccount.bind(this),removeAccount:this.removeAccount.bind(this),importAccountWithStrategy:this.importAccountWithStrategy.bind(this),connectHardware:this.connectHardware.bind(this),forgetDevice:this.forgetDevice.bind(this),checkHardwareStatus:this.checkHardwareStatus.bind(this),unlockHardwareWalletAccount:this.unlockHardwareWalletAccount.bind(this),setLedgerTransportPreference:this.setLedgerTransportPreference.bind(this),attemptLedgerTransportCreation:this.attemptLedgerTransportCreation.bind(this),establishLedgerTransportPreference:this.establishLedgerTransportPreference.bind(this),submitQRHardwareCryptoHDKey:C.submitCryptoHDKey.bind(C),submitQRHardwareCryptoAccount:C.submitCryptoAccount.bind(C),cancelSyncQRHardware:C.cancelSync.bind(C),submitQRHardwareSignature:C.submitSignature.bind(C),cancelQRHardwareSignRequest:C.cancelSignRequest.bind(C),fetchInfoToSync:this.fetchInfoToSync.bind(this),submitPassword:this.submitPassword.bind(this),verifyPassword:this.verifyPassword.bind(this),setProviderType:u.setProviderType.bind(u),rollbackToPreviousProvider:u.rollbackToPreviousProvider.bind(u),setCustomRpc:this.setCustomRpc.bind(this),updateAndSetCustomRpc:this.updateAndSetCustomRpc.bind(this),delCustomRpc:this.delCustomRpc.bind(this),addCustomNetwork:this.addCustomNetwork.bind(this),requestAddNetworkApproval:this.requestAddNetworkApproval.bind(this),setSelectedAddress:y.setSelectedAddress.bind(y),addToken:w.addToken.bind(w),rejectWatchAsset:w.rejectWatchAsset.bind(w),acceptWatchAsset:w.acceptWatchAsset.bind(w),updateTokenType:w.updateTokenType.bind(w),setAccountLabel:y.setAccountLabel.bind(y),setFeatureFlag:y.setFeatureFlag.bind(y),setPreference:y.setPreference.bind(y),addKnownMethodData:y.addKnownMethodData.bind(y),setDismissSeedBackUpReminder:y.setDismissSeedBackUpReminder.bind(y),setAdvancedGasFee:y.setAdvancedGasFee.bind(y),setEIP1559V2Enabled:y.setEIP1559V2Enabled.bind(y),setTheme:y.setTheme.bind(y),setCustomNetworkListEnabled:y.setCustomNetworkListEnabled.bind(y),getTokenStandardAndDetails:this.getTokenStandardAndDetails.bind(this),addCollectible:s.addCollectible.bind(s),addCollectibleVerifyOwnership:s.addCollectibleVerifyOwnership.bind(s),removeAndIgnoreCollectible:s.removeAndIgnoreCollectible.bind(s),removeCollectible:s.removeCollectible.bind(s),checkAndUpdateAllCollectiblesOwnershipStatus:s.checkAndUpdateAllCollectiblesOwnershipStatus.bind(s),checkAndUpdateSingleCollectibleOwnershipStatus:s.checkAndUpdateSingleCollectibleOwnershipStatus.bind(s),isCollectibleOwner:s.isCollectibleOwner.bind(s),setAddressBook:e.set.bind(e),removeFromAddressBook:e.delete.bind(e),setLastActiveTime:n.setLastActiveTime.bind(n),setDefaultHomeActiveTabName:n.setDefaultHomeActiveTabName.bind(n),setConnectedStatusPopoverHasBeenShown:n.setConnectedStatusPopoverHasBeenShown.bind(n),setRecoveryPhraseReminderHasBeenShown:n.setRecoveryPhraseReminderHasBeenShown.bind(n),setRecoveryPhraseReminderLastShown:n.setRecoveryPhraseReminderLastShown.bind(n),setShowTestnetMessageInDropdown:n.setShowTestnetMessageInDropdown.bind(n),setCollectiblesDetectionNoticeDismissed:n.setCollectiblesDetectionNoticeDismissed.bind(n),setEnableEIP1559V2NoticeDismissed:n.setEnableEIP1559V2NoticeDismissed.bind(n),updateCollectibleDropDownState:n.updateCollectibleDropDownState.bind(n),setFirstTimeUsedNetwork:n.setFirstTimeUsedNetwork.bind(n),tryReverseResolveAddress:c.reverseResolveAddress.bind(c),setLocked:(0,$.default)(this.setLocked,this),createNewVaultAndKeychain:(0,$.default)(this.createNewVaultAndKeychain,this),addNewKeyring:(0,$.default)(this.addNewKeyring,this),createNewVaultAndRestore:(0,$.default)(this.createNewVaultAndRestore,this),exportAccount:this.exportAccount.bind(this),cancelTransaction:T.cancelTransaction.bind(T),updateTransaction:T.updateTransaction.bind(T),updateAndApproveTransaction:T.updateAndApproveTransaction.bind(T),approveTransactionsWithSameNonce:T.approveTransactionsWithSameNonce.bind(T),createCancelTransaction:this.createCancelTransaction.bind(this),createSpeedUpTransaction:this.createSpeedUpTransaction.bind(this),estimateGas:this.estimateGas.bind(this),getNextNonce:this.getNextNonce.bind(this),addUnapprovedTransaction:T.addUnapprovedTransaction.bind(T),createTransactionEventFragment:T.createTransactionEventFragment.bind(T),getTransactions:T.getTransactions.bind(T),updateEditableParams:T.updateEditableParams.bind(T),updateTransactionGasFees:T.updateTransactionGasFees.bind(T),updateTransactionSendFlowHistory:T.updateTransactionSendFlowHistory.bind(T),updateSwapApprovalTransaction:T.updateSwapApprovalTransaction.bind(T),updateSwapTransaction:T.updateSwapTransaction.bind(T),updatePreviousGasParams:T.updatePreviousGasParams.bind(T),signMessage:this.signMessage.bind(this),cancelMessage:this.cancelMessage.bind(this),signPersonalMessage:this.signPersonalMessage.bind(this),cancelPersonalMessage:this.cancelPersonalMessage.bind(this),signTypedMessage:this.signTypedMessage.bind(this),cancelTypedMessage:this.cancelTypedMessage.bind(this),decryptMessage:this.decryptMessage.bind(this),decryptMessageInline:this.decryptMessageInline.bind(this),cancelDecryptMessage:this.cancelDecryptMessage.bind(this),encryptionPublicKey:this.encryptionPublicKey.bind(this),cancelEncryptionPublicKey:this.cancelEncryptionPublicKey.bind(this),setSeedPhraseBackedUp:p.setSeedPhraseBackedUp.bind(p),completeOnboarding:p.completeOnboarding.bind(p),setFirstTimeFlowType:p.setFirstTimeFlowType.bind(p),setAlertEnabledness:t.setAlertEnabledness.bind(t),setUnconnectedAccountAlertShown:t.setUnconnectedAccountAlertShown.bind(t),setWeb3ShimUsageAlertDismissed:t.setWeb3ShimUsageAlertDismissed.bind(t),setThreeBoxSyncingPermission:b.setThreeBoxSyncingPermission.bind(b),restoreFromThreeBox:b.restoreFromThreeBox.bind(b),setShowRestorePromptToFalse:b.setShowRestorePromptToFalse.bind(b),getThreeBoxLastUpdated:b.getLastUpdated.bind(b),turnThreeBoxSyncingOn:b.turnThreeBoxSyncingOn.bind(b),initializeThreeBox:this.initializeThreeBox.bind(this),removePermissionsFor:f.revokePermissions.bind(f),approvePermissionsRequest:f.acceptPermissionsRequest.bind(f),rejectPermissionsRequest:f.rejectPermissionsRequest.bind(f),...(0,_e.getPermissionBackgroundApiMethods)(f),fetchAndSetQuotes:k.fetchAndSetQuotes.bind(k),setSelectedQuoteAggId:k.setSelectedQuoteAggId.bind(k),resetSwapsState:k.resetSwapsState.bind(k),setSwapsTokens:k.setSwapsTokens.bind(k),clearSwapsQuotes:k.clearSwapsQuotes.bind(k),setApproveTxId:k.setApproveTxId.bind(k),setTradeTxId:k.setTradeTxId.bind(k),setSwapsTxGasPrice:k.setSwapsTxGasPrice.bind(k),setSwapsTxGasLimit:k.setSwapsTxGasLimit.bind(k),setSwapsTxMaxFeePerGas:k.setSwapsTxMaxFeePerGas.bind(k),setSwapsTxMaxFeePriorityPerGas:k.setSwapsTxMaxFeePriorityPerGas.bind(k),safeRefetchQuotes:k.safeRefetchQuotes.bind(k),stopPollingForQuotes:k.stopPollingForQuotes.bind(k),setBackgroundSwapRouteState:k.setBackgroundSwapRouteState.bind(k),resetPostFetchState:k.resetPostFetchState.bind(k),setSwapsErrorKey:k.setSwapsErrorKey.bind(k),setInitialGasEstimate:k.setInitialGasEstimate.bind(k),setCustomApproveTxData:k.setCustomApproveTxData.bind(k),setSwapsLiveness:k.setSwapsLiveness.bind(k),setSwapsFeatureFlags:k.setSwapsFeatureFlags.bind(k),setSwapsUserFeeLevel:k.setSwapsUserFeeLevel.bind(k),setSwapsQuotesPollingLimitEnabled:k.setSwapsQuotesPollingLimitEnabled.bind(k),setSmartTransactionsOptInStatus:v.setOptInState.bind(v),fetchSmartTransactionFees:v.getFees.bind(v),clearSmartTransactionFees:v.clearFees.bind(v),submitSignedTransactions:v.submitSignedTransactions.bind(v),cancelSmartTransaction:v.cancelSmartTransaction.bind(v),fetchSmartTransactionsLiveness:v.fetchLiveness.bind(v),updateSmartTransaction:v.updateSmartTransaction.bind(v),setStatusRefreshInterval:v.setStatusRefreshInterval.bind(v),setNativeCurrency:(0,$.default)(this.setNativeCurrency,this),getHexAddressFromQtum:(0,$.default)(this.getHexAddressFromQtum,this),getQtumAddressFromHex:(0,$.default)(this.getQtumAddressFromHex,this),trackMetaMetricsEvent:h.trackEvent.bind(h),trackMetaMetricsPage:h.trackPage.bind(h),createEventFragment:h.createEventFragment.bind(h),updateEventFragment:h.updateEventFragment.bind(h),finalizeEventFragment:h.finalizeEventFragment.bind(h),resolvePendingApproval:r.accept.bind(r),rejectPendingApproval:async(e,t)=>{r.reject(e,new m.EthereumRpcError(t.code,t.message,t.data))},updateViewedNotifications:g.updateViewed.bind(g),getGasFeeEstimatesAndStartPolling:l.getGasFeeEstimatesAndStartPolling.bind(l),disconnectGasFeeEstimatePoller:l.disconnectPoller.bind(l),getGasFeeTimeEstimate:l.getTimeEstimate.bind(l),addPollingTokenToAppState:n.addPollingToken.bind(n),removePollingTokenFromAppState:n.removePollingToken.bind(n),backupUserData:_.backupUserData.bind(_),restoreUserData:_.restoreUserData.bind(_),detectNewTokens:a.detectNewTokens.bind(a),detectCollectibles:null,addDetectedTokens:w.addDetectedTokens.bind(w),addImportedTokens:w.addTokens.bind(w),ignoreTokens:w.ignoreTokens.bind(w),getBalancesInSingleCall:S.getBalancesInSingleCall.bind(S)}}async getTokenStandardAndDetails(e,t,r){var n,s;const o=await this.assetsContractController.getTokenStandardAndDetails(e,t,r);return{...o,decimals:null==o||null===(n=o.decimals)||void 0===n?void 0:n.toString(10),balance:null==o||null===(s=o.balance)||void 0===s?void 0:s.toString(10)}}async createNewVaultAndKeychain(e){const t=await this.createVaultMutex.acquire();try{let r;if((await this.keyringController.getAccounts()).length>0)r=await this.keyringController.fullUpdate();else{r=await this.keyringController.createNewVaultAndKeychain(e);const t=await this.keyringController.getAccounts();this.preferencesController.setAddresses(t),this.selectFirstIdentity(),await this.updateQtumAccounts(t)}return r}finally{t()}}async requestAddNetworkApproval(e,t){try{await this.approvalController.addAndShowApprovalRequest({origin:"metamask",type:"wallet_addEthereumChain",requestData:{chainId:e.chainId,blockExplorerUrl:e.rpcPrefs.blockExplorerUrl,chainName:e.nickname,rpcUrl:e.rpcUrl,ticker:e.ticker,imageUrl:e.rpcPrefs.imageUrl}})}catch(e){if(!t||"User rejected the request."!==e.message)throw e}}async addCustomNetwork(e){const{chainId:t,chainName:r,rpcUrl:n,ticker:s,blockExplorerUrl:o}=e;let i;await this.preferencesController.addToFrequentRpcList(n,t,s,r,{blockExplorerUrl:o});try{i=new URL(n).origin}catch{}this.metaMetricsController.trackEvent({event:"Custom Network Added",category:j.EVENT.CATEGORIES.NETWORK,referrer:{url:i},properties:{chain_id:t,network_name:r,network:i,symbol:s,block_explorer_url:o,source:j.EVENT.SOURCE.NETWORK.POPULAR_NETWORK_LIST},sensitiveProperties:{rpc_url:i}})}async createNewVaultAndRestore(e,t){const r=await this.createVaultMutex.acquire();try{let s,o;const i=n.from(t),{keyringController:a}=this;this.preferencesController.setAddresses([]),this.permissionController.clearState(),this.accountTracker.clearAccounts(),this.cachedBalancesController.clearCachedBalances(),this.txController.txStateManager.clearUnapprovedTxs();const c=await a.createNewVaultAndRestore(e,i),l=new S.default(this.provider);s=await a.getAccounts(),o=await this.getBalance(s[s.length-1],l);const d=a.getKeyringsByType("HD Key Tree")[0];if(!d)throw new Error("MetamaskController - No HD Key Tree found");for(;"0x0"!==o;)await a.addNewAccount(d),s=await a.getAccounts(),o=await this.getBalance(s[s.length-1],l);s.length>1&&"0x0"===o&&(await this.removeAccount(s[s.length-1]),s=await a.getAccounts());const h=this.preferencesController.getLedgerTransportPreference();return this.setLedgerTransportPreference(h),this.preferencesController.setAddresses(s),this.selectFirstIdentity(),await this.updateQtumAccounts(s),c}finally{r()}}getBalance(e,t){return new Promise(((r,n)=>{const s=this.accountTracker.store.getState().accounts[e];s&&s.balance?r(s.balance):t.getBalance(e,((e,t)=>{e?(n(e),k.default.error(e)):r(t||"0x0")}))}))}async fetchInfoToSync(){const{currentLocale:e,frequentRpcList:t,identities:r,selectedAddress:n,useTokenDetection:s}=this.preferencesController.store.getState(),o=!s&&this.networkController.store.getState().provider.chainId===R.MAINNET_CHAIN_ID,{tokenList:i}=this.tokenListController.state,a=o?W.STATIC_MAINNET_TOKEN_LIST:i,c={currentLocale:e,frequentRpcList:t,identities:r,selectedAddress:n},{allTokens:l,allIgnoredTokens:d}=this.tokensController.state,h={};Object.keys(l).forEach((e=>{h[e]={},Object.keys(l[e]).forEach((t=>{const r=(0,K.toChecksumHexAddress)(t);h[e][r]=l[e][r].filter((e=>{var t;if(e.isERC721===undefined){if(a[null===(t=e.address)||void 0===t?void 0:t.toLowerCase()]!==undefined)return!0}else if(!1===e.isERC721)return!0;return!1}))}))}));const u=this.keyringController.getKeyringsByType("HD Key Tree")[0],g=this.keyringController.getKeyringsByType("Simple Key Pair"),p=await u.getAccounts(),f=(await Promise.all(g.map((e=>e.getAccounts())))).reduce(((e,t)=>[...e,...t]),[]),m={hd:p.filter(((e,t)=>p.indexOf(e)===t)).map((e=>(0,K.toChecksumHexAddress)(e))),simpleKeyPair:f.filter(((e,t)=>f.indexOf(e)===t)).map((e=>(0,K.toChecksumHexAddress)(e))),ledger:[],trezor:[],lattice:[]};let{transactions:y}=this.txController.store.getState();return y=Object.values(y).filter((e=>{const t=(0,K.toChecksumHexAddress)(e.txParams.from);return m.hd.includes(t)})),{accounts:m,preferences:c,transactions:y,tokens:{allTokens:h,allIgnoredTokens:d},network:this.networkController.store.getState()}}async submitPassword(e){await this.keyringController.submitPassword(e);try{await this.blockTracker.checkForLatestBlock()}catch(e){k.default.error("Error while unlocking extension.",e)}try{const e=this.threeBoxController.getThreeBoxSyncingState();e&&!this.threeBoxController.box?(this.threeBoxController.init(),this.threeBoxController.turnThreeBoxSyncingOn()):e&&this.threeBoxController.box&&this.threeBoxController.turnThreeBoxSyncingOn()}catch(e){k.default.error("Error while unlocking extension.",e)}const t=this.preferencesController.getLedgerTransportPreference();return this.setLedgerTransportPreference(t),this.keyringController.fullUpdate()}async verifyPassword(e){await this.keyringController.verifyPassword(e)}async exportAccount(e){return await this.MonekyPatchQTUMExportAccount(),await this.keyringController.exportAccount(e)}async addNewKeyring(e,t){const{keyringController:r}=this;return await r.addNewKeyring(e,t)}async getAccounts(){return await this.keyringController.getAccounts()}selectFirstIdentity(){const{identities:e}=this.preferencesController.store.getState(),t=Object.keys(e)[0];this.preferencesController.setSelectedAddress(t)}getPrimaryKeyringMnemonic(){const e=this.keyringController.getKeyringsByType("HD Key Tree")[0];if(!e.mnemonic)throw new Error("Primary keyring mnemonic unavailable.");return e.mnemonic}async getKeyringForDevice(e,t=null){let r=null;switch(e){case N.DEVICE_NAMES.TREZOR:r=b.default.type;break;case N.DEVICE_NAMES.LEDGER:r=w.default.type;break;case N.DEVICE_NAMES.QR:r=T.MetaMaskKeyring.type;break;case N.DEVICE_NAMES.LATTICE:r=v.default.type;break;default:throw new Error("MetamaskController:getKeyringForDevice - Unknown device")}let n=await this.keyringController.getKeyringsByType(r)[0];if(n||(n=await this.addNewKeyring(r)),t&&n.setHdPath&&n.setHdPath(t),e===N.DEVICE_NAMES.LATTICE&&(n.appName="MetaMask"),e===N.DEVICE_NAMES.TREZOR){const e=n.getModel();this.appStateController.setTrezorModel(e)}return n.network=this.networkController.getProviderConfig().type,n}async attemptLedgerTransportCreation(){const e=await this.getKeyringForDevice(N.DEVICE_NAMES.LEDGER);return await e.attemptMakeApp()}async establishLedgerTransportPreference(){const e=this.preferencesController.getLedgerTransportPreference();return await this.setLedgerTransportPreference(e)}async connectHardware(e,t,r){const n=await this.getKeyringForDevice(e,r);let s=[];switch(t){case-1:s=await n.getPreviousPage();break;case 1:s=await n.getNextPage();break;default:s=await n.getFirstPage()}const o=await this.keyringController.getAccounts(),i=[...new Set(o.concat(s.map((e=>e.address.toLowerCase()))))];return this.accountTracker.syncWithAddresses(i),s}async checkHardwareStatus(e,t){return(await this.getKeyringForDevice(e,t)).isUnlocked()}async forgetDevice(e){return(await this.getKeyringForDevice(e)).forgetDevice(),!0}async getAccountType(e){switch((await this.keyringController.getKeyringForAccount(e)).type){case N.KEYRING_TYPES.TREZOR:case N.KEYRING_TYPES.LATTICE:case N.KEYRING_TYPES.QR:case N.KEYRING_TYPES.LEDGER:return"hardware";case N.KEYRING_TYPES.IMPORTED:return"imported";default:return"MetaMask"}}async getDeviceModel(e){const t=await this.keyringController.getKeyringForAccount(e);switch(t.type){case N.KEYRING_TYPES.TREZOR:return t.getModel();case N.KEYRING_TYPES.QR:return t.getName();case N.KEYRING_TYPES.LEDGER:return N.DEVICE_NAMES.LEDGER;case N.KEYRING_TYPES.LATTICE:return N.DEVICE_NAMES.LATTICE;default:return"N/A"}}getAccountLabel(e,t,r){return`${e[0].toUpperCase()}${e.slice(1)} ${parseInt(t,10)+1} ${r||""}`.trim()}async unlockHardwareWalletAccount(e,t,r,n){const s=await this.getKeyringForDevice(t,r);s.setAccountToUnlock(e);const o=await this.keyringController.getAccounts(),i=await this.keyringController.addNewAccount(s),a=await this.keyringController.getAccounts();this.preferencesController.setAddresses(a),a.forEach((r=>{if(!o.includes(r)){const o=this.getAccountLabel(t===N.DEVICE_NAMES.QR?s.getName():t,e,n);this.preferencesController.setAccountLabel(r,o),this.preferencesController.setSelectedAddress(r)}}));const{identities:c}=this.preferencesController.store.getState();return{...i,identities:c}}async addNewAccount(e){const t=this.keyringController.getKeyringsByType("HD Key Tree")[0];if(!t)throw new Error("MetamaskController - No HD Key Tree found");const{keyringController:r}=this,{identities:n}=this.preferencesController.store.getState();if(Object.keys(n).length===e){const e=await r.getAccounts(),n=await r.addNewAccount(t),s=await r.getAccounts();await this.verifySeedPhrase(),this.preferencesController.setAddresses(s),s.forEach((t=>{e.includes(t)||this.preferencesController.setSelectedAddress(t)})),await this.updateQtumAccounts(s);const{identities:o}=this.preferencesController.store.getState();return{...n,identities:o}}return{...r.memStore.getState(),identities:n}}async verifySeedPhrase(){const e=this.keyringController.getKeyringsByType("HD Key Tree")[0];if(!e)throw new Error("MetamaskController - No HD Key Tree found");const t=await e.serialize(),r=n.from(t.mnemonic),s=await e.getAccounts();if(s.length<1)throw new Error("MetamaskController - No accounts found");try{return await we.default.verifyAccounts(s,r),Array.from(r.values())}catch(e){throw k.default.error(e.message),e}}async resetAccount(){const e=this.preferencesController.getSelectedAddress();return this.txController.wipeTransactions(e),this.networkController.resetConnection(),e}async getPermittedAccounts(e,{suppressUnauthorizedError:t=!0}={}){try{return await this.permissionController.executeRestrictedMethod(e,O.RestrictedMethods.eth_accounts)}catch(e){if(t&&e.code===m.errorCodes.provider.unauthorized)return[];throw e}}removeAllAccountPermissions(e){this.permissionController.updatePermissionsByCaveat(O.CaveatTypes.restrictReturnedAccounts,(t=>_e.CaveatMutatorFactories[O.CaveatTypes.restrictReturnedAccounts].removeAccount(e,t)))}async removeAccount(e){this.removeAllAccountPermissions(e),this.preferencesController.removeAddress(e),this.accountTracker.removeAccount([e]);const t=await this.keyringController.getKeyringForAccount(e);await this.keyringController.removeAccount(e);const r=t?await t.getAccounts():{};var n;0===(null==r?void 0:r.length)&&(null===(n=t.destroy)||void 0===n||n.call(t));return e}async importAccountWithStrategy(e,t){const r=await be.default.importAccount(e,t);let n=!1;r instanceof Array?n=!0:r=[r];let s;for(let e=0;e<r.length;e++)try{o=r[e],s=/^[A-HJ-NP-Za-km-z1-9]*$/.test(o)?await this.addNewKeyring("WIF Key Pair",[r[e]]):await this.addNewKeyring("Simple Key Pair",[r[e]])}catch(e){if(!e.message.indexOf("duplicate"))throw e}var o;if(!s)return;const i=await s.getAccounts(),a=await this.keyringController.getAccounts();this.preferencesController.setAddresses(a),await this.preferencesController.setSelectedAddress(i[0]),await this.updateQtumAccounts(i)}async newUnapprovedTransaction(e,t){return await this.txController.newUnapprovedTransaction(e,t)}async newUnsignedMessage(e,t){const r=(0,ue.normalizeMsgData)(e.data);let n;if(66!==r.length&&67!==r.length)throw m.ethErrors.rpc.invalidParams("eth_sign requires 32 byte message hash");return n=this.messageManager.addUnapprovedMessageAsync(e,t),this.sendUpdate(),this.opts.showUserConfirmation(),await n}newUnsignedBtcMessage(e,t){return e.btc=!0,this.newUnsignedMessage(e,t)}async signMessage(e){k.default.info("MetaMaskController - signMessage");const t=e.metamaskId;try{const r=await this.messageManager.approveMessage(e);this.monkeyPatchSimpleKeyringSignMessage();const n=await this.keyringController.signMessage(r,{btc:r.btc});return this.messageManager.setMsgStatusSigned(t,n),this.getState()}catch(e){throw k.default.info("MetaMaskController - eth_sign failed",e),this.messageManager.errorMessage(t,e),e}}cancelMessage(e){const{messageManager:t}=this;return t.rejectMsg(e),this.getState()}async newUnsignedPersonalMessage(e,t){const r=this.personalMessageManager.addUnapprovedMessageAsync(e,t);return this.sendUpdate(),this.opts.showUserConfirmation(),r}newUnsignedBtcPersonalMessage(e,t){return e.btc=!0,this.newUnsignedPersonalMessage(e,t)}async signPersonalMessage(e){k.default.info("MetaMaskController - signPersonalMessage");const t=e.metamaskId;try{const r=await this.personalMessageManager.approveMessage(e);await this.monkeyPatchSimpleKeyringSignPersonalMessage();const n=await this.keyringController.signPersonalMessage(r,{btc:r.btc});return this.personalMessageManager.setMsgStatusSigned(t,n),this.getState()}catch(e){throw k.default.info("MetaMaskController - eth_personalSign failed",e),this.personalMessageManager.errorMessage(t,e),e}}cancelPersonalMessage(e){return this.personalMessageManager.rejectMsg(e),this.getState()}async newRequestDecryptMessage(e,t){const r=this.decryptMessageManager.addUnapprovedMessageAsync(e,t);return this.sendUpdate(),this.opts.showUserConfirmation(),r}async decryptMessageInline(e){k.default.info("MetaMaskController - decryptMessageInline");const t=e.metamaskId,r=this.decryptMessageManager.getMsg(t);try{const t=(0,C.stripHexPrefix)(e.data),s=n.from(t,"hex");e.data=JSON.parse(s.toString("utf8")),r.rawData=await this.keyringController.decryptMessage(e)}catch(e){r.error=e.message}return this.decryptMessageManager._updateMsg(r),this.getState()}async decryptMessage(e){k.default.info("MetaMaskController - decryptMessage");const t=e.metamaskId;try{const r=await this.decryptMessageManager.approveMessage(e),s=(0,C.stripHexPrefix)(r.data),o=n.from(s,"hex");r.data=JSON.parse(o.toString("utf8"));const i=await this.keyringController.decryptMessage(r);this.decryptMessageManager.setMsgStatusDecrypted(t,i)}catch(e){k.default.info("MetaMaskController - eth_decrypt failed.",e),this.decryptMessageManager.errorMessage(t,e)}return this.getState()}cancelDecryptMessage(e){return this.decryptMessageManager.rejectMsg(e),this.getState()}async newRequestEncryptionPublicKey(e,t){const r=e;switch((await this.keyringController.getKeyringForAccount(r)).type){case N.KEYRING_TYPES.LEDGER:return new Promise(((e,t)=>{t(new Error("Ledger does not support eth_getEncryptionPublicKey."))}));case N.KEYRING_TYPES.TREZOR:return new Promise(((e,t)=>{t(new Error("Trezor does not support eth_getEncryptionPublicKey."))}));case N.KEYRING_TYPES.LATTICE:return new Promise(((e,t)=>{t(new Error("Lattice does not support eth_getEncryptionPublicKey."))}));case N.KEYRING_TYPES.QR:return Promise.reject(new Error("QR hardware does not support eth_getEncryptionPublicKey."));default:{const r=this.encryptionPublicKeyManager.addUnapprovedMessageAsync(e,t);return this.sendUpdate(),this.opts.showUserConfirmation(),r}}}async encryptionPublicKey(e){k.default.info("MetaMaskController - encryptionPublicKey");const t=e.metamaskId;try{const r=await this.encryptionPublicKeyManager.approveMessage(e),n=await this.keyringController.getEncryptionPublicKey(r.data);this.encryptionPublicKeyManager.setMsgStatusReceived(t,n)}catch(e){k.default.info("MetaMaskController - eth_getEncryptionPublicKey failed.",e),this.encryptionPublicKeyManager.errorMessage(t,e)}return this.getState()}cancelEncryptionPublicKey(e){return this.encryptionPublicKeyManager.rejectMsg(e),this.getState()}newUnsignedTypedMessage(e,t,r){const n=this.typedMessageManager.addUnapprovedMessageAsync(e,t,r);return this.sendUpdate(),this.opts.showUserConfirmation(),n}newUnsignedBtcTypedMessage(e,t,r){return e.btc=!0,this.newUnsignedTypedMessage(e,t,r)}async signTypedMessage(e){k.default.info("MetaMaskController - eth_signTypedData"),this.monkeyPatchSimpleKeyringSignTypedMessage();const t=e.metamaskId,{version:r}=e;try{const n=await this.typedMessageManager.approveMessage(e);"V1"!==r&&"string"==typeof n.data&&(n.data=JSON.parse(n.data));const s=await this.keyringController.signTypedMessage(n,{version:r,btc:n.btc});return this.typedMessageManager.setMsgStatusSigned(t,s),this.getState()}catch(e){throw k.default.info("MetaMaskController - eth_signTypedData failed.",e),this.typedMessageManager.errorMessage(t,e),e}}cancelTypedMessage(e){return this.typedMessageManager.rejectMsg(e),this.getState()}async getCurrentAccountEIP1559Compatibility(){return!0}async createCancelTransaction(e,t,r){await this.txController.createCancelTransaction(e,t,r);return await this.getState()}async createSpeedUpTransaction(e,t,r){await this.txController.createSpeedUpTransaction(e,t,r);return await this.getState()}estimateGas(e){return new Promise(((t,r)=>this.txController.txGasUtil.query.estimateGas(e,((e,n)=>e?r(e):t(n.toString(16))))))}markPasswordForgotten(){this.preferencesController.setPasswordForgotten(!0),this.sendUpdate()}unMarkPasswordForgotten(){this.preferencesController.setPasswordForgotten(!1),this.sendUpdate()}setupUntrustedCommunication({connectionStream:e,sender:t,subjectType:r}){const{usePhishDetect:n}=this.preferencesController.store.getState();let s;if(s=r||(t.id&&t.id!==this.extension.runtime.id?L.SUBJECT_TYPES.EXTENSION:L.SUBJECT_TYPES.WEBSITE),t.url){const{hostname:r}=new URL(t.url),s=this.phishingController.test(r);if(n&&null!=s&&s.result)return void this.sendPhishingWarning(e,r,s)}const o=(0,te.setupMultiplex)(e);this.setupProviderConnection(o.createStream("qnekt-provider"),t,s),t.url&&this.setupPublicConfig(o.createStream("publicConfig"))}setupTrustedCommunication(e,t){const r=(0,te.setupMultiplex)(e);this.setupControllerConnection(r.createStream("controller")),this.setupProviderConnection(r.createStream("provider"),t,L.SUBJECT_TYPES.INTERNAL)}setupPhishingCommunication({connectionStream:e}){const{usePhishDetect:t}=this.preferencesController.store.getState();if(!t)return;const r=(0,te.setupMultiplex)(e).createStream("qnekt-phishing-safelist");r.on("data",(0,Se.default)({safelistPhishingDomain:this.safelistPhishingDomain.bind(this)},r))}sendPhishingWarning(e,t,r){const n=x.PHISHING_NEW_ISSUE_URLS[null==r?void 0:r.name];(0,te.setupMultiplex)(e).createStream("phishing").write({hostname:t,newIssueUrl:n})}setupControllerConnection(e){const t=this.getApi();this.activeControllerConnections+=1,this.emit("controllerConnectionChanged",this.activeControllerConnections),e.on("data",(0,Se.default)(t,e));const r=t=>{e._writableState.ended||e.write({jsonrpc:"2.0",method:"sendUpdate",params:[t]})};this.on("update",r),e.on("end",(()=>{this.activeControllerConnections-=1,this.emit("controllerConnectionChanged",this.activeControllerConnections),this.removeListener("update",r)}))}setupProviderConnection(e,t,r){let n,s;n=r===L.SUBJECT_TYPES.INTERNAL?L.ORIGIN_METAMASK:new URL(t.url).origin,t.id&&t.id!==this.extension.runtime.id&&this.subjectMetadataController.addSubjectMetadata({origin:n,extensionId:t.id,subjectType:L.SUBJECT_TYPES.EXTENSION}),t.tab&&t.tab.id&&(s=t.tab.id);const o=this.setupProviderEngine({origin:n,sender:t,subjectType:r,tabId:s}),a=(0,h.default)({engine:o}),c=this.addConnection(n,{engine:o});(0,i.default)(e,a,e,(e=>{o._middleware.forEach((e=>{e.destroy&&"function"==typeof e.destroy&&e.destroy()})),c&&this.removeConnection(n,c),e&&k.default.error(e)}))}setupProviderEngine({origin:e,subjectType:t,sender:r,tabId:n}){const s=new l.JsonRpcEngine,{blockTracker:o,provider:i}=this,a=(0,u.default)({provider:i,blockTracker:o}),c=(0,g.default)({provider:i,blockTracker:o});return c.events.on("notification",(e=>s.emit("notification",e))),s.push((0,X.default)({origin:e})),n&&s.push((0,Z.default)({tabId:n})),s.push((0,z.default)({origin:e})),s.push(this.permissionLogController.createMiddleware()),s.push((0,Me.default)({trackEvent:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),getMetricsState:this.metaMetricsController.store.getState.bind(this.metaMetricsController.store)})),t===L.SUBJECT_TYPES.WEBSITE&&s.push((0,ee.default)({location:r.url,registerOnboarding:this.onboardingController.registerOnboarding})),s.push((0,J.createMethodMiddleware)({origin:e,subjectType:t,addSubjectMetadata:this.subjectMetadataController.addSubjectMetadata.bind(this.subjectMetadataController),getProviderState:this.getProviderState.bind(this),getUnlockPromise:this.appStateController.getUnlockPromise.bind(this.appStateController),handleWatchAssetRequest:this.tokensController.watchAsset.bind(this.tokensController),requestUserApproval:this.approvalController.addAndShowApprovalRequest.bind(this.approvalController),sendMetrics:this.metaMetricsController.trackEvent.bind(this.metaMetricsController),getAccounts:this.getPermittedAccounts.bind(this,e),getPermissionsForOrigin:this.permissionController.getPermissions.bind(this.permissionController,e),hasPermission:this.permissionController.hasPermission.bind(this.permissionController,e),requestAccountsPermission:this.permissionController.requestPermissions.bind(this.permissionController,{origin:e},{eth_accounts:{}}),requestPermissionsForOrigin:this.permissionController.requestPermissions.bind(this.permissionController,{origin:e}),addCustomRpc:async({chainId:e,blockExplorerUrl:t,ticker:r,chainName:n,rpcUrl:s}={})=>{await this.preferencesController.addToFrequentRpcList(s,e,r,n,{blockExplorerUrl:t})},findCustomRpcBy:this.findCustomRpcBy.bind(this),getCurrentChainId:this.networkController.getCurrentChainId.bind(this.networkController),getCurrentRpcUrl:this.networkController.getCurrentRpcUrl.bind(this.networkController),setProviderType:this.networkController.setProviderType.bind(this.networkController),updateRpcTarget:({rpcUrl:e,chainId:t,ticker:r,nickname:n})=>{this.networkController.setRpcTarget(e,t,r,n)},getWeb3ShimUsageState:this.alertController.getWeb3ShimUsageState.bind(this.alertController),setWeb3ShimUsageRecorded:this.alertController.setWeb3ShimUsageRecorded.bind(this.alertController),btcSign:this.newUnsignedBtcMessage.bind(this),btcPersonalSign:this.newUnsignedBtcPersonalMessage.bind(this),btcSignTypedData:this.newUnsignedBtcTypedMessage.bind(this)})),s.push(a),s.push(c.middleware),t!==L.SUBJECT_TYPES.INTERNAL&&s.push(this.permissionController.createPermissionMiddleware({origin:e})),s.push((0,p.providerAsMiddleware)(i)),s}setupPublicConfig(e){const t=(0,c.storeAsStream)(this.publicConfigStore);(0,i.default)(t,e,(e=>{t.destroy(),e&&k.default.error(e)}))}addConnection(e,{engine:t}){if(e===L.ORIGIN_METAMASK)return null;this.connections[e]||(this.connections[e]={});const r=(0,_.default)();return this.connections[e][r]={engine:t},r}removeConnection(e,t){const r=this.connections[e];r&&(delete r[t],0===Object.keys(r).length&&delete this.connections[e])}removeAllConnections(e){const t=this.connections[e];t&&Object.keys(t).forEach((t=>{this.removeConnection(e,t)}))}notifyConnections(e,t){const r=this.connections[e];r&&Object.values(r).forEach((e=>{e.engine&&e.engine.emit("notification",t)}))}notifyAllConnections(e){const t="function"==typeof e?t=>e(t):()=>e;Object.keys(this.connections).forEach((e=>{Object.values(this.connections[e]).forEach((async r=>{r.engine&&r.engine.emit("notification",await t(e))}))}))}async _onKeyringControllerUpdate(e){const{keyrings:t}=e,r=t.reduce(((e,{accounts:t})=>e.concat(t)),[]);r.length&&(this.preferencesController.syncAddresses(r),this.accountTracker.syncWithAddresses(r))}_onUnlock(){this.notifyAllConnections((async e=>({method:_e.NOTIFICATION_NAMES.unlockStateChanged,params:{isUnlocked:!0,accounts:await this.getPermittedAccounts(e)}}))),this.emit("unlock")}_onLock(){this.notifyAllConnections({method:_e.NOTIFICATION_NAMES.unlockStateChanged,params:{isUnlocked:!1}}),this.emit("lock")}_onStateUpdate(e){this.isClientOpenAndUnlocked=e.isUnlocked&&this._isClientOpen,this.notifyAllConnections({method:_e.NOTIFICATION_NAMES.chainChanged,params:this.getProviderNetworkState(e)})}privateSendUpdate(){this.emit("update",this.getState())}isUnlocked(){return this.keyringController.memStore.getState().isUnlocked}getExternalPendingTransactions(e){return this.smartTransactionsController.getTransactions({addressFrom:e,status:"pending"})}async getPendingNonce(e){const{nonceDetails:t,releaseLock:r}=await this.txController.nonceTracker.getNonceLock(e),n=t.params.highestSuggested;return r(),n}async getNextNonce(e){const t=await this.txController.nonceTracker.getNonceLock(e);return t.releaseLock(),t.nextNonce}async migrateAddressBookState(e,t,r=!1){const{addressBook:n}=this.addressBookController.state;if(n[e])for(const s of Object.keys(n[e])){const o=n[e][s];this.addressBookController.set(s,o.name,t,o.memo),r||this.addressBookController.delete(e,s)}}async updateAndSetCustomRpc(e,t,r="ETH",n,s){return this.networkController.setRpcTarget(e,t,r,n,s),await this.preferencesController.updateRpc({rpcUrl:e,chainId:t,ticker:r,nickname:n,rpcPrefs:s}),e}async setCustomRpc(e,t,r="ETH",n="",s={}){const o=this.preferencesController.getFrequentRpcListDetail().find((t=>e===t.rpcUrl));return o?this.networkController.setRpcTarget(o.rpcUrl,o.chainId,o.ticker,o.nickname,s):(this.networkController.setRpcTarget(e,t,r,n,s),await this.preferencesController.addToFrequentRpcList(e,t,r,n,s)),e}async delCustomRpc(e){await this.preferencesController.removeFromFrequentRpcList(e)}findCustomRpcBy(e){const t=this.preferencesController.getFrequentRpcListDetail();for(const r of t)for(const t of Object.keys(e))if(r[t]===e[t])return r;return null}async initializeThreeBox(){await this.threeBoxController.init()}async setLedgerTransportPreference(e){this.preferencesController.getLedgerTransportPreference(),this.preferencesController.setLedgerTransportPreference(e);return undefined}setParticipateInMetaMetrics(e,t){try{return void t(null,this.metaMetricsController.setParticipateInMetaMetrics(e))}catch(e){return void t(e)}}setCurrentLocale(e,t){try{return void t(null,this.preferencesController.setCurrentLocale(e))}catch(e){return void t(e)}}setNativeCurrency(){this.monkeyPatchQTUMSetCurrency()}recordFirstTimeInfo(e){if(!("firstTimeInfo"in e)){const t=this.platform.getVersion();e.firstTimeInfo={version:t,date:Date.now()}}}set isClientOpen(e){this._isClientOpen=e,this.detectTokensController.isOpen=e}onClientClosed(){try{this.gasFeeController.stopPolling(),this.appStateController.clearPollingTokens()}catch(e){console.error(e)}}onEnvironmentTypeClosed(e){const t=L.POLLING_TOKEN_ENVIRONMENT_TYPES[e];this.appStateController.store.getState()[t].forEach((e=>{this.gasFeeController.disconnectPoller(e),this.appStateController.removePollingToken(e,t)}))}safelistPhishingDomain(e){return this.phishingController.bypass(e)}setLocked(){var e;const[t]=this.keyringController.getKeyringsByType(N.KEYRING_TYPES.TREZOR);t&&t.dispose();const[r]=this.keyringController.getKeyringsByType(N.KEYRING_TYPES.LEDGER);return null==r||null===(e=r.destroy)||void 0===e||e.call(r),this.keyringController.setLocked()}async getHexAddressFromQtum(e){return await this.getHexAddressFromQtumAddress(e)}async getQtumAddressFromHex(e){return await this.getQtumAddressFromHexAddress(e)}}r.default=Oe,["createNewVaultAndKeychain","createNewVaultAndRestore","submitPassword","verifyPassword"].forEach((e=>{const t=`_${e}`;Oe.prototype[t]=Oe.prototype[e],Oe.prototype[e]=function(){return this.monkeyPatchQTUMAddressGeneration(),this.monkeyPatchQTUMAddressImport(),this.MonekyPatchQTUMExportAccount(),this[t].apply(this,arguments)}})),Oe.prototype._addNewKeyring=Oe.prototype.addNewKeyring,Oe.prototype.addNewKeyring=function(e,t){return this.monkeyPatchQTUMAddressImport(),this.MonekyPatchQTUMExportAccount(),this._addNewKeyring.apply(this,arguments)},Oe.prototype.monkeyPatchQTUMAddressGeneration=function(e){if(!this._monkeyPatched){this._monkeyPatched=!0;for(let e=0;e<this.keyringController.keyringTypes.length;e++){const t=this.keyringController.keyringTypes[e];if(t.prototype.hasOwnProperty("_monkeyPatched"))continue;const{type:r}=t;switch(r){case"HD Key Tree":console.log("monkey patching QTUM address generation into hd key tree"),this.monkeyPatchHDKeyringAddNewKeyring(),this.monkeyPatchHDKeyringAddressGeneration(t);case"Simple Key Pair":console.log("monkey patching QTUM address generation into simple key pair"),this.monkeyPatchSimpleKeyringAddressGeneration(t);default:console.log(`QTUM address generation support for ${r} is not yet supported`)}}}},Oe.prototype.monkeyPatchQTUMAddressImport=function(){for(let e=0;e<this.keyringController.keyringTypes.length;e++){const t=this.keyringController.keyringTypes[e];if(t.prototype.hasOwnProperty("_monkeyPatched"))continue;const{type:r}=t;switch(r){case"HD Key Tree":console.log("monkey patching QTUM address import into hd key tree"),this.monkeyPatchHDKeyringAddressImport(t);case"Simple Key Pair":console.log("monkey patching QTUM address import into simple key pair"),this.monkeyPatchSimpleKeyringAddressImport(t);default:console.log(`QTUM address import support for ${r} is not yet supported`)}}};const Ue={filterDust:!0};Oe.prototype.monkeyPatchHDKeyringAddressGeneration=function(e){e.prototype.hasOwnProperty("_addAccountsHDKey")||(e.prototype._addAccountsHDKey=e.prototype.addAccounts,e.prototype.addAccounts=function(e=1){return new Promise(((t,r)=>{this._addAccountsHDKey(e).then((()=>{for(let e=0;e<this.wallets.length;e++)try{const t=this.wallets[e];if(t._monkeyPatched)continue;if(t._monkeyPatched=!0,t.publicKey===undefined)continue;if(t.__proto__._getAddress)continue;t.__proto__._getAddress=t.__proto__.getAddress,t.__proto__.getAddress=function(){return this._qtumWallet||(this._qtumWallet=new o.QtumWallet(`0x${this.privKey.toString("hex")}`,Ue)),n.from((0,C.stripHexPrefix)(this._qtumWallet.address),"hex")}}catch(e){throw console.error(e),e}return this._addAccountsHDKey(0).then(t).catch(r)})).catch(r)}))},e._monkeyPatched=!0)},Oe.prototype.monkeyPatchSimpleKeyringAddressGeneration=function(e){e.prototype.hasOwnProperty("_addAccounts")||(e.prototype._addAccounts=e.prototype.addAccounts,e.prototype.addAccounts=function(e=1){return new Promise(((t,r)=>{this._addAccounts(e).then((()=>{for(let e=0;e<this.wallets.length;e++)try{const t=this.wallets[e];if(t._monkeyPatched)continue;if(t._monkeyPatched=!0,t.publicKey===undefined)continue;if(t.__proto__._getAddress)continue;t.__proto__._getAddress=t.__proto__.getAddress,t.__proto__.getAddress=function(){return this._qtumWallet||(this._qtumWallet=new o.QtumWallet(`0x${this.privKey.toString("hex")}`,Ue)),n.from((0,C.stripHexPrefix)(this._qtumWallet.address),"hex")}}catch(e){throw console.error(e),e}return this._addAccounts(0).then(t).catch(r)})).catch(r)}))},e._monkeyPatched=!0)},Oe.prototype.monkeyPatchHDKeyringAddressImport=function(e){e.prototype.hasOwnProperty("_getAccountsHDKey")||(e.prototype._getAccountsHDKey=e.prototype.getAccounts,e.prototype.getAccounts=function(){return new Promise(((e,t)=>{this._getAccountsHDKey().then((()=>{for(let e=0;e<this.wallets.length;e++)try{const t=this.wallets[e];if(t._monkeyPatched)continue;if(t._monkeyPatched=!0,t.publicKey===undefined)continue;if(t.__proto__._getAddress)continue;t.__proto__._getAddress=t.__proto__.getAddress,t.__proto__.getAddress=function(){return this._qtumWallet||(this._qtumWallet=new o.QtumWallet(`0x${this.privKey.toString("hex")}`,Ue)),n.from((0,C.stripHexPrefix)(this._qtumWallet.address),"hex")}}catch(e){throw console.error(e),e}return this._getAccountsHDKey().then(e).catch(t)})).catch(t)}))},e._monkeyPatched=!0)},Oe.prototype.monkeyPatchSimpleKeyringAddressImport=function(e){e.prototype.hasOwnProperty("_getAccounts")||(e.prototype._getAccounts=e.prototype.getAccounts,e.prototype.getAccounts=function(){return new Promise(((e,t)=>{this._getAccounts().then((()=>{for(let e=0;e<this.wallets.length;e++)try{const t=this.wallets[e];if(t._monkeyPatched)continue;if(t._monkeyPatched=!0,t.publicKey===undefined)continue;if(t.__proto__._getAddress)continue;t.__proto__._getAddress=t.__proto__.getAddress,t.__proto__.getAddress=function(){return this._qtumWallet||(this._qtumWallet=new o.QtumWallet(`0x${this.privKey.toString("hex")}`,Ue)),n.from((0,C.stripHexPrefix)(this._qtumWallet.address),"hex")}}catch(e){throw console.error(e),e}return this._getAccounts().then(e).catch(t)})).catch(t)}))},e._monkeyPatched=!0)},Oe.prototype.monkeyPatchQTUMSetCurrency=async function(){const{ticker:e}=this.networkController.getProviderConfig();try{await this.currencyRateController.setNativeCurrency(e)}catch(e){console.error(e)}},Oe.prototype.monkeyPatchQTUMGetBalance=async function(e){const{rpcUrl:t}=this.networkController.getProviderConfig();try{const r=await(0,A.jsonRpcRequest)(t,"qtum_getUTXOs",[e,"all"]);if(r){const e=r.reduce(((e,t)=>{if(!0===t.safe&&("P2PKH"===t.type||"P2PK"===t.type)){e=new Pe.default(t.amount).add(new Pe.default(e))}return e}),0),t=new Pe.default(e).times(new Pe.default(10).pow(18));return(0,C.addHexPrefix)(t.toString(16))}return"0x00"}catch(e){console.error(e)}},Oe.prototype.updateQtumAccounts=async function(e){e.length>0&&await this.setQtumBalances(e[0]);for(let t=0;t<e.length;t++)await this.setQtumAddressFromHexAddress(e[t])},Oe.prototype.setQtumBalances=async function(e){const{ticker:t}=this.networkController.getProviderConfig();if("QTUM"===t){const t=await this.monkeyPatchQTUMGetBalance(e);await this.preferencesController.setQtumBalances(e,{spendableBalance:t})}},Oe.prototype.getQtumAddressFromHexAddress=async function(e){const{ticker:t}=this.networkController.getProviderConfig();if(!e.startsWith("0x"))return e;try{if("QTUM"===t){let t;switch(await this.networkController.getCurrentChainId()){case"0x22B8":case"0x22b8":case"0x51":t=58;break;default:t=120}const r=n.from(e.slice(2),"hex");return Ee.default.address.toBase58Check(r,t)}return"0x00"}catch(e){console.error(e)}},Oe.prototype.setQtumAddressFromHexAddress=async function(e){const{ticker:t}=this.networkController.getProviderConfig();if("QTUM"===t){const t=await this.getQtumAddressFromHexAddress(e);await this.preferencesController.setQtumAddress(e,t)}},Oe.prototype.getHexAddressFromQtumAddress=async function(e){const{ticker:t}=this.networkController.getProviderConfig();try{if("QTUM"===t){if(e===undefined)return"Invalid Address";return`0x${Ee.default.address.fromBase58Check(e).hash.toString("hex")}`}return"0x00"}catch(e){return console.error(e),"0x00"}},Oe.prototype.monkeyPatchHDKeyringAddNewKeyring=function(){this.keyringController.__proto__.hasOwnProperty("_addNewKeyring")||(this.keyringController.__proto__._addNewKeyring=this.keyringController.__proto__.addNewKeyring,this.keyringController.__proto__.addNewKeyring=function(e,t){return new Promise(((r,n)=>{if("HD Key Tree"===e){const s="m/44'/2301'/0'/0";return t={...t,hdPath:s},this._addNewKeyring(e,t).then(r).catch(n)}return this._addNewKeyring(e,t).then(r).catch(n)}))})},Oe.prototype.MonekyPatchQTUMExportAccount=async function(){if(this.keyringController.__proto__.hasOwnProperty("_exportAccount"))return;let e;const{ticker:t}=this.networkController.getProviderConfig();if("QTUM"===t){switch(await this.networkController.getCurrentChainId()){case"0x51":case"0x22B8":case"0x22b8":e=128;break;default:e=239}}else e=128;this.keyringController.__proto__._exportAccount=this.keyringController.__proto__.exportAccount,this.keyringController.__proto__.exportAccount=function(t){return new Promise(((r,n)=>{this._exportAccount(t).then((t=>{const s=new o.QtumWallet(`0x${t.toString("hex")}`,Ue),i=(0,C.toBuffer)(s.privateKey);let a="";try{a=Ae.default.encode(e,i,!0)}catch(e){n(e)}return r(a)})).catch((e=>{n(e)}))}))}},Oe.prototype.getHexAddressFromQtumAddress=async function(e){const{ticker:t}=this.networkController.getProviderConfig();try{if("QTUM"===t){if(e===undefined)return"Invalid Address";return`0x${Ee.default.address.fromBase58Check(e).hash.toString("hex")}`}return"0x00"}catch(e){return console.error(e),"0x00"}},Oe.prototype.monkeyPatchHDKeyringAddNewKeyring=function(){this.keyringController.__proto__.hasOwnProperty("_addNewKeyring")||(this.keyringController.__proto__._addNewKeyring=this.keyringController.__proto__.addNewKeyring,this.keyringController.__proto__.addNewKeyring=function(e,t){return new Promise(((r,n)=>{if("HD Key Tree"===e){const s="m/44'/2301'/0'/0";return t={...t,hdPath:s},this._addNewKeyring(e,t).then(r).catch(n)}return this._addNewKeyring(e,t).then(r).catch(n)}))})},Oe.prototype.monkeyPatchSimpleKeyringSignMessage=function(){this.keyringController.__proto__.hasOwnProperty("_signMessage")||(this.keyringController.__proto__._signMessage=this.keyringController.__proto__.signMessage,this.keyringController.__proto__.signMessage=function(e,t={}){const r=(0,Ie.normalize)(e.from);return this.getKeyringForAccount(r).then((async s=>{const i=(0,C.stripHexPrefix)(e.data),a=s.getPrivateKeyFor(r,t),c=new o.QtumWallet(a,Ue),l=await(t.btc?c.signHashBtc:c.signHash).bind(c)(n.from(i,"hex"));return Promise.resolve("0x"+l.toString("hex"))}))})},Oe.prototype.monkeyPatchSimpleKeyringSignPersonalMessage=function(){this.keyringController.__proto__.hasOwnProperty("_signPersonalMessage")||(this.keyringController.__proto__._signPersonalMessage=this.keyringController.__proto__.signPersonalMessage,this.keyringController.__proto__.signPersonalMessage=function(e,t={}){const r=(0,Ie.normalize)(e.from);return this.getKeyringForAccount(r).then((async s=>{const i=(0,C.stripHexPrefix)(e.data),a=s.getPrivateKeyFor(r,t),c=new o.QtumWallet(a,Ue),l=await(t.btc?c.signMessageBtc:c.signMessage).bind(c)(n.from(i,"hex"));return Promise.resolve("0x"+l.toString("hex"))}))})},Oe.prototype.monkeyPatchSimpleKeyringSignTypedMessage=function(){if(!this.keyringController.__proto__.hasOwnProperty("_signTypedData")){this.keyringController.__proto__._signTypedData=!0;for(let e=0;e<this.keyringController.keyrings.length;e++){const t=this.keyringController.keyrings[e];!t._signTypedData_v1&&t.__proto__.signTypedData_v1&&(t.__proto__._signTypedData_v1=t.__proto__.signTypedData_v1,t.__proto__.signTypedData_v1=async function(e,t,r={}){const n=this.getPrivateKeyFor(e,r),s=(0,C.toBuffer)((0,Ie.typedSignatureHash)(t)),i=new o.QtumWallet(`0x${n.toString("hex")}`,Ue);return"0x"+(await(r.btc?i.signHashBtc:i.signHash).bind(i)(s)).toString("hex")}),!t._signTypedData_v3&&t.__proto__.signTypedData_v3&&(t.__proto__._signTypedData_v3=t.__proto__.signTypedData_v3,t.__proto__.signTypedData_v3=async function(e,t,r={}){const n=this.getPrivateKeyFor(e,r),s=new o.QtumWallet(`0x${n.toString("hex")}`,Ue),i=Object.assign({},t.types);delete i.EIP712Domain;return"0x"+(await(r.btc?s._signTypedDataBtc:s._signTypedData).bind(s)(t.domain,i,t.message)).toString("hex")}),!t._signTypedData_v4&&t.__proto__.signTypedData_v4&&(t.__proto__._signTypedData_v4=t.__proto__.signTypedData_v4,t.__proto__.signTypedData_v4=async function(e,t,r={}){const n=this.getPrivateKeyFor(e,r),s=new o.QtumWallet(`0x${n.toString("hex")}`,Ue),i=Object.assign({},t.types);delete i.EIP712Domain;return"0x"+(await(r.btc?s._signTypedDataBtc:s._signTypedData).bind(s)(t.domain,i,t.message)).toString("hex")})}}}}).call(this)}).call(this,e("_process"),e("buffer").Buffer)}}},{package:"$root$"}],[9,{"../../../shared/modules/export-utils":7333,"../../../shared/modules/string-utils":7343},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("../../../shared/modules/export-utils"),s=e("../../../shared/modules/string-utils");r.default=class{constructor(e={}){const{preferencesController:t,addressBookController:r,trackMetaMetricsEvent:n}=e;this.preferencesController=t,this.addressBookController=r,this._trackMetaMetricsEvent=n}async restoreUserData(e){const t=this.preferencesController.store.getState(),{preferences:r,addressBook:n}=JSON.parse(e);r&&(r.identities=t.identities,r.lostIdentities=t.lostIdentities,r.selectedAddress=t.selectedAddress,this.preferencesController.store.updateState(r)),n&&this.addressBookController.update(n,!0),r&&n&&this._trackMetaMetricsEvent({event:"User Data Imported",category:"Backup"})}async backupUserData(){const e={preferences:{...this.preferencesController.store.getState()},addressBook:{...this.addressBookController.state}};delete e.preferences.identities,delete e.preferences.lostIdentities,delete e.preferences.selectedAddress;const t=JSON.stringify(e),r=new Date,o=e=>(0,s.prependZero)(e,2),i=`MetaMaskUserData.${r.getFullYear()}_${o(r.getMonth()+1)}_${o(r.getDay())}_${o(r.getHours())}_${o(r.getMinutes())}_${o(r.getDay())}.json`;return(0,n.exportAsFile)(i,t),this._trackMetaMetricsEvent({event:"User Data Exported",category:"Backup"}),t}}}}},{package:"$root$"}],[90,{lodash:5584},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:2,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=2;try{"etherscan"===t.data.config.provider.type&&(t.data.config.provider.type="rpc",t.data.config.provider.rpcTarget="https://rpc.metamask.io/")}catch(e){}return Promise.resolve(t)}};r.default=s}}},{package:"$root$"}],[91,{lodash:5584},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:3,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=3;try{"https://rawtestrpc.metamask.io/"===t.data.config.provider.rpcTarget&&(t.data.config.provider.rpcTarget="https://testrpc.metamask.io/")}catch(e){}return Promise.resolve(t)}};r.default=s}}},{package:"$root$"}],[92,{lodash:5584},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:4,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=4;try{if("rpc"!==t.data.config.provider.type)return Promise.resolve(t);switch(t.data.config.provider.rpcTarget){case"https://testrpc.metamask.io/":t.data.config.provider={type:"testnet"};break;case"https://rpc.metamask.io/":t.data.config.provider={type:"mainnet"}}}catch(e){}return Promise.resolve(t)}};r.default=s}}},{package:"$root$"}],[93,{lodash:5584},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:5,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=5;try{const e=function(e){const{config:t}=e,r={...e,KeyringController:{vault:e.vault,selectedAccount:t.selectedAccount,walletNicknames:e.walletNicknames}};return delete r.vault,delete r.walletNicknames,delete r.config.selectedAccount,r}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #5${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$"}],[937,{"@jridgewell/set-array":939,"@jridgewell/sourcemap-codec":940},function(){with(this)return function(){"use strict";return function(e,t,r){!function(n,s){"object"==typeof r&&void 0!==t?s(r,e("@jridgewell/set-array"),e("@jridgewell/sourcemap-codec")):"function"==typeof define&&define.amd?define(["exports","@jridgewell/set-array","@jridgewell/sourcemap-codec"],s):s((n="undefined"!=typeof globalThis?globalThis:n||self).genMapping={},n.setArray,n.sourcemapCodec)}(this,(function(e,t,r){e.addSegment=void 0,e.addMapping=void 0,e.setSourceContent=void 0,e.decodedMap=void 0,e.encodedMap=void 0,e.allMappings=void 0;function n(e,t,r){let n=e.length;for(let o=n-1;o>=0;o--,n--){const i=e[o],a=i[0];if(a>t)continue;if(a<t)break;const c=s(i,r);if(0===c)return n;if(c<0)break}return n}function s(e,t){let r=o(e.length,t.length);return 0!==r?r:1===e.length?0:(r=o(e[1],t[1]),0!==r?r:(r=o(e[2],t[2]),0!==r?r:(r=o(e[3],t[3]),0!==r?r:4===e.length?0:o(e[4],t[4]))))}function o(e,t){return e-t}function i(e,t,r){if(-1!==t){for(let r=e.length;r>t;r--)e[r]=e[r-1];e[t]=r}}e.addSegment=(e,r,s,o,a,c,l)=>{const{_mappings:d,_sources:h,_sourcesContent:u,_names:g}=e,p=function(e,t){for(let r=e.length;r<=t;r++)e[r]=[];return e[t]}(d,r);if(null==o){const e=[s];return i(p,n(p,s,e),e)}const f=t.put(h,o),m=l?[s,f,a,c,t.put(g,l)]:[s,f,a,c],y=n(p,s,m);f===u.length&&(u[f]=null),i(p,y,m)},e.addMapping=(t,r)=>{const{generated:n,source:s,original:o,name:i}=r;return e.addSegment(t,n.line-1,n.column,s,null==o?undefined:o.line-1,null==o?void 0:o.column,i)},e.setSourceContent=(e,r,n)=>{const{_sources:s,_sourcesContent:o}=e;o[t.put(s,r)]=n},e.decodedMap=e=>{const{file:t,sourceRoot:r,_mappings:n,_sources:s,_sourcesContent:o,_names:i}=e;return{version:3,file:t,names:i.array,sourceRoot:r||undefined,sources:s.array,sourcesContent:o,mappings:n}},e.encodedMap=t=>{const n=e.decodedMap(t);return Object.assign(Object.assign({},n),{mappings:r.encode(n.mappings)})},e.allMappings=e=>{const t=[],{_mappings:r,_sources:n,_names:s}=e;for(let e=0;e<r.length;e++){const o=r[e];for(let r=0;r<o.length;r++){const i=o[r],a={line:e+1,column:i[0]};let c=undefined,l=undefined,d=undefined;1!==i.length&&(c=n.array[i[1]],l={line:i[2]+1,column:i[3]},5===i.length&&(d=s.array[i[4]])),t.push({generated:a,source:c,original:l,name:d})}}return t},e.GenMapping=class{constructor({file:e,sourceRoot:r}={}){this._names=new t.SetArray,this._sources=new t.SetArray,this._sourcesContent=[],this._mappings=[],this.file=e,this.sourceRoot=r}},Object.defineProperty(e,"__esModule",{value:!0})}))}}},{package:"@babel/core>@ampproject/remapping>@jridgewell/gen-mapping"}],[938,{},function(){with(this)return function(){"use strict";return function(e,t,r){!function(e,n){"object"==typeof r&&void 0!==t?t.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).resolveURI=n()}(this,(function(){const e=/^[\w+.-]+:\/\//,t=/^([\w+.-]+:)\/\/([^@/#?]*@)?([^:/#?]*)(:\d+)?(\/[^#?]*)?(\?[^#]*)?(#.*)?/,r=/^file:(?:\/\/((?![a-z]:)[^/#?]*)?)?(\/?[^#?]*)(\?[^#]*)?(#.*)?/i;var n;function s(e){return e.startsWith("/")}function o(e){return/^[.?#]/.test(e)}function i(e){const r=t.exec(e);return a(r[1],r[2]||"",r[3],r[4]||"",r[5]||"/",r[6]||"",r[7]||"")}function a(e,t,r,s,o,i,a){return{scheme:e,user:t,host:r,port:s,path:o,query:i,hash:a,type:n.Absolute}}function c(t){if(function(e){return e.startsWith("//")}(t)){const e=i("http:"+t);return e.scheme="",e.type=n.SchemeRelative,e}if(s(t)){const e=i("http://foo.com"+t);return e.scheme="",e.host="",e.type=n.AbsolutePath,e}if(function(e){return e.startsWith("file:")}(t))return function(e){const t=r.exec(e),n=t[2];return a("file:","",t[1]||"","",s(n)?n:"/"+n,t[3]||"",t[4]||"")}(t);if(function(t){return e.test(t)}(t))return i(t);const o=i("http://foo.com/"+t);return o.scheme="",o.host="",o.type=t?t.startsWith("?")?n.Query:t.startsWith("#")?n.Hash:n.RelativePath:n.Empty,o}function l(e,t){const r=t<=n.RelativePath,s=e.path.split("/");let o=1,i=0,a=!1;for(let e=1;e<s.length;e++){const t=s[e];t?(a=!1,"."!==t&&(".."!==t?(s[o++]=t,i++):i?(a=!0,i--,o--):r&&(s[o++]=t))):a=!0}let c="";for(let e=1;e<o;e++)c+="/"+s[e];(!c||a&&!c.endsWith("/.."))&&(c+="/"),e.path=c}return function(e){e[e.Empty=1]="Empty",e[e.Hash=2]="Hash",e[e.Query=3]="Query",e[e.RelativePath=4]="RelativePath",e[e.AbsolutePath=5]="AbsolutePath",e[e.SchemeRelative=6]="SchemeRelative",e[e.Absolute=7]="Absolute"}(n||(n={})),function(e,t){if(!e&&!t)return"";const r=c(e);let s=r.type;if(t&&s!==n.Absolute){const e=c(t),o=e.type;switch(s){case n.Empty:r.hash=e.hash;case n.Hash:r.query=e.query;case n.Query:case n.RelativePath:!function(e,t){l(t,t.type),"/"===e.path?e.path=t.path:e.path=function(e){if(e.endsWith("/.."))return e;const t=e.lastIndexOf("/");return e.slice(0,t+1)}(t.path)+e.path}(r,e);case n.AbsolutePath:r.user=e.user,r.host=e.host,r.port=e.port;case n.SchemeRelative:r.scheme=e.scheme}o>s&&(s=o)}l(r,s);const i=r.query+r.hash;switch(s){case n.Hash:case n.Query:return i;case n.RelativePath:{const n=r.path.slice(1);return n?o(t||e)&&!o(n)?"./"+n+i:n+i:i||"."}case n.AbsolutePath:return r.path+i;default:return r.scheme+"//"+r.user+r.host+r.port+r.path+i}}}))}}},{package:"@babel/core>@ampproject/remapping>@jridgewell/trace-mapping>@jridgewell/resolve-uri"}],[939,{},function(){with(this)return function(){"use strict";return function(e,t,r){!function(e,n){"object"==typeof r&&void 0!==t?n(r):"function"==typeof define&&define.amd?define(["exports"],n):n((e="undefined"!=typeof globalThis?globalThis:e||self).setArray={})}(this,(function(e){e.get=void 0,e.put=void 0,e.pop=void 0;e.get=(e,t)=>e._indexes[t],e.put=(t,r)=>{const n=e.get(t,r);if(n!==undefined)return n;const{array:s,_indexes:o}=t;return o[r]=s.push(r)-1},e.pop=e=>{const{array:t,_indexes:r}=e;0!==t.length&&(r[t.pop()]=undefined)},e.SetArray=class{constructor(){this._indexes={__proto__:null},this.array=[]}},Object.defineProperty(e,"__esModule",{value:!0})}))}}},{package:"@babel/core>@babel/generator>@jridgewell/gen-mapping>@jridgewell/set-array"}],[94,{lodash:5584},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:6,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=6;try{const e=function(e){const t=e.KeyringController,r={...e,PreferencesController:{selectedAddress:t.selectedAccount}};return delete r.KeyringController.selectedAccount,r}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #6${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$"}],[940,{buffer:2434},function(){with(this)return function(){"use strict";return function(e,t,r){(function(e){(function(){!function(e,n){"object"==typeof r&&void 0!==t?n(r):"function"==typeof define&&define.amd?define(["exports"],n):n((e="undefined"!=typeof globalThis?globalThis:e||self).sourcemapCodec={})}(this,(function(t){const r=",".charCodeAt(0),n=";".charCodeAt(0),s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=new Uint8Array(64),i=new Uint8Array(128);for(let e=0;e<s.length;e++){const t=s.charCodeAt(e);o[e]=t,i[t]=e}const a="undefined"!=typeof TextDecoder?new TextDecoder:void 0!==e?{decode:t=>e.from(t.buffer,t.byteOffset,t.byteLength).toString()}:{decode(e){let t="";for(let r=0;r<e.length;r++)t+=String.fromCharCode(e[r]);return t}};function c(e,t){const r=e.indexOf(";",t);return-1===r?e.length:r}function l(e,t,r,n){let s=0,o=0,a=0;do{const r=e.charCodeAt(t++);a=i[r],s|=(31&a)<<o,o+=5}while(32&a);const c=1&s;return s>>>=1,c&&(s=-2147483648|-s),r[n]+=s,t}function d(e,t,n){return!(t>=n)&&e.charCodeAt(t)!==r}function h(e){e.sort(u)}function u(e,t){return e[0]-t[0]}function g(e,t,r,n,s){const i=n[s];let a=i-r[s];r[s]=i,a=a<0?-a<<1|1:a<<1;do{let r=31&a;a>>>=5,a>0&&(r|=32),e[t++]=o[r]}while(a>0);return t}t.decode=function(e){const t=new Int32Array(5),r=[];let n=0;do{const s=c(e,n),o=[];let i=!0,a=0;t[0]=0;for(let r=n;r<s;r++){let n;r=l(e,r,t,0);const c=t[0];c<a&&(i=!1),a=c,d(e,r,s)?(r=l(e,r,t,1),r=l(e,r,t,2),r=l(e,r,t,3),d(e,r,s)?(r=l(e,r,t,4),n=[c,t[1],t[2],t[3],t[4]]):n=[c,t[1],t[2],t[3]]):n=[c],o.push(n)}i||h(o),r.push(o),n=s+1}while(n<=e.length);return r},t.encode=function(e){const t=new Int32Array(5),s=16384,o=16348,i=new Uint8Array(s),c=i.subarray(0,o);let l=0,d="";for(let h=0;h<e.length;h++){const u=e[h];if(h>0&&(l===s&&(d+=a.decode(i),l=0),i[l++]=n),0!==u.length){t[0]=0;for(let e=0;e<u.length;e++){const n=u[e];l>o&&(d+=a.decode(c),i.copyWithin(0,o,l),l-=o),e>0&&(i[l++]=r),l=g(i,l,t,n,0),1!==n.length&&(l=g(i,l,t,n,1),l=g(i,l,t,n,2),l=g(i,l,t,n,3),4!==n.length&&(l=g(i,l,t,n,4)))}}}return d+a.decode(i.subarray(0,l))},Object.defineProperty(t,"__esModule",{value:!0})}))}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@babel/core>@babel/generator>@jridgewell/gen-mapping>@jridgewell/sourcemap-codec"}],[941,{"@jridgewell/resolve-uri":938,"@jridgewell/sourcemap-codec":940},function(){with(this)return function(){"use strict";return function(e,t,r){!function(n,s){"object"==typeof r&&void 0!==t?s(r,e("@jridgewell/sourcemap-codec"),e("@jridgewell/resolve-uri")):"function"==typeof define&&define.amd?define(["exports","@jridgewell/sourcemap-codec","@jridgewell/resolve-uri"],s):s((n="undefined"!=typeof globalThis?globalThis:n||self).traceMapping={},n.sourcemapCodec,n.resolveURI)}(this,(function(e,t,r){function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=n(r);function o(e,t){return t&&!t.endsWith("/")&&(t+="/"),s.default(e,t)}function i(e,t){for(let r=t;r<e.length;r++)if(!a(e[r]))return r;return e.length}function a(e){for(let t=1;t<e.length;t++)if(e[t][0]<e[t-1][0])return!1;return!0}function c(e,t){return t||(e=e.slice()),e.sort(l)}function l(e,t){return e[0]-t[0]}let d=!1;function h(e,t,r){for(let n=r+1;n<e.length&&e[n][0]===t;r=n++);return r}function u(e,t,r){for(let n=r-1;n>=0&&e[n][0]===t;r=n--);return r}function g(){return{lastKey:-1,lastNeedle:-1,lastIndex:-1}}function p(e,t,r,n){const{lastKey:s,lastNeedle:o,lastIndex:i}=r;let a=0,c=e.length-1;if(n===s){if(t===o)return d=-1!==i&&e[i][0]===t,i;t>=o?a=-1===i?0:i:c=i}return r.lastKey=n,r.lastNeedle=t,r.lastIndex=function(e,t,r,n){for(;r<=n;){const s=r+(n-r>>1),o=e[s][0]-t;if(0===o)return d=!0,s;o<0?r=s+1:n=s-1}return d=!1,r-1}(e,t,a,c)}function f(e,t,r){for(let r=e.length;r>t;r--)e[r]=e[r-1];e[t]=r}function m(){return{__proto__:null}}function y(e,t,r,n,s,o,i,a,c,l){const{sections:d}=e;for(let e=0;e<d.length;e++){const{map:h,offset:u}=d[e];let g=c,p=l;if(e+1<d.length){const t=d[e+1].offset;g=Math.min(c,i+t.line),g===c?p=Math.min(l,a+t.column):g<c&&(p=a+t.column)}C(h,t,r,n,s,o,i+u.line,a+u.column,g,p)}}function C(t,r,n,s,o,i,a,c,l,d){if("sections"in t)return y(...arguments);const h=new T(t,r),u=s.length,g=i.length,p=e.decodedMappings(h),{resolvedSources:f,sourcesContent:m}=h;if(k(s,f),k(i,h.names),m)k(o,m);else for(let e=0;e<f.length;e++)o.push(null);for(let e=0;e<p.length;e++){const t=a+e;if(t>l)return;const r=b(n,t),s=0===e?c:0,o=p[e];for(let e=0;e<o.length;e++){const n=o[e],i=s+n[0];if(t===l&&i>=d)return;if(1===n.length){r.push([i]);continue}const a=u+n[1],c=n[2],h=n[3];r.push(4===n.length?[i,a,c,h]:[i,a,c,h,g+n[4]])}}}function k(e,t){for(let r=0;r<t.length;r++)e.push(t[r])}function b(e,t){for(let r=e.length;r<=t;r++)e[r]=[];return e[t]}const w="`line` must be greater than 0 (lines start at line 1)",v="`column` must be greater than or equal to 0 (columns start at column 0)";e.encodedMappings=void 0,e.decodedMappings=void 0,e.traceSegment=void 0,e.originalPositionFor=void 0,e.generatedPositionFor=void 0,e.eachMapping=void 0,e.sourceContentFor=void 0,e.presortedDecodedMap=void 0,e.decodedMap=void 0,e.encodedMap=void 0;class T{constructor(e,t){const r="string"==typeof e;if(!r&&e._decodedMemo)return e;const n=r?JSON.parse(e):e,{version:s,file:a,names:l,sourceRoot:d,sources:h,sourcesContent:u}=n;this.version=s,this.file=a,this.names=l,this.sourceRoot=d,this.sources=h,this.sourcesContent=u;const g=o(d||"",function(e){if(!e)return"";const t=e.lastIndexOf("/");return e.slice(0,t+1)}(t));this.resolvedSources=h.map((e=>o(e||"",g)));const{mappings:p}=n;"string"==typeof p?(this._encoded=p,this._decoded=undefined):(this._encoded=undefined,this._decoded=function(e,t){const r=i(e,0);if(r===e.length)return e;t||(e=e.slice());for(let n=r;n<e.length;n=i(e,n+1))e[n]=c(e[n],t);return e}(p,r)),this._decodedMemo={lastKey:-1,lastNeedle:-1,lastIndex:-1},this._bySources=undefined,this._bySourceMemos=undefined}}function S(e,t){return{version:e.version,file:e.file,names:e.names,sourceRoot:e.sourceRoot,sources:e.sources,sourcesContent:e.sourcesContent,mappings:t}}function _(e,t,r,n){return{source:e,line:t,column:r,name:n}}function M(e,t){return{line:e,column:t}}function P(e,t,r,n,s){let o=p(e,n,t,r);return d?o=(-1===s?h:u)(e,n,o):-1===s&&o++,-1===o||o===e.length?null:e[o]}e.encodedMappings=e=>{var r;return null!==(r=e._encoded)&&void 0!==r?r:e._encoded=t.encode(e._decoded)},e.decodedMappings=e=>e._decoded||(e._decoded=t.decode(e._encoded)),e.traceSegment=(t,r,n)=>{const s=e.decodedMappings(t);return r>=s.length?null:P(s[r],t._decodedMemo,r,n,1)},e.originalPositionFor=(t,{line:r,column:n,bias:s})=>{if(--r<0)throw new Error(w);if(n<0)throw new Error(v);const o=e.decodedMappings(t);if(r>=o.length)return _(null,null,null,null);const i=P(o[r],t._decodedMemo,r,n,s||1);if(null==i)return _(null,null,null,null);if(1==i.length)return _(null,null,null,null);const{names:a,resolvedSources:c}=t;return _(c[i[1]],i[2]+1,i[3],5===i.length?a[i[4]]:null)},e.generatedPositionFor=(t,{source:r,line:n,column:s,bias:o})=>{if(--n<0)throw new Error(w);if(s<0)throw new Error(v);const{sources:i,resolvedSources:a}=t;let c=i.indexOf(r);if(-1===c&&(c=a.indexOf(r)),-1===c)return M(null,null);const l=t._bySources||(t._bySources=function(e,t){const r=t.map(m);for(let n=0;n<e.length;n++){const s=e[n];for(let e=0;e<s.length;e++){const o=s[e];if(1===o.length)continue;const i=o[1],a=o[2],c=o[3],l=r[i],d=l[a]||(l[a]=[]),u=t[i],g=h(d,c,p(d,c,u,a));f(d,u.lastIndex=g+1,[c,n,o[0]])}}return r}(e.decodedMappings(t),t._bySourceMemos=i.map(g))),d=t._bySourceMemos,u=l[c][n];if(null==u)return M(null,null);const y=P(u,d[c],n,s,o||1);return null==y?M(null,null):M(y[1]+1,y[2])},e.eachMapping=(t,r)=>{const n=e.decodedMappings(t),{names:s,resolvedSources:o}=t;for(let e=0;e<n.length;e++){const t=n[e];for(let n=0;n<t.length;n++){const i=t[n],a=e+1,c=i[0];let l=null,d=null,h=null,u=null;1!==i.length&&(l=o[i[1]],d=i[2]+1,h=i[3]),5===i.length&&(u=s[i[4]]),r({generatedLine:a,generatedColumn:c,source:l,originalLine:d,originalColumn:h,name:u})}}},e.sourceContentFor=(e,t)=>{const{sources:r,resolvedSources:n,sourcesContent:s}=e;if(null==s)return null;let o=r.indexOf(t);return-1===o&&(o=n.indexOf(t)),-1===o?null:s[o]},e.presortedDecodedMap=(e,t)=>{const r=new T(S(e,[]),t);return r._decoded=e.mappings,r},e.decodedMap=t=>S(t,e.decodedMappings(t)),e.encodedMap=t=>S(t,e.encodedMappings(t)),e.AnyMap=function(t,r){const n="string"==typeof t?JSON.parse(t):t;if(!("sections"in n))return new T(n,r);const s=[],o=[],i=[],a=[];y(n,r,s,o,i,a,0,0,Infinity,Infinity);const c={version:3,file:n.file,names:a,sources:o,sourcesContent:i,mappings:s};return e.presortedDecodedMap(c)},e.GREATEST_LOWER_BOUND=1,e.LEAST_UPPER_BOUND=-1,e.TraceMap=T,Object.defineProperty(e,"__esModule",{value:!0})}))}}},{package:"@babel/core>@ampproject/remapping>@jridgewell/trace-mapping"}],[942,{"@ethereumjs/tx":945,"@keystonehq/bc-ur-registry-eth":950,buffer:2434,"ethereumjs-util":2891,hdkey:4812,uuid:7148},function(){with(this)return function(){"use strict";return function(e,t,r){(function(t){(function(){Object.defineProperty(r,"__esModule",{value:!0});var n,s=(n=e("hdkey"))&&"object"==typeof n&&"default"in n?n.default:n,o=e("ethereumjs-util"),i=e("@ethereumjs/tx"),a=e("@keystonehq/bc-ur-registry-eth"),c=e("uuid");const l="QR Hardware Wallet Device",d="m",h="0/*";var u,g;!function(e){e.hd="hd",e.pubkey="pubkey"}(u||(u={})),function(e){e.standard="account.standard",e.ledger_live="account.ledger_live",e.ledger_legacy="account.ledger_legacy"}(g||(g={}));class p{constructor(e){this.version=1,this.getInteraction=()=>{throw new Error("KeystoneError#invalid_extends: method getInteraction not implemented, please extend BaseKeyring by overwriting this method.")},this.type=l,this.requestSignature=async(e,t,r,n)=>{const s=await this.getInteraction().requestSignature(t,r,n),o=s.getRequestId(),i=s.getSignature();if(o){if(c.stringify(o)!==e)throw new Error("KeystoneError#invalid_data: read signature error: mismatched requestId")}return{r:i.slice(0,32),s:i.slice(32,64),v:i.slice(64)}},this.__readCryptoHDKey=e=>{var t,r;const n=`m/${e.getOrigin().getPath()}`,s=null==(t=e.getOrigin().getSourceFingerprint())?void 0:t.toString("hex"),o=(null==(r=e.getChildren())?void 0:r.getPath())||h,i=e.getName();if(e.getNote()===g.standard?this.keyringAccount=g.standard:e.getNote()===g.ledger_legacy&&(this.keyringAccount=g.ledger_legacy),!s)throw new Error("KeystoneError#invalid_data: invalid crypto-hdkey, cannot get source fingerprint");const a=e.getBip32Key();this.xfp=s,this.xpub=a,this.hdPath=n,this.childrenPath=o,i!==undefined&&""!==i&&(this.name=i),this.initialized=!0},this.__readCryptoAccount=e=>{var t,r;const n=null==(t=e.getMasterFingerprint())?void 0:t.toString("hex");if(!n)throw new Error("KeystoneError#invalid_data: invalid crypto-account, cannot get master fingerprint");this.xfp=n,this.initialized=!0;let s=!1;const i=e.getOutputDescriptors();if(!i||0===i.length)throw new Error("KeystoneError#invalid_data: invalid crypto-account, no crypto output found");if(i.length%5!=0)throw new Error("KeystoneError#invalid_data: only support 5x pubkey accounts for now");return null==(r=e.getOutputDescriptors())||r.forEach((e=>{try{const t=e.getHDKey();if(t){const e=t.getKey(),r=`M/${t.getOrigin().getPath()}`,n="0x"+o.publicToAddress(e,!0).toString("hex");this.name=t.getName(),t.getNote()===g.ledger_live&&(this.keyringAccount=g.ledger_live),this.paths[o.toChecksumAddress(n)]===undefined&&(s=!0),this.paths[o.toChecksumAddress(n)]=r}}catch(e){throw new Error(`KeystoneError#invalid_data: ${e}`)}})),s},this.getName=()=>this.name,this.setAccountToUnlock=e=>{this.unlockedAccount=parseInt(e,10)},this.__getNormalPage=e=>(this.page+=e,this.page<=0&&(this.page=1),new Promise((async(e,t)=>{try{const t=(this.page-1)*this.perPage,r=t+this.perPage,n=[];for(let e=t;e<r;e++){const t=await this.__addressFromIndex(d,e);n.push({address:t,balance:null,index:e}),this.indexes[o.toChecksumAddress(t)]=e}e(n)}catch(e){t(e)}}))),this.__getLedgerLivePage=e=>{const t=this.page+e;return new Promise((async(r,n)=>{try{const n=(t-1)*this.perPage,s=n+this.perPage,o=[];for(let e=n;e<s;e++){const t=await this.__addressFromIndex(d,e);o.push({address:t,balance:null,index:e})}this.page+=e,r(o)}catch(e){n(e)}}))},this.__addressFromIndex=async(e,t)=>{if(this.keyringMode===u.hd){this.checkKeyring(),this.hdk||(this.hdk=s.fromExtendedKey(this.xpub));const r=this.childrenPath.replace("*",String(t)).replaceAll("*","0"),n=this.hdk.derive(`${e}/${r}`),i="0x"+o.publicToAddress(n.publicKey,!0).toString("hex");return o.toChecksumAddress(i)}{const e=Object.keys(this.paths)[t];if(e)return o.toChecksumAddress(e);throw new Error("KeystoneError#pubkey_account.no_expected_account")}},this.page=0,this.perPage=5,this.accounts=[],this.currentAccount=0,this.unlockedAccount=0,this.name="QR Hardware",this.keyringMode=u.hd,this.keyringAccount=g.standard,this.initialized=!1,this.xfp="",this.xpub="",this.hdPath="",this.childrenPath=h,this.indexes={},this.paths={},this.deserialize(e)}async readKeyring(){const e=await this.getInteraction().readCryptoHDKeyOrCryptoAccount();e.getRegistryType()===a.extend.RegistryTypes.CRYPTO_HDKEY?(this.keyringMode=u.hd,this.__readCryptoHDKey(e)):(this.keyringMode=u.pubkey,this.__readCryptoAccount(e))}checkKeyring(){if(!this.xfp||!this.xpub||!this.hdPath)throw new Error("KeystoneError#invalid_keyring: keyring not fulfilled, please call function `readKeyring` firstly")}serialize(){return Promise.resolve({initialized:this.initialized,accounts:this.accounts,currentAccount:this.currentAccount,page:this.page,perPage:this.perPage,keyringAccount:this.keyringAccount,keyringMode:this.keyringMode,name:this.name,version:this.version,xfp:this.xfp,xpub:this.xpub,hdPath:this.hdPath,childrenPath:this.childrenPath,indexes:this.indexes,paths:this.paths})}deserialize(e){e&&(this.accounts=e.accounts,this.currentAccount=e.currentAccount,this.page=e.page,this.perPage=e.perPage,this.name=e.name,this.initialized=e.initialized,this.keyringMode=e.keyringMode||u.hd,this.keyringAccount=e.keyringAccount||g.standard,this.xfp=e.xfp,this.xpub=e.xpub,this.hdPath=e.hdPath,this.indexes=e.indexes,this.paths=e.paths,this.childrenPath=e.childrenPath||h)}setCurrentAccount(e){this.currentAccount=e}getCurrentAccount(){return this.currentAccount}getCurrentAddress(){return this.accounts[this.currentAccount]}addAccounts(e=1){return new Promise((async(t,r)=>{try{const r=this.unlockedAccount,n=r+e,s=[];for(let e=r;e<n;e++){const t=await this.__addressFromIndex(d,e);s.push(t),this.page=0,this.unlockedAccount++}this.accounts=this.accounts.concat(s),t(this.accounts)}catch(e){r(e)}}))}getFirstPage(){return this.page=0,this.__getPage(1)}getNextPage(){return this.__getPage(1)}getPreviousPage(){return this.__getPage(-1)}async __getPage(e){return this.initialized||await this.readKeyring(),this.keyringMode===u.hd?this.__getNormalPage(e):this.__getLedgerLivePage(e)}getAccounts(){return Promise.resolve(this.accounts)}removeAccount(e){if(!this.accounts.map((e=>e.toLowerCase())).includes(e.toLowerCase()))throw new Error(`Address ${e} not found in this keyring`);this.accounts=this.accounts.filter((t=>t.toLowerCase()!==e.toLowerCase()))}static serializeTx(e){return e.v=new o.BN(e.common.chainId()),e.r=new o.BN(0),e.s=new o.BN(0),e.serialize()}async signTransaction(e,t){const r=await this._pathFromAddress(e),n=t.common.chainId(),s=c.v4(),o=a.EthSignRequest.constructETHRequest(p.serializeTx(t),a.DataType.transaction,r,this.xfp,s,n),{r:l,s:d,v:h}=await this.requestSignature(s,o,"Scan with your Keystone",'After your Keystone has signed the transaction, click on "Scan Keystone" to receive the signature'),u=t.toJSON();return i.Transaction.fromTxData({to:u.to,gasLimit:u.gasLimit,gasPrice:u.gasPrice,data:u.data,nonce:u.nonce,value:u.value,r:l,s:d,v:h},{common:t.common})}signMessage(e,t){return this.signPersonalMessage(e,t)}async signPersonalMessage(e,r){const n=o.stripHexPrefix(r),s=await this._pathFromAddress(e),i=c.v4(),l=a.EthSignRequest.constructETHRequest(t.from(n,"hex"),a.DataType.personalMessage,s,this.xfp,i,undefined,e),{r:d,s:h,v:u}=await this.requestSignature(i,l,"Scan with your Keystone",'After your Keystone has signed this message, click on "Scan Keystone" to receive the signature');return"0x"+t.concat([d,h,u]).toString("hex")}async signTypedData(e,r){const n=await this._pathFromAddress(e),s=c.v4(),o=a.EthSignRequest.constructETHRequest(t.from(JSON.stringify(r),"utf-8"),a.DataType.typedData,n,this.xfp,s,undefined,e),{r:i,s:l,v:d}=await this.requestSignature(s,o,"Scan with your Keystone",'After your Keystone has signed this data, click on "Scan Keystone" to receive the signature');return"0x"+t.concat([i,l,d]).toString("hex")}async _pathFromAddress(e){if(this.keyringMode===u.hd){const t=o.toChecksumAddress(e);let r=this.indexes[t];if(void 0===r)for(let e=0;e<1e3;e++)if(t===await this.__addressFromIndex(d,e)){r=e;break}if(void 0===r)throw new Error("Unknown address");return`${this.hdPath}/${this.childrenPath.replace("*",r.toString()).replaceAll("*","0")}`}{const t=o.toChecksumAddress(e),r=this.paths[t];if(void 0===r)throw new Error("Unknown address");return r}}}p.type=l,r.BaseKeyring=p}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@keystonehq/metamask-airgapped-keyring>@keystonehq/base-eth-keyring"}],[943,{"@ethereumjs/tx":945,"@keystonehq/bc-ur-registry-eth":950,buffer:2434,"ethereumjs-util":2891,hdkey:4812,uuid:7148},function(){with(this)return function(){"use strict";return function(e,t,r){(function(t){(function(){Object.defineProperty(r,"__esModule",{value:!0});var n,s,o,i=(n=e("hdkey"))&&"object"==typeof n&&"default"in n?n.default:n,a=e("ethereumjs-util"),c=e("@ethereumjs/tx"),l=e("@keystonehq/bc-ur-registry-eth"),d=e("uuid");!function(e){e.hd="hd",e.pubkey="pubkey"}(s||(s={})),function(e){e.standard="account.standard",e.ledger_live="account.ledger_live",e.ledger_legacy="account.ledger_legacy"}(o||(o={}));class h{constructor(e){this.version=1,this.getInteraction=()=>{throw new Error("KeystoneError#invalid_extends: method getInteraction not implemented, please extend BaseKeyring by overwriting this method.")},this.type="QR Hardware Wallet Device",this.requestSignature=async(e,t,r,n)=>{const s=await this.getInteraction().requestSignature(t,r,n),o=s.getRequestId(),i=s.getSignature();if(o&&d.stringify(o)!==e)throw new Error("KeystoneError#invalid_data: read signature error: mismatched requestId");return{r:i.slice(0,32),s:i.slice(32,64),v:i.slice(64)}},this.__readCryptoHDKey=e=>{var t,r;const n="m/"+e.getOrigin().getPath(),s=null==(t=e.getOrigin().getSourceFingerprint())?void 0:t.toString("hex"),i=(null==(r=e.getChildren())?void 0:r.getPath())||"0/*",a=e.getName();if(e.getNote()===o.standard?this.keyringAccount=o.standard:e.getNote()===o.ledger_legacy&&(this.keyringAccount=o.ledger_legacy),!s)throw new Error("KeystoneError#invalid_data: invalid crypto-hdkey, cannot get source fingerprint");const c=e.getBip32Key();this.xfp=s,this.xpub=c,this.hdPath=n,this.childrenPath=i,void 0!==a&&""!==a&&(this.name=a),this.initialized=!0},this.__readCryptoAccount=e=>{var t,r;const n=null==(t=e.getMasterFingerprint())?void 0:t.toString("hex");if(!n)throw new Error("KeystoneError#invalid_data: invalid crypto-account, cannot get master fingerprint");this.xfp=n,this.initialized=!0;let s=!1;const i=e.getOutputDescriptors();if(!i||0===i.length)throw new Error("KeystoneError#invalid_data: invalid crypto-account, no crypto output found");if(i.length%5!=0)throw new Error("KeystoneError#invalid_data: only support 5x pubkey accounts for now");return null==(r=e.getOutputDescriptors())||r.forEach((e=>{try{const t=e.getHDKey();if(t){const e=t.getKey(),r="M/"+t.getOrigin().getPath(),n="0x"+a.publicToAddress(e,!0).toString("hex");this.name=t.getName(),t.getNote()===o.ledger_live&&(this.keyringAccount=o.ledger_live),void 0===this.paths[a.toChecksumAddress(n)]&&(s=!0),this.paths[a.toChecksumAddress(n)]=r}}catch(e){throw new Error("KeystoneError#invalid_data: "+e)}})),s},this.getName=()=>this.name,this.setAccountToUnlock=e=>{this.unlockedAccount=parseInt(e,10)},this.__getNormalPage=e=>(this.page+=e,this.page<=0&&(this.page=1),new Promise((async(e,t)=>{try{const t=(this.page-1)*this.perPage,r=t+this.perPage,n=[];for(let e=t;e<r;e++){const t=await this.__addressFromIndex("m",e);n.push({address:t,balance:null,index:e}),this.indexes[a.toChecksumAddress(t)]=e}e(n)}catch(e){t(e)}}))),this.__getLedgerLivePage=e=>{const t=this.page+e;return new Promise((async(r,n)=>{try{const n=(t-1)*this.perPage,s=n+this.perPage,o=[];for(let e=n;e<s;e++){const t=await this.__addressFromIndex("m",e);o.push({address:t,balance:null,index:e})}this.page+=e,r(o)}catch(e){n(e)}}))},this.__addressFromIndex=async(e,t)=>{if(this.keyringMode===s.hd){this.checkKeyring(),this.hdk||(this.hdk=i.fromExtendedKey(this.xpub));const r=this.childrenPath.replace("*",String(t)).replaceAll("*","0"),n=this.hdk.derive(`${e}/${r}`),s="0x"+a.publicToAddress(n.publicKey,!0).toString("hex");return a.toChecksumAddress(s)}{const e=Object.keys(this.paths)[t];if(e)return a.toChecksumAddress(e);throw new Error("KeystoneError#pubkey_account.no_expected_account")}},this.page=0,this.perPage=5,this.accounts=[],this.currentAccount=0,this.unlockedAccount=0,this.name="QR Hardware",this.keyringMode=s.hd,this.keyringAccount=o.standard,this.initialized=!1,this.xfp="",this.xpub="",this.hdPath="",this.childrenPath="0/*",this.indexes={},this.paths={},this.deserialize(e)}async readKeyring(){const e=await this.getInteraction().readCryptoHDKeyOrCryptoAccount();e.getRegistryType()===l.extend.RegistryTypes.CRYPTO_HDKEY?(this.keyringMode=s.hd,this.__readCryptoHDKey(e)):(this.keyringMode=s.pubkey,this.__readCryptoAccount(e))}checkKeyring(){if(!this.xfp||!this.xpub||!this.hdPath)throw new Error("KeystoneError#invalid_keyring: keyring not fulfilled, please call function `readKeyring` firstly")}serialize(){return Promise.resolve({initialized:this.initialized,accounts:this.accounts,currentAccount:this.currentAccount,page:this.page,perPage:this.perPage,keyringAccount:this.keyringAccount,keyringMode:this.keyringMode,name:this.name,version:this.version,xfp:this.xfp,xpub:this.xpub,hdPath:this.hdPath,childrenPath:this.childrenPath,indexes:this.indexes,paths:this.paths})}deserialize(e){e&&(this.accounts=e.accounts,this.currentAccount=e.currentAccount,this.page=e.page,this.perPage=e.perPage,this.name=e.name,this.initialized=e.initialized,this.keyringMode=e.keyringMode||s.hd,this.keyringAccount=e.keyringAccount||o.standard,this.xfp=e.xfp,this.xpub=e.xpub,this.hdPath=e.hdPath,this.indexes=e.indexes,this.paths=e.paths,this.childrenPath=e.childrenPath||"0/*")}setCurrentAccount(e){this.currentAccount=e}getCurrentAccount(){return this.currentAccount}getCurrentAddress(){return this.accounts[this.currentAccount]}addAccounts(e=1){return new Promise((async(t,r)=>{try{const r=this.unlockedAccount,n=r+e,s=[];for(let e=r;e<n;e++){const t=await this.__addressFromIndex("m",e);s.push(t),this.page=0,this.unlockedAccount++}this.accounts=this.accounts.concat(s),t(this.accounts)}catch(e){r(e)}}))}getFirstPage(){return this.page=0,this.__getPage(1)}getNextPage(){return this.__getPage(1)}getPreviousPage(){return this.__getPage(-1)}async __getPage(e){return this.initialized||await this.readKeyring(),this.keyringMode===s.hd?this.__getNormalPage(e):this.__getLedgerLivePage(e)}getAccounts(){return Promise.resolve(this.accounts)}removeAccount(e){if(!this.accounts.map((e=>e.toLowerCase())).includes(e.toLowerCase()))throw new Error(`Address ${e} not found in this keyring`);this.accounts=this.accounts.filter((t=>t.toLowerCase()!==e.toLowerCase()))}static serializeTx(e){return e.v=new a.BN(e.common.chainId()),e.r=new a.BN(0),e.s=new a.BN(0),e.serialize()}async signTransaction(e,t){const r=await this._pathFromAddress(e),n=t.common.chainId(),s=d.v4(),o=l.EthSignRequest.constructETHRequest(h.serializeTx(t),l.DataType.transaction,r,this.xfp,s,n),{r:i,s:a,v:u}=await this.requestSignature(s,o,"Scan with your Keystone",'After your Keystone has signed the transaction, click on "Scan Keystone" to receive the signature'),g=t.toJSON();return c.Transaction.fromTxData({to:g.to,gasLimit:g.gasLimit,gasPrice:g.gasPrice,data:g.data,nonce:g.nonce,value:g.value,r:i,s:a,v:u},{common:t.common})}signMessage(e,t){return this.signPersonalMessage(e,t)}async signPersonalMessage(e,r){const n=a.stripHexPrefix(r),s=await this._pathFromAddress(e),o=d.v4(),i=l.EthSignRequest.constructETHRequest(t.from(n,"hex"),l.DataType.personalMessage,s,this.xfp,o,void 0,e),{r:c,s:h,v:u}=await this.requestSignature(o,i,"Scan with your Keystone",'After your Keystone has signed this message, click on "Scan Keystone" to receive the signature');return"0x"+t.concat([c,h,u]).toString("hex")}async signTypedData(e,r){const n=await this._pathFromAddress(e),s=d.v4(),o=l.EthSignRequest.constructETHRequest(t.from(JSON.stringify(r),"utf-8"),l.DataType.typedData,n,this.xfp,s,void 0,e),{r:i,s:a,v:c}=await this.requestSignature(s,o,"Scan with your Keystone",'After your Keystone has signed this data, click on "Scan Keystone" to receive the signature');return"0x"+t.concat([i,a,c]).toString("hex")}async _pathFromAddress(e){if(this.keyringMode===s.hd){const t=a.toChecksumAddress(e);let r=this.indexes[t];if(void 0===r)for(let e=0;e<1e3;e++)if(t===await this.__addressFromIndex("m",e)){r=e;break}if(void 0===r)throw new Error("Unknown address");return`${this.hdPath}/${this.childrenPath.replace("*",r.toString()).replaceAll("*","0")}`}{const t=a.toChecksumAddress(e),r=this.paths[t];if(void 0===r)throw new Error("Unknown address");return r}}}h.type="QR Hardware Wallet Device",r.BaseKeyring=h}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@keystonehq/metamask-airgapped-keyring>@keystonehq/base-eth-keyring"}],[944,{"./base-eth-keyring.cjs.development.js":942,"./base-eth-keyring.cjs.production.min.js":943},function(){with(this)return function(){"use strict";return function(e,t,r){t.exports=e("./base-eth-keyring.cjs.production.min.js")}}},{package:"@keystonehq/metamask-airgapped-keyring>@keystonehq/base-eth-keyring"}],[945,{"./transaction":946,"./types":947},function(){with(this)return function(){"use strict";return function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){n===undefined&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){n===undefined&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0});var o=e("./transaction");Object.defineProperty(r,"Transaction",{enumerable:!0,get:function(){return o.default}}),s(e("./types"),r)}}},{package:"@keystonehq/metamask-airgapped-keyring>@keystonehq/base-eth-keyring>@ethereumjs/tx"}],[946,{"@ethereumjs/common":596,buffer:2434,"ethereumjs-util":2891},function(){with(this)return function(){"use strict";return function(e,t,r){var n=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},s=this&&this.__read||function(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,s,o=r.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)i.push(n.value)}catch(e){s={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(s)throw s.error}}return i},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0});var i=e("buffer"),a=e("ethereumjs-util"),c=o(e("@ethereumjs/common")),l=new a.BN("7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0",16),d=function(){function e(e,t){var r,o,i,l=e.nonce,d=e.gasPrice,h=e.gasLimit,u=e.to,g=e.value,p=e.data,f=e.v,m=e.r,y=e.s;this.nonce=new a.BN(a.toBuffer(l)),this.gasPrice=new a.BN(a.toBuffer(d)),this.gasLimit=new a.BN(a.toBuffer(h)),this.to=u?new a.Address(a.toBuffer(u)):undefined,this.value=new a.BN(a.toBuffer(g)),this.data=a.toBuffer(p),this.v=new a.BN(a.toBuffer(f)),this.r=new a.BN(a.toBuffer(m)),this.s=new a.BN(a.toBuffer(y));var C={nonce:this.nonce,gasPrice:this.gasPrice,gasLimit:this.gasLimit,value:this.value,r:this.r,s:this.s};try{for(var k=n(Object.entries(C)),b=k.next();!b.done;b=k.next()){var w=s(b.value,2),v=w[0],T=w[1];if(T&&T.gt(a.MAX_INTEGER))throw new Error(v+" cannot exceed MAX_INTEGER, given "+T)}}catch(e){r={error:e}}finally{try{b&&!b.done&&(o=k.return)&&o.call(k)}finally{if(r)throw r.error}}if(null==t?void 0:t.common)this.common=t.common;else{this.common=new c.default({chain:"mainnet"})}this._validateTxV(this.v),(null===(i=null==t?void 0:t.freeze)||void 0===i||i)&&Object.freeze(this)}return e.fromTxData=function(t,r){return new e(t,r)},e.fromRlpSerializedTx=function(e,t){var r=a.rlp.decode(e);if(!Array.isArray(r))throw new Error("Invalid serialized tx input. Must be array");return this.fromValuesArray(r,t)},e.fromValuesArray=function(t,r){if(6!==t.length&&9!==t.length)throw new Error("Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).");var n=s(t,9),o=n[0],c=n[1],l=n[2],d=n[3],h=n[4],u=n[5],g=n[6],p=n[7],f=n[8];return new e({nonce:new a.BN(o),gasPrice:new a.BN(c),gasLimit:new a.BN(l),to:d&&d.length>0?new a.Address(d):undefined,value:new a.BN(h),data:u||i.Buffer.from([]),v:g?new a.BN(g):undefined,r:p?new a.BN(p):undefined,s:f?new a.BN(f):undefined},r)},e.prototype.toCreationAddress=function(){return this.to===undefined||0===this.to.buf.length},e.prototype.hash=function(){var e=[a.bnToRlp(this.nonce),a.bnToRlp(this.gasPrice),a.bnToRlp(this.gasLimit),this.to!==undefined?this.to.buf:i.Buffer.from([]),a.bnToRlp(this.value),this.data,this.v?a.bnToRlp(this.v):i.Buffer.from([]),this.r?a.bnToRlp(this.r):i.Buffer.from([]),this.s?a.bnToRlp(this.s):i.Buffer.from([])];return a.rlphash(e)},e.prototype.getMessageToSign=function(){return this._getMessageToSign(this._unsignedTxImplementsEIP155())},e.prototype.getMessageToVerifySignature=function(){return this._getMessageToSign(this._signedTxImplementsEIP155())},e.prototype.getChainId=function(){return this.common.chainId()},e.prototype.getSenderAddress=function(){return new a.Address(a.publicToAddress(this.getSenderPublicKey()))},e.prototype.getSenderPublicKey=function(){var e=this.getMessageToVerifySignature();if(this.common.gteHardfork("homestead")&&this.s&&this.s.gt(l))throw new Error("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");var t=this,r=t.v,n=t.r,s=t.s;if(!r||!n||!s)throw new Error("Missing values to derive sender public key from signed tx");try{return a.ecrecover(e,r.toNumber(),a.bnToRlp(n),a.bnToRlp(s),this._signedTxImplementsEIP155()?this.getChainId():undefined)}catch(e){throw new Error("Invalid Signature")}},e.prototype.verifySignature=function(){try{var e=this.getSenderPublicKey();return 0!==a.unpadBuffer(e).length}catch(e){return!1}},e.prototype.sign=function(t){if(32!==t.length)throw new Error("Private key must be 32 bytes in length.");var r=this.getMessageToSign(),n=a.ecsign(r,t),s=n.v,o=n.r,i=n.s;this._unsignedTxImplementsEIP155()&&(s+=2*this.getChainId()+8);var c={common:this.common};return new e({nonce:this.nonce,gasPrice:this.gasPrice,gasLimit:this.gasLimit,to:this.to,value:this.value,data:this.data,v:new a.BN(s),r:new a.BN(o),s:new a.BN(i)},c)},e.prototype.getDataFee=function(){for(var e=this.common.param("gasPrices","txDataZero"),t=this.common.param("gasPrices","txDataNonZero"),r=0,n=0;n<this.data.length;n++)0===this.data[n]?r+=e:r+=t;return new a.BN(r)},e.prototype.getBaseFee=function(){var e=this.getDataFee().addn(this.common.param("gasPrices","tx"));return this.common.gteHardfork("homestead")&&this.toCreationAddress()&&e.iaddn(this.common.param("gasPrices","txCreation")),e},e.prototype.getUpfrontCost=function(){return this.gasLimit.mul(this.gasPrice).add(this.value)},e.prototype.validate=function(e){void 0===e&&(e=!1);var t=[];return this.verifySignature()||t.push("Invalid Signature"),this.getBaseFee().gt(this.gasLimit)&&t.push("gasLimit is too low. given "+this.gasLimit+", need at least "+this.getBaseFee()),e?t:0===t.length},e.prototype.raw=function(){return[a.bnToRlp(this.nonce),a.bnToRlp(this.gasPrice),a.bnToRlp(this.gasLimit),this.to!==undefined?this.to.buf:i.Buffer.from([]),a.bnToRlp(this.value),this.data,this.v!==undefined?a.bnToRlp(this.v):i.Buffer.from([]),this.r!==undefined?a.bnToRlp(this.r):i.Buffer.from([]),this.s!==undefined?a.bnToRlp(this.s):i.Buffer.from([])]},e.prototype.serialize=function(){return a.rlp.encode(this.raw())},e.prototype.toJSON=function(){return{nonce:a.bnToHex(this.nonce),gasPrice:a.bnToHex(this.gasPrice),gasLimit:a.bnToHex(this.gasLimit),to:this.to!==undefined?this.to.toString():undefined,value:a.bnToHex(this.value),data:"0x"+this.data.toString("hex"),v:this.v!==undefined?a.bnToHex(this.v):undefined,r:this.r!==undefined?a.bnToHex(this.r):undefined,s:this.s!==undefined?a.bnToHex(this.s):undefined}},e.prototype.isSigned=function(){var e=this,t=e.v,r=e.r,n=e.s;return!!t&&!!r&&!!n},e.prototype._unsignedTxImplementsEIP155=function(){return this.common.gteHardfork("spuriousDragon")},e.prototype._signedTxImplementsEIP155=function(){var e;if(!this.isSigned())throw Error("This transaction is not signed");var t=this.common.gteHardfork("spuriousDragon"),r=null===(e=this.v)||void 0===e?void 0:e.toNumber();return(r===2*this.getChainId()+35||r===2*this.getChainId()+36)&&t},e.prototype._getMessageToSign=function(e){var t=[a.bnToRlp(this.nonce),a.bnToRlp(this.gasPrice),a.bnToRlp(this.gasLimit),this.to!==undefined?this.to.buf:i.Buffer.from([]),a.bnToRlp(this.value),this.data];return e&&(t.push(a.toBuffer(this.getChainId())),t.push(a.unpadBuffer(a.toBuffer(0))),t.push(a.unpadBuffer(a.toBuffer(0)))),a.rlphash(t)},e.prototype._validateTxV=function(e){if(e!==undefined&&0!==e.toNumber()&&this.common.gteHardfork("spuriousDragon")){var t=e.toNumber();if(27!==t&&28!==t)if(!(t===2*this.getChainId()+35||t===2*this.getChainId()+36))throw new Error("Incompatible EIP155-based V "+t+" and chain id "+this.getChainId()+". See the Common parameter of the Transaction constructor to set the chain id.")}},e}();r.default=d}}},{package:"@keystonehq/metamask-airgapped-keyring>@keystonehq/base-eth-keyring>@ethereumjs/tx"}],[947,{},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0})}}},{package:"@keystonehq/metamask-airgapped-keyring>@keystonehq/base-eth-keyring>@ethereumjs/tx"}],[948,{"@keystonehq/bc-ur-registry":968,buffer:2434,"ethereumjs-util":2891,hdkey:4812,uuid:7148},function(){with(this)return function(){"use strict";return function(e,t,r){(function(t){(function(){Object.defineProperty(r,"__esModule",{value:!0});var n,s=e("@keystonehq/bc-ur-registry"),o=e("uuid"),i=(n=e("hdkey"))&&"object"==typeof n&&"default"in n?n.default:n,a=e("ethereumjs-util");const{RegistryType:c}=s.extend,l={ETH_SIGN_REQUEST:new c("eth-sign-request",401),ETH_SIGNATAURE:new c("eth-signature",402)},{decodeToDataItem:d,RegistryTypes:h}=s.extend;var u,g;!function(e){e[e.requestId=1]="requestId",e[e.signData=2]="signData",e[e.dataType=3]="dataType",e[e.chainId=4]="chainId",e[e.derivationPath=5]="derivationPath",e[e.address=6]="address",e[e.origin=7]="origin"}(u||(u={})),(g=r.DataType||(r.DataType={}))[g.transaction=1]="transaction",g[g.typedData=2]="typedData",g[g.personalMessage=3]="personalMessage",g[g.typedTransaction=4]="typedTransaction";class p extends s.RegistryItem{constructor(e){super(),this.getRegistryType=()=>l.ETH_SIGN_REQUEST,this.setupData=e=>{this.requestId=e.requestId,this.signData=e.signData,this.dataType=e.dataType,this.chainId=e.chainId,this.derivationPath=e.derivationPath,this.address=e.address,this.origin=e.origin},this.getRequestId=()=>this.requestId,this.getSignData=()=>this.signData,this.getDataType=()=>this.dataType,this.getChainId=()=>this.chainId,this.getDerivationPath=()=>this.derivationPath.getPath(),this.getSignRequestAddress=()=>this.address,this.getOrigin=()=>this.origin,this.toDataItem=()=>{const e={};this.requestId&&(e[u.requestId]=new s.DataItem(this.requestId,h.UUID.getTag())),this.address&&(e[u.address]=this.address),this.chainId&&(e[u.chainId]=this.chainId),this.origin&&(e[u.origin]=this.origin),e[u.signData]=this.signData,e[u.dataType]=this.dataType;const t=this.derivationPath.toDataItem();return t.setTag(this.derivationPath.getRegistryType().getTag()),e[u.derivationPath]=t,new s.DataItem(e)},this.setupData(e)}static constructETHRequest(e,r,n,i,a,c,l,d){const h=n.replace(/[m|M]\//,"").split("/"),u=new s.CryptoKeypath(h.map((e=>{const t=parseInt(e.replace("'",""));let r=!1;return e.endsWith("'")&&(r=!0),new s.PathComponent({index:t,hardened:r})})),t.from(i,"hex"));return new p({requestId:a?t.from(o.parse(a)):undefined,signData:e,dataType:r,derivationPath:u,chainId:c,address:l?t.from(l.replace("0x",""),"hex"):undefined,origin:d||undefined})}}p.fromDataItem=e=>{const t=e.getData(),r=t[u.signData],n=t[u.dataType],o=s.CryptoKeypath.fromDataItem(t[u.derivationPath]),i=t[u.chainId]?t[u.chainId]:undefined,a=t[u.address]?t[u.address]:undefined,c=t[u.requestId]?t[u.requestId].getData():undefined,l=t[u.origin]?t[u.origin]:undefined;return new p({requestId:c,signData:r,dataType:n,chainId:i,derivationPath:o,address:a,origin:l})},p.fromCBOR=e=>{const t=d(e);return p.fromDataItem(t)};const{RegistryTypes:f,decodeToDataItem:m}=s.extend;var y;!function(e){e[e.requestId=1]="requestId",e[e.signature=2]="signature"}(y||(y={}));class C extends s.RegistryItem{constructor(e,t){super(),this.getRegistryType=()=>l.ETH_SIGNATAURE,this.getRequestId=()=>this.requestId,this.getSignature=()=>this.signature,this.toDataItem=()=>{const e={};return this.requestId&&(e[y.requestId]=new s.DataItem(this.requestId,f.UUID.getTag())),e[y.signature]=this.signature,new s.DataItem(e)},this.signature=e,this.requestId=t}}C.fromDataItem=e=>{const t=e.getData(),r=t[y.signature],n=t[y.requestId]?t[y.requestId].getData():undefined;return new C(r,n)},C.fromCBOR=e=>{const t=m(e);return C.fromDataItem(t)};const k=(e,t)=>{const r=i.fromExtendedKey(e).derive(t),n="0x"+a.publicToAddress(r.publicKey,!0).toString("hex");return a.toChecksumAddress(n)},{cbor:b}=s.extend;b.patchTags(Object.values(l).filter((e=>!!e.getTag())).map((e=>e.getTag()))),Object.keys(s).forEach((function(e){"default"!==e&&Object.defineProperty(r,e,{enumerable:!0,get:function(){return s[e]}})})),r.ETHSignature=C,r.EthSignRequest=p,r.findHDpatfromAddress=(e,t,r,n)=>{for(let s=0;s<r;s++){const r=k(t,`M/0/${s}`);if(e.toLowerCase()==r.toLowerCase())return`${n}/0/${s}`}return null},r.generateAddressfromXpub=k}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@keystonehq/metamask-airgapped-keyring>@keystonehq/base-eth-keyring>@keystonehq/bc-ur-registry-eth"}],[949,{"@keystonehq/bc-ur-registry":968,buffer:2434,"ethereumjs-util":2891,hdkey:4812,uuid:7148},function(){with(this)return function(){"use strict";return function(e,t,r){(function(t){(function(){Object.defineProperty(r,"__esModule",{value:!0});var n,s=e("@keystonehq/bc-ur-registry"),o=e("uuid"),i=(n=e("hdkey"))&&"object"==typeof n&&"default"in n?n.default:n,a=e("ethereumjs-util");const{RegistryType:c}=s.extend,l={ETH_SIGN_REQUEST:new c("eth-sign-request",401),ETH_SIGNATAURE:new c("eth-signature",402)},{decodeToDataItem:d,RegistryTypes:h}=s.extend;var u,g;!function(e){e[e.requestId=1]="requestId",e[e.signData=2]="signData",e[e.dataType=3]="dataType",e[e.chainId=4]="chainId",e[e.derivationPath=5]="derivationPath",e[e.address=6]="address",e[e.origin=7]="origin"}(u||(u={})),(g=r.DataType||(r.DataType={}))[g.transaction=1]="transaction",g[g.typedData=2]="typedData",g[g.personalMessage=3]="personalMessage",g[g.typedTransaction=4]="typedTransaction";class p extends s.RegistryItem{constructor(e){super(),this.getRegistryType=()=>l.ETH_SIGN_REQUEST,this.setupData=e=>{this.requestId=e.requestId,this.signData=e.signData,this.dataType=e.dataType,this.chainId=e.chainId,this.derivationPath=e.derivationPath,this.address=e.address,this.origin=e.origin},this.getRequestId=()=>this.requestId,this.getSignData=()=>this.signData,this.getDataType=()=>this.dataType,this.getChainId=()=>this.chainId,this.getDerivationPath=()=>this.derivationPath.getPath(),this.getSignRequestAddress=()=>this.address,this.getOrigin=()=>this.origin,this.toDataItem=()=>{const e={};this.requestId&&(e[u.requestId]=new s.DataItem(this.requestId,h.UUID.getTag())),this.address&&(e[u.address]=this.address),this.chainId&&(e[u.chainId]=this.chainId),this.origin&&(e[u.origin]=this.origin),e[u.signData]=this.signData,e[u.dataType]=this.dataType;const t=this.derivationPath.toDataItem();return t.setTag(this.derivationPath.getRegistryType().getTag()),e[u.derivationPath]=t,new s.DataItem(e)},this.setupData(e)}static constructETHRequest(e,r,n,i,a,c,l,d){const h=n.replace(/[m|M]\//,"").split("/"),u=new s.CryptoKeypath(h.map((e=>{const t=parseInt(e.replace("'",""));let r=!1;return e.endsWith("'")&&(r=!0),new s.PathComponent({index:t,hardened:r})})),t.from(i,"hex"));return new p({requestId:a?t.from(o.parse(a)):void 0,signData:e,dataType:r,derivationPath:u,chainId:c,address:l?t.from(l.replace("0x",""),"hex"):void 0,origin:d||void 0})}}p.fromDataItem=e=>{const t=e.getData(),r=t[u.signData],n=t[u.dataType],o=s.CryptoKeypath.fromDataItem(t[u.derivationPath]),i=t[u.chainId]?t[u.chainId]:void 0,a=t[u.address]?t[u.address]:void 0,c=t[u.requestId]?t[u.requestId].getData():void 0;return new p({requestId:c,signData:r,dataType:n,chainId:i,derivationPath:o,address:a,origin:t[u.origin]?t[u.origin]:void 0})},p.fromCBOR=e=>{const t=d(e);return p.fromDataItem(t)};const{RegistryTypes:f,decodeToDataItem:m}=s.extend;var y;!function(e){e[e.requestId=1]="requestId",e[e.signature=2]="signature"}(y||(y={}));class C extends s.RegistryItem{constructor(e,t){super(),this.getRegistryType=()=>l.ETH_SIGNATAURE,this.getRequestId=()=>this.requestId,this.getSignature=()=>this.signature,this.toDataItem=()=>{const e={};return this.requestId&&(e[y.requestId]=new s.DataItem(this.requestId,f.UUID.getTag())),e[y.signature]=this.signature,new s.DataItem(e)},this.signature=e,this.requestId=t}}C.fromDataItem=e=>{const t=e.getData(),r=t[y.signature],n=t[y.requestId]?t[y.requestId].getData():void 0;return new C(r,n)},C.fromCBOR=e=>{const t=m(e);return C.fromDataItem(t)};const k=(e,t)=>{const r=i.fromExtendedKey(e).derive(t),n="0x"+a.publicToAddress(r.publicKey,!0).toString("hex");return a.toChecksumAddress(n)},{cbor:b}=s.extend;b.patchTags(Object.values(l).filter((e=>!!e.getTag())).map((e=>e.getTag()))),Object.keys(s).forEach((function(e){"default"!==e&&Object.defineProperty(r,e,{enumerable:!0,get:function(){return s[e]}})})),r.ETHSignature=C,r.EthSignRequest=p,r.findHDpatfromAddress=(e,t,r,n)=>{for(let s=0;s<r;s++){const r=k(t,"M/0/"+s);if(e.toLowerCase()==r.toLowerCase())return`${n}/0/${s}`}return null},r.generateAddressfromXpub=k}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@keystonehq/metamask-airgapped-keyring>@keystonehq/base-eth-keyring>@keystonehq/bc-ur-registry-eth"}],[95,{lodash:5584},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:7,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=7;try{const e=function(e){const t={...e,TransactionManager:{transactions:e.transactions||[],gasMultiplier:e.gasMultiplier||1}};return delete t.transactions,delete t.gasMultiplier,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #7${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$"}],[950,{"./bc-ur-registry-eth.cjs.development.js":948,"./bc-ur-registry-eth.cjs.production.min.js":949},function(){with(this)return function(){"use strict";return function(e,t,r){t.exports=e("./bc-ur-registry-eth.cjs.production.min.js")}}},{package:"@keystonehq/metamask-airgapped-keyring>@keystonehq/base-eth-keyring>@keystonehq/bc-ur-registry-eth"}],[96,{lodash:5584},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:8,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=8;try{const e=function(e){const t={...e,NoticeController:{noticesList:e.noticesList||[]}};return delete t.noticesList,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #8${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$"}],[97,{lodash:5584},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:9,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=9;try{const e=function(e){const t=(0,n.merge)({},e,{CurrencyController:{currentCurrency:e.currentFiat||e.fiatCurrency||"USD",conversionRate:e.conversionRate,conversionDate:e.conversionDate}});return delete t.currentFiat,delete t.fiatCurrency,delete t.conversionRate,delete t.conversionDate,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #9${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$"}],[974,{"./metamask-airgapped-keyring.cjs.development.js":975,"./metamask-airgapped-keyring.cjs.production.min.js":976},function(){with(this)return function(){"use strict";return function(e,t,r){t.exports=e("./metamask-airgapped-keyring.cjs.production.min.js")}}},{package:"@keystonehq/metamask-airgapped-keyring"}],[975,{"@ethereumjs/tx":600,"@keystonehq/base-eth-keyring":944,"@keystonehq/bc-ur-registry-eth":979,"@metamask/obs-store":984,buffer:2434,events:2435,rlp:6868,uuid:7148},function(){with(this)return function(){"use strict";return function(e,t,r){(function(t){(function(){Object.defineProperty(r,"__esModule",{value:!0});var n,s=e("@keystonehq/base-eth-keyring"),o=e("events"),i=e("@metamask/obs-store"),a=e("@keystonehq/bc-ur-registry-eth"),c=e("uuid"),l=e("@ethereumjs/tx"),d=(n=e("rlp"))&&"object"==typeof n&&"default"in n?n.default:n;class h extends o.EventEmitter{constructor(){if(super(),this.readCryptoHDKeyOrCryptoAccount=()=>new Promise(((e,r)=>{this.memStore.updateState({sync:{reading:!0}}),this.on("keystone-sync_success-hdkey",(r=>{const n=a.CryptoHDKey.fromCBOR(t.from(r,"hex"));this.resetState(),e(n)})),this.on("keystone-sync_success-account",(r=>{const n=a.CryptoAccount.fromCBOR(t.from(r,"hex"));this.resetState(),e(n)})),this.on("keystone-sync_cancel",(()=>{this.resetState(),r(new Error("KeystoneError#sync_cancel. Sync process canceled, please retry"))}))})),this.submitCryptoHDKey=e=>{this.emit("keystone-sync_success-hdkey",e)},this.submitCryptoAccount=e=>{this.emit("keystone-sync_success-account",e)},this.cancelSync=()=>{this.emit("keystone-sync_cancel")},this.requestSignature=(e,r,n)=>new Promise(((s,o)=>{const i=e.toUR(),l=e.getRequestId(),d=c.stringify(l),h={requestId:d,payload:{type:i.type,cbor:i.cbor.toString("hex")},title:r,description:n};this.memStore.updateState({sign:{request:h}}),this.once(`${d}-signed`,(e=>{const r=a.ETHSignature.fromCBOR(t.from(e,"hex"));this.resetState(),s(r)})),this.once(`${d}-canceled`,(()=>{this.resetState(),o(new Error("KeystoneError#Tx_canceled. Signing canceled, please retry"))}))})),this.submitSignature=(e,t)=>{this.emit(`${e}-signed`,t)},this.cancelRequestSignature=()=>{const e=this.memStore.getState().sign.request;if(e){const{requestId:t}=e;this.memStore.updateState({sign:{}}),this.emit(`${t}-canceled`)}},this.resetState=()=>{this.memStore.updateState({sync:{reading:!1},sign:{}})},h.instance)return h.instance;this.memStore=new i.ObservableStore({sync:{reading:!1},sign:{},_version:1}),h.instance=this}}class u extends s.BaseKeyring{constructor(e){if(super(e),this.getInteraction=()=>new h,this.getMemStore=()=>this.getInteraction().memStore,this.removeAccount=e=>{if(!this.accounts.map((e=>e.toLowerCase())).includes(e.toLowerCase()))throw new Error(`Address ${e} not found in this keyring`);this.accounts=this.accounts.filter((t=>t.toLowerCase()!==e.toLowerCase()))},this.forgetDevice=()=>{this.page=0,this.perPage=5,this.accounts=[],this.currentAccount=0,this.name="QR Hardware",this.initialized=!1,this.xfp="",this.xpub="",this.hdPath="",this.indexes={},this.hdk=undefined,this.paths={}},this.submitCryptoHDKey=this.getInteraction().submitCryptoHDKey,this.submitCryptoAccount=this.getInteraction().submitCryptoAccount,this.submitSignature=this.getInteraction().submitSignature,this.cancelSync=this.getInteraction().cancelSync,this.cancelSignRequest=this.getInteraction().cancelRequestSignature,u.instance)return u.instance.deserialize(e),u.instance;u.instance=this}async signTransaction(e,t){const r=0===t.type?a.DataType.transaction:a.DataType.typedTransaction;let n;n=0===t.type?d.encode(t.getMessageToSign(!1)):t.getMessageToSign(!1);const s=await this._pathFromAddress(e),o=t.common.chainId(),i=c.v4(),h=a.EthSignRequest.constructETHRequest(n,r,s,this.xfp,i,o),{r:u,s:g,v:p}=await this.requestSignature(i,h,"Scan with your Keystone",'After your Keystone has signed the transaction, click on "Scan Keystone" to receive the signature'),f=t.toJSON();f.v=p,f.s=g,f.r=u,f.type=t.type;return l.TransactionFactory.fromTxData(f,{common:t.common})}}u.type=s.BaseKeyring.type,r.MetaMaskKeyring=u}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@keystonehq/metamask-airgapped-keyring"}],[976,{"@ethereumjs/tx":600,"@keystonehq/base-eth-keyring":944,"@keystonehq/bc-ur-registry-eth":979,"@metamask/obs-store":984,buffer:2434,events:2435,rlp:6868,uuid:7148},function(){with(this)return function(){"use strict";return function(e,t,r){(function(t){(function(){Object.defineProperty(r,"__esModule",{value:!0});var n,s=e("@keystonehq/base-eth-keyring"),o=e("events"),i=e("@metamask/obs-store"),a=e("@keystonehq/bc-ur-registry-eth"),c=e("uuid"),l=e("@ethereumjs/tx"),d=(n=e("rlp"))&&"object"==typeof n&&"default"in n?n.default:n;class h extends o.EventEmitter{constructor(){if(super(),this.readCryptoHDKeyOrCryptoAccount=()=>new Promise(((e,r)=>{this.memStore.updateState({sync:{reading:!0}}),this.on("keystone-sync_success-hdkey",(r=>{const n=a.CryptoHDKey.fromCBOR(t.from(r,"hex"));this.resetState(),e(n)})),this.on("keystone-sync_success-account",(r=>{const n=a.CryptoAccount.fromCBOR(t.from(r,"hex"));this.resetState(),e(n)})),this.on("keystone-sync_cancel",(()=>{this.resetState(),r(new Error("KeystoneError#sync_cancel. Sync process canceled, please retry"))}))})),this.submitCryptoHDKey=e=>{this.emit("keystone-sync_success-hdkey",e)},this.submitCryptoAccount=e=>{this.emit("keystone-sync_success-account",e)},this.cancelSync=()=>{this.emit("keystone-sync_cancel")},this.requestSignature=(e,r,n)=>new Promise(((s,o)=>{const i=e.toUR(),l=e.getRequestId(),d=c.stringify(l),h={requestId:d,payload:{type:i.type,cbor:i.cbor.toString("hex")},title:r,description:n};this.memStore.updateState({sign:{request:h}}),this.once(d+"-signed",(e=>{const r=a.ETHSignature.fromCBOR(t.from(e,"hex"));this.resetState(),s(r)})),this.once(d+"-canceled",(()=>{this.resetState(),o(new Error("KeystoneError#Tx_canceled. Signing canceled, please retry"))}))})),this.submitSignature=(e,t)=>{this.emit(e+"-signed",t)},this.cancelRequestSignature=()=>{const e=this.memStore.getState().sign.request;if(e){const{requestId:t}=e;this.memStore.updateState({sign:{}}),this.emit(t+"-canceled")}},this.resetState=()=>{this.memStore.updateState({sync:{reading:!1},sign:{}})},h.instance)return h.instance;this.memStore=new i.ObservableStore({sync:{reading:!1},sign:{},_version:1}),h.instance=this}}class u extends s.BaseKeyring{constructor(e){if(super(e),this.getInteraction=()=>new h,this.getMemStore=()=>this.getInteraction().memStore,this.removeAccount=e=>{if(!this.accounts.map((e=>e.toLowerCase())).includes(e.toLowerCase()))throw new Error(`Address ${e} not found in this keyring`);this.accounts=this.accounts.filter((t=>t.toLowerCase()!==e.toLowerCase()))},this.forgetDevice=()=>{this.page=0,this.perPage=5,this.accounts=[],this.currentAccount=0,this.name="QR Hardware",this.initialized=!1,this.xfp="",this.xpub="",this.hdPath="",this.indexes={},this.hdk=void 0,this.paths={}},this.submitCryptoHDKey=this.getInteraction().submitCryptoHDKey,this.submitCryptoAccount=this.getInteraction().submitCryptoAccount,this.submitSignature=this.getInteraction().submitSignature,this.cancelSync=this.getInteraction().cancelSync,this.cancelSignRequest=this.getInteraction().cancelRequestSignature,u.instance)return u.instance.deserialize(e),u.instance;u.instance=this}async signTransaction(e,t){const r=0===t.type?a.DataType.transaction:a.DataType.typedTransaction;let n;n=0===t.type?d.encode(t.getMessageToSign(!1)):t.getMessageToSign(!1);const s=await this._pathFromAddress(e),o=t.common.chainId(),i=c.v4(),h=a.EthSignRequest.constructETHRequest(n,r,s,this.xfp,i,o),{r:u,s:g,v:p}=await this.requestSignature(i,h,"Scan with your Keystone",'After your Keystone has signed the transaction, click on "Scan Keystone" to receive the signature'),f=t.toJSON();return f.v=p,f.s=g,f.r=u,f.type=t.type,l.TransactionFactory.fromTxData(f,{common:t.common})}}u.type=s.BaseKeyring.type,r.MetaMaskKeyring=u}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@keystonehq/metamask-airgapped-keyring"}],[977,{"@keystonehq/bc-ur-registry":968,buffer:2434,"ethereumjs-util":2891,hdkey:4812,uuid:7148},function(){with(this)return function(){"use strict";return function(e,t,r){(function(t){(function(){Object.defineProperty(r,"__esModule",{value:!0});var n,s=e("@keystonehq/bc-ur-registry"),o=e("uuid"),i=(n=e("hdkey"))&&"object"==typeof n&&"default"in n?n.default:n,a=e("ethereumjs-util");const{RegistryType:c}=s.extend,l={ETH_SIGN_REQUEST:new c("eth-sign-request",401),ETH_SIGNATAURE:new c("eth-signature",402)},{decodeToDataItem:d,RegistryTypes:h}=s.extend;var u,g;!function(e){e[e.requestId=1]="requestId",e[e.signData=2]="signData",e[e.dataType=3]="dataType",e[e.chainId=4]="chainId",e[e.derivationPath=5]="derivationPath",e[e.address=6]="address",e[e.origin=7]="origin"}(u||(u={})),(g=r.DataType||(r.DataType={}))[g.transaction=1]="transaction",g[g.typedData=2]="typedData",g[g.personalMessage=3]="personalMessage",g[g.typedTransaction=4]="typedTransaction";class p extends s.RegistryItem{constructor(e){super(),this.getRegistryType=()=>l.ETH_SIGN_REQUEST,this.setupData=e=>{this.requestId=e.requestId,this.signData=e.signData,this.dataType=e.dataType,this.chainId=e.chainId,this.derivationPath=e.derivationPath,this.address=e.address,this.origin=e.origin},this.getRequestId=()=>this.requestId,this.getSignData=()=>this.signData,this.getDataType=()=>this.dataType,this.getChainId=()=>this.chainId,this.getDerivationPath=()=>this.derivationPath.getPath(),this.getSignRequestAddress=()=>this.address,this.getOrigin=()=>this.origin,this.toDataItem=()=>{const e={};this.requestId&&(e[u.requestId]=new s.DataItem(this.requestId,h.UUID.getTag())),this.address&&(e[u.address]=this.address),this.chainId&&(e[u.chainId]=this.chainId),this.origin&&(e[u.origin]=this.origin),e[u.signData]=this.signData,e[u.dataType]=this.dataType;const t=this.derivationPath.toDataItem();return t.setTag(this.derivationPath.getRegistryType().getTag()),e[u.derivationPath]=t,new s.DataItem(e)},this.setupData(e)}static constructETHRequest(e,r,n,i,a,c,l,d){const h=n.replace(/[m|M]\//,"").split("/"),u=new s.CryptoKeypath(h.map((e=>{const t=parseInt(e.replace("'",""));let r=!1;return e.endsWith("'")&&(r=!0),new s.PathComponent({index:t,hardened:r})})),t.from(i,"hex"));return new p({requestId:a?t.from(o.parse(a)):undefined,signData:e,dataType:r,derivationPath:u,chainId:c,address:l?t.from(l.replace("0x",""),"hex"):undefined,origin:d||undefined})}}p.fromDataItem=e=>{const t=e.getData(),r=t[u.signData],n=t[u.dataType],o=s.CryptoKeypath.fromDataItem(t[u.derivationPath]),i=t[u.chainId]?t[u.chainId]:undefined,a=t[u.address]?t[u.address]:undefined,c=t[u.requestId]?t[u.requestId].getData():undefined,l=t[u.origin]?t[u.origin]:undefined;return new p({requestId:c,signData:r,dataType:n,chainId:i,derivationPath:o,address:a,origin:l})},p.fromCBOR=e=>{const t=d(e);return p.fromDataItem(t)};const{RegistryTypes:f,decodeToDataItem:m}=s.extend;var y;!function(e){e[e.requestId=1]="requestId",e[e.signature=2]="signature"}(y||(y={}));class C extends s.RegistryItem{constructor(e,t){super(),this.getRegistryType=()=>l.ETH_SIGNATAURE,this.getRequestId=()=>this.requestId,this.getSignature=()=>this.signature,this.toDataItem=()=>{const e={};return this.requestId&&(e[y.requestId]=new s.DataItem(this.requestId,f.UUID.getTag())),e[y.signature]=this.signature,new s.DataItem(e)},this.signature=e,this.requestId=t}}C.fromDataItem=e=>{const t=e.getData(),r=t[y.signature],n=t[y.requestId]?t[y.requestId].getData():undefined;return new C(r,n)},C.fromCBOR=e=>{const t=m(e);return C.fromDataItem(t)};const k=(e,t)=>{const r=i.fromExtendedKey(e).derive(t),n="0x"+a.publicToAddress(r.publicKey,!0).toString("hex");return a.toChecksumAddress(n)},{cbor:b}=s.extend;b.patchTags(Object.values(l).filter((e=>!!e.getTag())).map((e=>e.getTag()))),Object.keys(s).forEach((function(e){"default"!==e&&Object.defineProperty(r,e,{enumerable:!0,get:function(){return s[e]}})})),r.ETHSignature=C,r.EthSignRequest=p,r.findHDpatfromAddress=(e,t,r,n)=>{for(let s=0;s<r;s++){const r=k(t,`M/0/${s}`);if(e.toLowerCase()==r.toLowerCase())return`${n}/0/${s}`}return null},r.generateAddressfromXpub=k}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@keystonehq/metamask-airgapped-keyring>@keystonehq/bc-ur-registry-eth"}],[978,{"@keystonehq/bc-ur-registry":968,buffer:2434,"ethereumjs-util":2891,hdkey:4812,uuid:7148},function(){with(this)return function(){"use strict";return function(e,t,r){(function(t){(function(){Object.defineProperty(r,"__esModule",{value:!0});var n,s=e("@keystonehq/bc-ur-registry"),o=e("uuid"),i=(n=e("hdkey"))&&"object"==typeof n&&"default"in n?n.default:n,a=e("ethereumjs-util");const{RegistryType:c}=s.extend,l={ETH_SIGN_REQUEST:new c("eth-sign-request",401),ETH_SIGNATAURE:new c("eth-signature",402)},{decodeToDataItem:d,RegistryTypes:h}=s.extend;var u,g;!function(e){e[e.requestId=1]="requestId",e[e.signData=2]="signData",e[e.dataType=3]="dataType",e[e.chainId=4]="chainId",e[e.derivationPath=5]="derivationPath",e[e.address=6]="address",e[e.origin=7]="origin"}(u||(u={})),(g=r.DataType||(r.DataType={}))[g.transaction=1]="transaction",g[g.typedData=2]="typedData",g[g.personalMessage=3]="personalMessage",g[g.typedTransaction=4]="typedTransaction";class p extends s.RegistryItem{constructor(e){super(),this.getRegistryType=()=>l.ETH_SIGN_REQUEST,this.setupData=e=>{this.requestId=e.requestId,this.signData=e.signData,this.dataType=e.dataType,this.chainId=e.chainId,this.derivationPath=e.derivationPath,this.address=e.address,this.origin=e.origin},this.getRequestId=()=>this.requestId,this.getSignData=()=>this.signData,this.getDataType=()=>this.dataType,this.getChainId=()=>this.chainId,this.getDerivationPath=()=>this.derivationPath.getPath(),this.getSignRequestAddress=()=>this.address,this.getOrigin=()=>this.origin,this.toDataItem=()=>{const e={};this.requestId&&(e[u.requestId]=new s.DataItem(this.requestId,h.UUID.getTag())),this.address&&(e[u.address]=this.address),this.chainId&&(e[u.chainId]=this.chainId),this.origin&&(e[u.origin]=this.origin),e[u.signData]=this.signData,e[u.dataType]=this.dataType;const t=this.derivationPath.toDataItem();return t.setTag(this.derivationPath.getRegistryType().getTag()),e[u.derivationPath]=t,new s.DataItem(e)},this.setupData(e)}static constructETHRequest(e,r,n,i,a,c,l,d){const h=n.replace(/[m|M]\//,"").split("/"),u=new s.CryptoKeypath(h.map((e=>{const t=parseInt(e.replace("'",""));let r=!1;return e.endsWith("'")&&(r=!0),new s.PathComponent({index:t,hardened:r})})),t.from(i,"hex"));return new p({requestId:a?t.from(o.parse(a)):void 0,signData:e,dataType:r,derivationPath:u,chainId:c,address:l?t.from(l.replace("0x",""),"hex"):void 0,origin:d||void 0})}}p.fromDataItem=e=>{const t=e.getData(),r=t[u.signData],n=t[u.dataType],o=s.CryptoKeypath.fromDataItem(t[u.derivationPath]),i=t[u.chainId]?t[u.chainId]:void 0,a=t[u.address]?t[u.address]:void 0,c=t[u.requestId]?t[u.requestId].getData():void 0;return new p({requestId:c,signData:r,dataType:n,chainId:i,derivationPath:o,address:a,origin:t[u.origin]?t[u.origin]:void 0})},p.fromCBOR=e=>{const t=d(e);return p.fromDataItem(t)};const{RegistryTypes:f,decodeToDataItem:m}=s.extend;var y;!function(e){e[e.requestId=1]="requestId",e[e.signature=2]="signature"}(y||(y={}));class C extends s.RegistryItem{constructor(e,t){super(),this.getRegistryType=()=>l.ETH_SIGNATAURE,this.getRequestId=()=>this.requestId,this.getSignature=()=>this.signature,this.toDataItem=()=>{const e={};return this.requestId&&(e[y.requestId]=new s.DataItem(this.requestId,f.UUID.getTag())),e[y.signature]=this.signature,new s.DataItem(e)},this.signature=e,this.requestId=t}}C.fromDataItem=e=>{const t=e.getData(),r=t[y.signature],n=t[y.requestId]?t[y.requestId].getData():void 0;return new C(r,n)},C.fromCBOR=e=>{const t=m(e);return C.fromDataItem(t)};const k=(e,t)=>{const r=i.fromExtendedKey(e).derive(t),n="0x"+a.publicToAddress(r.publicKey,!0).toString("hex");return a.toChecksumAddress(n)},{cbor:b}=s.extend;b.patchTags(Object.values(l).filter((e=>!!e.getTag())).map((e=>e.getTag()))),Object.keys(s).forEach((function(e){"default"!==e&&Object.defineProperty(r,e,{enumerable:!0,get:function(){return s[e]}})})),r.ETHSignature=C,r.EthSignRequest=p,r.findHDpatfromAddress=(e,t,r,n)=>{for(let s=0;s<r;s++){const r=k(t,"M/0/"+s);if(e.toLowerCase()==r.toLowerCase())return`${n}/0/${s}`}return null},r.generateAddressfromXpub=k}).call(this)}).call(this,e("buffer").Buffer)}}},{package:"@keystonehq/metamask-airgapped-keyring>@keystonehq/bc-ur-registry-eth"}],[979,{"./bc-ur-registry-eth.cjs.development.js":977,"./bc-ur-registry-eth.cjs.production.min.js":978},function(){with(this)return function(){"use strict";return function(e,t,r){t.exports=e("./bc-ur-registry-eth.cjs.production.min.js")}}},{package:"@keystonehq/metamask-airgapped-keyring>@keystonehq/bc-ur-registry-eth"}],[98,{lodash:5584},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:10,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=10;try{const e=function(e){const t=(0,n.merge)({},e,{ShapeShiftController:{shapeShiftTxList:e.shapeShiftTxList||[]}});return delete t.shapeShiftTxList,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #10${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$"}],[980,{"./ObservableStore":982},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.ComposedStore=void 0;const n=e("./ObservableStore");class s extends n.ObservableStore{constructor(e){super({}),this._children=e||{},Object.keys(this._children).forEach((e=>{const t=this._children[e];this._addChild(e,t)}))}_addChild(e,t){const r=t=>{const r=this.getState();r[e]=t,this.putState(r)};t.subscribe(r),r(t.getState())}}r.ComposedStore=s}}},{package:"@keystonehq/metamask-airgapped-keyring>@metamask/obs-store"}],[981,{"./ObservableStore":982},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.MergedStore=void 0;const n=e("./ObservableStore");class s extends n.ObservableStore{constructor(e=[]){super({}),this._children=e,e.forEach((e=>this._addChild(e))),this._updateWholeState()}_addChild(e){e.subscribe((()=>this._updateWholeState()))}_updateWholeState(){const e=this._children.map((e=>e.getState())),t=Object.assign({},...e);this.putState(t)}}r.MergedStore=s}}},{package:"@keystonehq/metamask-airgapped-keyring>@metamask/obs-store"}],[982,{"@metamask/safe-event-emitter":1629},function(){with(this)return function(){"use strict";return function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(r,"__esModule",{value:!0}),r.ObservableStore=void 0;const s=n(e("@metamask/safe-event-emitter"));class o extends s.default{constructor(e){super(),this._state=e||{}}getState(){return this._getState()}putState(e){this._putState(e),this.emit("update",e)}updateState(e){if(e&&"object"==typeof e){const t=this.getState();this.putState(Object.assign(Object.assign({},t),e))}else this.putState(e)}subscribe(e){this.on("update",e)}unsubscribe(e){this.removeListener("update",e)}_getState(){return this._state}_putState(e){this._state=e}}r.ObservableStore=o}}},{package:"@keystonehq/metamask-airgapped-keyring>@metamask/obs-store"}],[983,{stream:2437},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.storeAsStream=void 0;const n=e("stream");class s extends n.Duplex{constructor(e){super({objectMode:!0}),this.resume(),this.handler=e=>this.push(e),this.obsStore=e,this.obsStore.subscribe(this.handler)}pipe(e,t){const r=super.pipe(e,t);return e.write(this.obsStore.getState()),r}_write(e,t,r){this.obsStore.putState(e),r()}_read(e){return undefined}_destroy(e,t){this.obsStore.unsubscribe(this.handler),super._destroy(e,t)}}r.storeAsStream=function(e){return new s(e)}}}},{package:"@keystonehq/metamask-airgapped-keyring>@metamask/obs-store"}],[984,{"./ComposedStore":980,"./MergedStore":981,"./ObservableStore":982,"./asStream":983,"./transform":985},function(){with(this)return function(){"use strict";return function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){n===undefined&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){n===undefined&&(n=r),e[n]=t[r]}),s=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(r,"__esModule",{value:!0}),s(e("./asStream"),r),s(e("./ComposedStore"),r),s(e("./MergedStore"),r),s(e("./ObservableStore"),r),s(e("./transform"),r)}}},{package:"@keystonehq/metamask-airgapped-keyring>@metamask/obs-store"}],[985,{through2:986},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.storeTransformStream=void 0;const n=e("through2");r.storeTransformStream=function(e){return n.obj(((t,r,n)=>{try{return n(null,e(t)),undefined}catch(e){return n(e),undefined}}))}}}},{package:"@keystonehq/metamask-airgapped-keyring>@metamask/obs-store"}],[986,{_process:5832,"readable-stream":6831,util:2440,xtend:7303},function(){with(this)return function(){"use strict";return function(e,t,r){(function(r){(function(){var n=e("readable-stream").Transform,s=e("util").inherits,o=e("xtend");function i(e){n.call(this,e),this._destroyed=!1}function a(e,t,r){r(null,e)}function c(e){return function(t,r,n){return"function"==typeof t&&(n=r,r=t,t={}),"function"!=typeof r&&(r=a),"function"!=typeof n&&(n=null),e(t,r,n)}}s(i,n),i.prototype.destroy=function(e){if(!this._destroyed){this._destroyed=!0;var t=this;r.nextTick((function(){e&&t.emit("error",e),t.emit("close")}))}},t.exports=c((function(e,t,r){var n=new i(e);return n._transform=t,r&&(n._flush=r),n})),t.exports.ctor=c((function(e,t,r){function n(t){if(!(this instanceof n))return new n(t);this.options=o(e,t),i.call(this,this.options)}return s(n,i),n.prototype._transform=t,r&&(n.prototype._flush=r),n})),t.exports.obj=c((function(e,t,r){var n=new i(o({objectMode:!0,highWaterMark:16},e));return n._transform=t,r&&(n._flush=r),n}))}).call(this)}).call(this,e("_process"))}}},{package:"@keystonehq/metamask-airgapped-keyring>@metamask/obs-store>through2"}],[99,{lodash:5584},function(){with(this)return function(){"use strict";return function(e,t,r){Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;var n=e("lodash");var s={version:11,migrate(e){const t=(0,n.cloneDeep)(e);t.meta.version=11;try{const e=function(e){const t=e;return delete t.TOSHash,delete t.isDisclaimerConfirmed,t}(t.data);t.data=e}catch(e){console.warn(`MetaMask Migration #11${e.stack}`)}return Promise.resolve(t)}};r.default=s}}},{package:"$root$"}],[3,{"../../shared/constants/app":7316,"../../shared/constants/metametrics":7321,"../../shared/constants/time":7327,"../../shared/modules/mv3.utils":7337,"../../shared/modules/object.utils":7339,"./first-time-state":41,"./lib/createStreamSink":51,"./lib/ens-ipfs/setup":58,"./lib/get-first-preferred-lang-code":60,"./lib/getObjStructure":61,"./lib/local-store":62,"./lib/migrator":65,"./lib/network-store":66,"./lib/notification-manager":68,"./lib/setupSentry":85,"./lib/util":88,"./metamask-controller":89,"./migrations":163,"./platforms/extension":164,"@metamask/obs-store":1608,"@sentry/browser":1770,"debounce-stream":2615,"end-of-stream":2709,"eth-rpc-errors":2815,"extension-port-stream":2980,loglevel:5597,pump:5932,"webextension-polyfill":7290},function(){with(this)return function(){"use strict";return function(e,t,r){var n=D(e("end-of-stream")),s=D(e("pump")),o=D(e("debounce-stream")),i=D(e("loglevel")),a=D(e("webextension-polyfill")),c=e("@metamask/obs-store"),l=D(e("extension-port-stream")),d=e("@sentry/browser"),h=e("eth-rpc-errors"),u=e("../../shared/constants/app"),g=e("../../shared/constants/time"),p=e("../../shared/constants/metametrics"),f=e("../../shared/modules/mv3.utils"),m=e("../../shared/modules/object.utils"),y=D(e("./migrations")),C=D(e("./lib/migrator")),k=D(e("./platforms/extension")),b=D(e("./lib/local-store")),w=(D(e("./lib/network-store")),e("./lib/setupSentry")),v=D(e("./lib/createStreamSink")),T=x(e("./lib/notification-manager")),S=x(e("./metamask-controller")),_=D(e("./first-time-state")),M=D(e("./lib/get-first-preferred-lang-code")),P=D(e("./lib/getObjStructure")),E=D(e("./lib/ens-ipfs/setup")),A=e("./lib/util");function I(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,r=new WeakMap;return(I=function(e){return e?r:t})(e)}function x(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var r=I(t);if(r&&r.has(e))return r.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var i=s?Object.getOwnPropertyDescriptor(e,o):null;i&&(i.get||i.set)?Object.defineProperty(n,o,i):n[o]=e[o]}return n.default=e,r&&r.set(e,n),n}function D(e){return e&&e.__esModule?e:{default:e}}const{sentry:R}=global,N={..._.default},O={[u.ENVIRONMENT_TYPE_POPUP]:!0,[u.ENVIRONMENT_TYPE_NOTIFICATION]:!0,[u.ENVIRONMENT_TYPE_FULLSCREEN]:!0},U=["trezor-connect"];i.default.setDefaultLevel("info");const K=new k.default,q=new T.default;global.METAMASK_NOTIFIER=q;let L=!1,j=!1,B=!1;const F={},H={};let G;const $=new b.default;let W;const V=new URL("https://metamask.github.io/phishing-warning/v1.1.0/"),Q=async e=>{a.default.runtime.onConnect.removeListener(Q),await Y(e),i.default.info("MetaMask initialization complete.")};async function Y(e){const t=await async function(){const e=new C.default({migrations:y.default});e.on("error",console.warn),W=await $.get()||e.generateInitialState(N),W&&!W.data&&(W=e.generateInitialState(N),R.captureMessage("MetaMask - Empty vault found - unable to recover"));if(e.on("error",(e=>{const t=(0,P.default)(W);R.captureException(e,{extra:{vaultStructure:t}})})),W=await e.migrateData(W),!W)throw new Error("MetaMask - migrator returned undefined");$.isSupported?$.set(W):setTimeout((()=>{throw new Error("MetaMask - Localstore not supported")}));return W.data}(),r=await(0,M.default)();await function(e,t,r){function g(e){return W.data=e,W}G=new S.default({infuraProjectId:"1",showUserConfirmation:J,openPopup:X,initState:e,initLangCode:t,platform:K,notificationManager:q,browser:a.default,getRequestAccountTabIds:()=>H,getOpenMetamaskTabsIds:()=>F}),(0,E.default)({getCurrentChainId:G.networkController.getCurrentChainId.bind(G.networkController),getIpfsGateway:G.preferencesController.getIpfsGateway.bind(G.preferencesController),provider:G.provider}),(0,s.default)((0,c.storeAsStream)(G.store),(0,o.default)(1e3),(0,c.storeTransformStream)(g),(0,v.default)(k),(e=>{i.default.error("MetaMask - Persistence pipeline failed",e)})),y=G,global.sentryHooks.getSentryState=function(){const e=y.getState(),t=(0,m.maskObject)({metamask:e},w.SENTRY_STATE);return{browser:window.navigator.userAgent,store:t,version:K.getVersion()}};var y;let C=!1;async function k(e){if(!e)throw new Error("MetaMask - updated state is missing");if(!e.data)throw new Error("MetaMask - updated state does not have data");if($.isSupported)try{await $.set(e),C&&(C=!1)}catch(e){C||(C=!0,(0,d.captureException)(e)),i.default.error("error setting state in local store:",e)}}f.isManifestV3&&r&&M(r);a.default.runtime.onConnect.addListener(M),a.default.runtime.onConnectExternal.addListener(P);const b=()=>L||Boolean(Object.keys(F).length)||j,_=(e,t)=>{if(!1===e)G.onClientClosed();else{if(t===u.ENVIRONMENT_TYPE_FULLSCREEN&&Boolean(Object.keys(F).length))return;G.onEnvironmentTypeClosed(t)}};function M(e){var t;const r=e.name;if(U.includes(e.name))return;let s=!1;s=(0,A.getPlatform)()===u.PLATFORM_FIREFOX?O[r]:e.sender.origin===`chrome-extension://${a.default.runtime.id}`;const o=null!==(t=e.sender)&&void 0!==t&&t.url?new URL(e.sender.url):null;if(s){const t=new l.default(e);if(G.isClientOpen=!0,G.setupTrustedCommunication(t,e.sender),f.isManifestV3&&e.postMessage({name:"CONNECTION_READY"}),r===u.ENVIRONMENT_TYPE_POPUP&&(L=!0,(0,n.default)(t,(()=>{L=!1;const e=b();G.isClientOpen=e,_(e,u.ENVIRONMENT_TYPE_POPUP)}))),r===u.ENVIRONMENT_TYPE_NOTIFICATION&&(j=!0,(0,n.default)(t,(()=>{j=!1;const e=b();G.isClientOpen=e,_(e,u.ENVIRONMENT_TYPE_NOTIFICATION)}))),r===u.ENVIRONMENT_TYPE_FULLSCREEN){const r=e.sender.tab.id;F[r]=!0,(0,n.default)(t,(()=>{delete F[r];const e=b();G.isClientOpen=e,_(e,u.ENVIRONMENT_TYPE_FULLSCREEN)}))}}else if(o&&o.origin===V.origin&&o.pathname===V.pathname){const t=new l.default(e);G.setupPhishingCommunication({connectionStream:t})}else{if(e.sender&&e.sender.tab&&e.sender.url){const t=e.sender.tab.id,r=new URL(e.sender.url),{origin:n}=r;e.onMessage.addListener((e=>{e.data&&"eth_requestAccounts"===e.data.method&&(H[n]=t)}))}P(e)}}function P(e){const t=new l.default(e);G.setupUntrustedCommunication({connectionStream:t,sender:e.sender})}function I(){let e="";const t=x();t&&(e=String(t)),f.isManifestV3?(a.default.action.setBadgeText({text:e}),a.default.action.setBadgeBackgroundColor({color:"#037DD6"})):(a.default.browserAction.setBadgeText({text:e}),a.default.browserAction.setBadgeBackgroundColor({color:"#037DD6"}))}function x(){const e=G.txController.getUnapprovedTxCount(),{unapprovedMsgCount:t}=G.messageManager,{unapprovedPersonalMsgCount:r}=G.personalMessageManager,{unapprovedDecryptMsgCount:n}=G.decryptMessageManager,{unapprovedEncryptionPublicKeyMsgCount:s}=G.encryptionPublicKeyManager,{unapprovedTypedMessagesCount:o}=G.typedMessageManager;return e+t+r+n+s+o+G.approvalController.getTotalApprovalCount()+G.appStateController.waitingForUnlock.length}function D(){Object.keys(G.txController.txStateManager.getUnapprovedTxList()).forEach((e=>G.txController.txStateManager.setTxStatusRejected(e))),G.messageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>G.messageManager.rejectMsg(e.id,p.REJECT_NOTFICIATION_CLOSE_SIG))),G.personalMessageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>G.personalMessageManager.rejectMsg(e.id,p.REJECT_NOTFICIATION_CLOSE_SIG))),G.typedMessageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>G.typedMessageManager.rejectMsg(e.id,p.REJECT_NOTFICIATION_CLOSE_SIG))),G.decryptMessageManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>G.decryptMessageManager.rejectMsg(e.id,p.REJECT_NOTFICIATION_CLOSE))),G.encryptionPublicKeyManager.messages.filter((e=>"unapproved"===e.status)).forEach((e=>G.encryptionPublicKeyManager.rejectMsg(e.id,p.REJECT_NOTFICIATION_CLOSE))),G.approvalController.clear(h.ethErrors.provider.userRejectedRequest()),I()}return I(),G.txController.on(S.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,I),G.messageManager.on(S.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,I),G.personalMessageManager.on(S.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,I),G.decryptMessageManager.on(S.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,I),G.encryptionPublicKeyManager.on(S.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,I),G.typedMessageManager.on(S.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,I),G.appStateController.on(S.METAMASK_CONTROLLER_EVENTS.UPDATE_BADGE,I),G.controllerMessenger.subscribe(S.METAMASK_CONTROLLER_EVENTS.APPROVAL_STATE_CHANGE,I),q.on(T.NOTIFICATION_MANAGER_EVENTS.POPUP_CLOSED,(({automaticallyClosed:e})=>{e?x()>0&&J():D()})),Promise.resolve()}(t,r,e),await async function(){let e;try{const t=new URL("https://metamask.github.io/phishing-warning/v1.1.0/");let r,n;t.hash="#extensionStartup",e=window.document.createElement("iframe"),e.setAttribute("src",t.href),e.setAttribute("sandbox","allow-scripts allow-same-origin");const s=new Promise(((e,t)=>{r=e,n=t}));e.addEventListener("load",r),window.document.body.appendChild(e),setTimeout((()=>n(new z)),1e3),await s}catch(e){e instanceof z?console.warn("Phishing warning page timeout; page not guaraneteed to work offline."):console.error("Failed to initialize phishing warning page",e)}finally{e&&e.remove()}}(),i.default.info("MetaMask initialization complete.")}f.isManifestV3?a.default.runtime.onConnect.addListener(Q):Y().catch(i.default.error);class z extends Error{constructor(){super("Timeout failed")}}async function J(){const e=await K.getActiveTabs(),t=Boolean(e.find((e=>F[e.id]))),r=e.length>0&&e[0].extData&&e[0].extData.indexOf("vivaldi_tab")>-1;if(!B&&(r||!L)&&!t){B=!0;try{await q.showPopup()}finally{B=!1}}}async function X(){await J(),await new Promise((e=>{const t=setInterval((()=>{j||(clearInterval(t),e())}),g.SECOND)}))}const Z=()=>{if(G)return G.metaMetricsController.updateTraits({[p.TRAITS.INSTALL_DATE_EXT]:(new Date).toISOString().split("T")[0]}),void G.metaMetricsController.addEventBeforeMetricsOptIn({category:p.EVENT.CATEGORIES.APP,event:p.EVENT_NAMES.APP_INSTALLED,properties:{}});setTimeout((()=>{Z()}),1e3)};a.default.runtime.onInstalled.addListener((({reason:e})=>{"install"===e&&(Z(),K.openExtensionInBrowser())}))}}},{package:"$root$"}]],[3],{});